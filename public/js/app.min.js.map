{"version":3,"sources":["app.coffee","app.js","routes.coffee","client.coffee","loading.coffee","location.coffee","logger.coffee","property-type.coffee","property.coffee","session.coffee","storage.coffee","user-group.coffee","user.coffee","address.coffee","date-br.coffee","date-time-br.coffee","decimals.coffee","error-import.coffee","first-name.coffee","meters.coffee","order-by-string.coffee","phone-br.coffee","range.coffee","types-to-text.coffee","yes-or-no.coffee","confirm.coffee","file.coffee","account.coffee","clients.coffee","login.coffee","properties.coffee","search.coffee","users.coffee"],"names":["angular","module","run","$rootScope","$state","RESOURCES","storage","UserService","error","success","loading","fileUrl","API_URL","newProperties","page","name","showMenu","showSubmenu","showModal","appTitle","forms","doLogout","toggleModal","toggleMenu","toggleSubmenu","$on","current","split","group","getGroup","getName","photo","getPhoto","requiredLogin","isLogged","go","constant","config","$stateProvider","$httpProvider","$urlRouterProvider","state","url","views","main","templateUrl","controller","error@login","abstract","header","footer","main@","submenu@dashboard.users","error@dashboard.users","success@dashboard.users","loading@dashboard.users","submenu@dashboard.users.new","error@dashboard.users.new","loading@dashboard.users.new","submenu@dashboard.users.edit","error@dashboard.users.edit","loading@dashboard.users.edit","submenu@dashboard.clients","search@dashboard.clients","error@dashboard.clients","success@dashboard.clients","loading@dashboard.clients","error@dashboard.clients.new","loading@dashboard.clients.new","error@dashboard.clients.edit","submenu@dashboard.properties","search@dashboard.properties","error@dashboard.properties","success@dashboard.properties","loading@dashboard.properties","submenu@dashboard.properties.new","property@dashboard.properties.new","interest@dashboard.properties.new","error@dashboard.properties.new","loading@dashboard.properties.new","submenu@dashboard.properties.edit","property@dashboard.properties.edit","interest@dashboard.properties.edit","error@dashboard.properties.edit","loading@dashboard.properties.edit","submenu@dashboard.confirm","modal@dashboard.properties.confirm","error@dashboard.confirm","loading@dashboard.confirm","submenu@dashboard.account","error@dashboard.account","loading@dashboard.account","submenu@dashboard.search","submenu-filter@dashboard.search","filters-interest@dashboard.search","filters-property@dashboard.search","error@dashboard.search","loading@dashboard.search","otherwise","interceptors","push","defaults","useXDomain","headers","common","service","$http","apiUrl","create","client","post","update","put","_id","saveOrUpdate","this","getAll","get","id","delete","show","hide","getAllStates","getCitiesByState","clean","modalError","errorString","successString","items","title","code","$httpParamSerializer","property","search","query","importCsv","file","form","FormData","append","withCredentials","Content-Type","transformRequest","identity","$injector","isUnloggedPage","indexOf","request","getSessionToken","responseError","rejection","data","localStorage","getItem","setCodes","codes","setItem","token","type","setPhoto","updateToken","getCode","removeItem","$q","doLogin","user","savePhoto","q","defer","resolve","then","response","reject","promise","getMyAccount","filter","address","fullAddress","street","number","complement","condominium","input","date","moment","format","locale","calendar","sameElse","num","toString","replace","fields","names","meters","array","reverse","result","sort","object1","object2","isUndefined","localeCompare","length","PropertyTypeService","propertyType","map","item","n","i","j","ref","res","types","len","values","apart","land","car","house","join","UserGroupService","directive","priority","restrict","link","scope","element","attrs","message","ngConfirmClick","bind","e","confirm","stopImmediatePropagation","preventDefault","$parse","require","ngModel","$scope","elem","changeHandler","formatter","value","$formatters","$parsers","newValue","$modelValue","assign","$viewValue","$render","$timeout","event","fileReader","files","fn","target","FileReader","readAsDataURL","onload","thumbnail","$setViewValue","$apply","$file","$event","console","log","$loading","$logger","edit","fileName","canEdit","selectPhoto","doUpdate","$valid","$stateParams","$filter","ClientService","clients","doDelete","index","splice","PropertyService","LocationService","cities","convertData","revertData","properties","states","showCities","currentCities","doEditCsv","errors","cep","doTryAgain","saveOrUpdateModal","doRemoveCsv","ref1","ref2","ref3","ref4","ref5","ref6","interest","allMeters","allVacancies","allFloors","allValues","allIptus","allCondominiums","allLocations","min","max","vacancy","floor","iptu","location","toFixed","login","origin","neighborhood","doUploadCSV","content","find","resetValues","showFilters","toggleFilters","doFilter","users","groups"],"mappings":"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","file":"app.min.js","sourcesContent":[null,"'use strict';\nangular.module('oneImobiliaria', ['ui.router', 'ui.utils.masks', 'ui.slider']).run([\n  '$rootScope', '$state', 'RESOURCES', 'storage', 'UserService', function($rootScope, $state, RESOURCES, storage, UserService) {\n    $rootScope.error = false;\n    $rootScope.success = false;\n    $rootScope.loading = false;\n    $rootScope.fileUrl = RESOURCES.API_URL + '/files/';\n    $rootScope.newProperties = {};\n    $rootScope.page = '';\n    $rootScope.name = '';\n    $rootScope.showMenu = false;\n    $rootScope.showSubmenu = false;\n    $rootScope.showModal = false;\n    $rootScope.appTitle = 'One Consultoria Imobiliária';\n    $rootScope.forms = {};\n    $rootScope.doLogout = function() {\n      return UserService.doLogout();\n    };\n    $rootScope.toggleModal = function() {\n      return $rootScope.showModal = !$rootScope.showModal;\n    };\n    $rootScope.toggleMenu = function() {\n      return $rootScope.showMenu = !$rootScope.showMenu;\n    };\n    $rootScope.toggleSubmenu = function() {\n      return $rootScope.showSubmenu = !$rootScope.showSubmenu;\n    };\n    return $rootScope.$on('$stateChangeSuccess', function() {\n      var page;\n      page = $state.current.name.split('.');\n      $rootScope.page = page[1] || '';\n      $rootScope.group = storage.getGroup();\n      $rootScope.name = storage.getName();\n      $rootScope.photo = storage.getPhoto();\n      $rootScope.error = false;\n      $rootScope.success = false;\n      $rootScope.loading = false;\n      $rootScope.showMenu = false;\n      $rootScope.showSubmenu = false;\n      if ($state.current.requiredLogin && !UserService.isLogged()) {\n        UserService.doLogout();\n      }\n      if (!$state.current.requiredLogin && UserService.isLogged()) {\n        $state.go('dashboard.home');\n      }\n      if ($rootScope.page === 'users' && $rootScope.group !== 'admin') {\n        return $state.go('dashboard.home');\n      }\n    });\n  }\n]).constant('RESOURCES', {\n  'API_URL': 'http://localhost:3000/api'\n});\n\n'use strict';\nangular.module('oneImobiliaria').config([\n  '$stateProvider', '$httpProvider', '$urlRouterProvider', function($stateProvider, $httpProvider, $urlRouterProvider) {\n    $stateProvider.state('login', {\n      url: '/login',\n      views: {\n        main: {\n          templateUrl: 'app/views/login/index.html',\n          controller: 'LoginCtrl'\n        },\n        'error@login': {\n          templateUrl: 'app/views/error.html'\n        }\n      },\n      requiredLogin: false\n    }).state('dashboard', {\n      url: '/dashboard',\n      abstract: true,\n      views: {\n        main: {},\n        header: {\n          templateUrl: 'app/views/header.html'\n        },\n        footer: {\n          templateUrl: 'app/views/footer.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.home', {\n      url: '/home',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/home/index.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users', {\n      url: '/users',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/index.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users': {\n          templateUrl: 'app/views/users/submenu.html'\n        },\n        'error@dashboard.users': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.users': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.users': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users.new': {\n          templateUrl: 'app/views/users/form-submenu.html'\n        },\n        'error@dashboard.users.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users.edit': {\n          templateUrl: 'app/views/users/form-submenu.html'\n        },\n        'error@dashboard.users.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients', {\n      url: '/clients',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/index.html',\n          controller: 'ClientsCtrl'\n        },\n        'submenu@dashboard.clients': {\n          templateUrl: 'app/views/clients/submenu.html'\n        },\n        'search@dashboard.clients': {\n          templateUrl: 'app/views/clients/search.html'\n        },\n        'error@dashboard.clients': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.clients': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.clients': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.clients.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties', {\n      url: '/properties',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/index.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties': {\n          templateUrl: 'app/views/properties/submenu.html'\n        },\n        'search@dashboard.properties': {\n          templateUrl: 'app/views/properties/search.html'\n        },\n        'error@dashboard.properties': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.properties': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.properties': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.confirm', {\n      url: '/confirm',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/confirm/index.html',\n          controller: 'ConfirmCtrl'\n        },\n        'submenu@dashboard.confirm': {\n          templateUrl: 'app/views/confirm/submenu.html'\n        },\n        'modal@dashboard.properties.confirm': {\n          templateUrl: 'app/views/confirm/modal.html'\n        },\n        'error@dashboard.confirm': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.confirm': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.account', {\n      url: '/account',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/account/form.html',\n          controller: 'AccountCtrl'\n        },\n        'submenu@dashboard.account': {\n          templateUrl: 'app/views/account/form-submenu.html'\n        },\n        'error@dashboard.account': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.account': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.search', {\n      url: '/search',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/search/index.html',\n          controller: 'SearchCtrl'\n        },\n        'submenu@dashboard.search': {\n          templateUrl: 'app/views/search/submenu.html'\n        },\n        'submenu-filter@dashboard.search': {\n          templateUrl: 'app/views/search/submenu-filter.html'\n        },\n        'filters-interest@dashboard.search': {\n          templateUrl: 'app/views/search/filters-interest.html',\n          controller: 'AccountCtrl'\n        },\n        'filters-property@dashboard.search': {\n          templateUrl: 'app/views/search/filters-property.html',\n          controller: 'AccountCtrl'\n        },\n        'error@dashboard.search': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.search': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    });\n    $urlRouterProvider.otherwise('/login');\n    $httpProvider.interceptors.push('sessionInjector');\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json';\n    return delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('ClientService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/clients';\n    return {\n      create: function(client) {\n        return $http.post(apiUrl, client);\n      },\n      update: function(client) {\n        return $http.put(apiUrl + '/' + client._id, client);\n      },\n      saveOrUpdate: function(client) {\n        if (client._id) {\n          return this.update(client);\n        } else {\n          return this.create(client);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$loading', [\n  '$rootScope', function($rootScope) {\n    return {\n      show: function() {\n        return $rootScope.loading = true;\n      },\n      hide: function() {\n        return $rootScope.loading = false;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('LocationService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/cities';\n    return {\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      getAllStates: function() {\n        return $http.get(apiUrl + '/states');\n      },\n      getCitiesByState: function(state) {\n        return $http.get(apiUrl + '/states/' + state);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$logger', [\n  '$rootScope', function($rootScope) {\n    return {\n      clean: function() {\n        $rootScope.success = false;\n        $rootScope.error = false;\n        return $rootScope.modalError = false;\n      },\n      error: function(errorString) {\n        this.clean();\n        return $rootScope.error = errorString;\n      },\n      modalError: function(errorString) {\n        this.clean();\n        return $rootScope.modalError = errorString;\n      },\n      success: function(successString) {\n        this.clean();\n        return $rootScope.success = successString;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyTypeService', function() {\n  var items;\n  items = [\n    {\n      title: 'Apartamento',\n      code: 'apartament'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Terreno',\n      code: 'land'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Carro',\n      code: 'car'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyService', [\n  '$http', '$state', 'RESOURCES', '$httpParamSerializer', function($http, $state, RESOURCES, $httpParamSerializer) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/properties';\n    return {\n      create: function(property) {\n        return $http.post(apiUrl, property);\n      },\n      update: function(property) {\n        return $http.put(apiUrl + '/' + property._id, property);\n      },\n      saveOrUpdate: function(property) {\n        if (property._id) {\n          return this.update(property);\n        } else {\n          return this.create(property);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      },\n      search: function(query) {\n        return $http.get(apiUrl + '/search?' + $httpParamSerializer(query));\n      },\n      importCsv: function(file) {\n        var form;\n        form = new FormData();\n        form.append('csv', file);\n        return $http.post(apiUrl + '/import/csv', form, {\n          withCredentials: false,\n          headers: {\n            'Content-Type': void 0\n          },\n          transformRequest: angular.identity\n        });\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('sessionInjector', [\n  'storage', '$injector', function(storage, $injector) {\n    var isUnloggedPage;\n    isUnloggedPage = function(config) {\n      return config.url.indexOf('auth') > -1 || config.url.indexOf('remember') > -1;\n    };\n    return {\n      request: function(config) {\n        if (!isUnloggedPage(config)) {\n          config.headers['x-access-token'] = storage.getSessionToken();\n        }\n        return config;\n      },\n      responseError: function(rejection) {\n        if (rejection.data.error.name === 'TokenExpiredError') {\n          storage.clean();\n          $injector.get('$state').go('login');\n        }\n        return rejection;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('storage', function() {\n  return {\n    isLogged: function() {\n      return (localStorage.getItem('x-code-one') !== null) && (localStorage.getItem('code-one') !== null);\n    },\n    setCodes: function(codes) {\n      localStorage.setItem('x-code-one', codes.token);\n      localStorage.setItem('code-one', codes.code);\n      localStorage.setItem('group-one', codes.type);\n      localStorage.setItem('name-one', codes.name);\n      return localStorage.setItem('photo-one', codes.photo);\n    },\n    setPhoto: function(photo) {\n      return localStorage.setItem('photo-one', photo);\n    },\n    updateToken: function(token) {\n      return localStorage.setItem('x-code-one', token);\n    },\n    getSessionToken: function() {\n      return localStorage.getItem('x-code-one');\n    },\n    getCode: function() {\n      return localStorage.getItem('code-one');\n    },\n    getName: function() {\n      return localStorage.getItem('name-one') || '';\n    },\n    getGroup: function() {\n      return localStorage.getItem('group-one') || '';\n    },\n    getPhoto: function() {\n      if (localStorage.getItem('photo-one') === 'undefined') {\n        return false;\n      }\n      return localStorage.getItem('photo-one');\n    },\n    clean: function() {\n      localStorage.removeItem('x-code-one');\n      localStorage.removeItem('code-one');\n      localStorage.removeItem('group-one');\n      return localStorage.removeItem('name-one');\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserGroupService', function() {\n  var items;\n  items = [\n    {\n      title: 'Administrador(a)',\n      code: 'admin'\n    }, {\n      title: 'Corretor(a)',\n      code: 'broker'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserService', [\n  '$http', '$q', '$state', 'storage', 'RESOURCES', function($http, $q, $state, storage, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/accounts';\n    return {\n      isLogged: function() {\n        return storage.isLogged();\n      },\n      doLogin: function(user) {\n        return $http.post(apiUrl + '/auth', user);\n      },\n      doLogout: function() {\n        storage.clean();\n        $state.go('login');\n      },\n      create: function(user) {\n        return $http.post(apiUrl, user);\n      },\n      update: function(user) {\n        return $http.put(apiUrl + '/' + user._id, user);\n      },\n      savePhoto: function(photo) {\n        var file, q;\n        q = $q.defer();\n        if ((photo == null) || (photo.name == null)) {\n          q.resolve({\n            data: {\n              file: null\n            }\n          });\n        } else {\n          file = new FormData;\n          file.append('photo', photo);\n          $http.post(apiUrl + '/photo', file, {\n            withCredentials: false,\n            headers: {\n              'Content-Type': void 0\n            },\n            transformRequest: angular.identity\n          }).then(function(response) {\n            return q.resolve(response);\n          })[\"catch\"](function(error) {\n            return q.reject(error);\n          });\n        }\n        return q.promise;\n      },\n      saveOrUpdate: function(user) {\n        if (user._id) {\n          return this.update(user);\n        } else {\n          return this.create(user);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      getMyAccount: function() {\n        return $http.get(apiUrl + '/' + storage.getCode());\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('address', function() {\n  return function(address) {\n    var fullAddress;\n    if ((address == null) || ((address.street == null) && (address.number == null) && (address.complement == null))) {\n      return 'Indefinido';\n    }\n    fullAddress = '';\n    if (address.street != null) {\n      fullAddress += address.street;\n    }\n    if (address.number != null) {\n      fullAddress += ', ' + address.number;\n    }\n    if (address.complement != null) {\n      fullAddress += ' - ' + address.complement;\n    }\n    if (address.condominium != null) {\n      fullAddress += ' - ' + address.condominium;\n    }\n    return fullAddress;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateBr', function() {\n  return function(input) {\n    var date;\n    if (input == null) {\n      return '';\n    }\n    date = input.split('T');\n    return moment(date[0]).format('DD/MM/YYYY');\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateTimeBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    moment.locale('pt-br');\n    return moment(input).calendar(null, {\n      sameElse: 'DD/MM/YYYY - H:mm'\n    });\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('decimals', function() {\n  return function(num) {\n    if (num == null) {\n      return '';\n    }\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('errorImport', function() {\n  return function(code, fields) {\n    var error;\n    error = '';\n    switch (code) {\n      case 1:\n        error = 'Este cliente já possui um imóvel cadastrado.';\n        break;\n      case 5:\n        error = 'Erro(s) no(s) campo(s) de cliente: ' + fields + '.';\n        break;\n      case 6:\n        error = 'Erro(s) no(s) campo(s) de imóvel: ' + fields + '.';\n        break;\n      default:\n        error = 'Erro ao salvar item. Por favor, verifique o dados inseridos na tabela.';\n    }\n    return error;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('firstName', function() {\n  return function(name) {\n    var names;\n    if ((name == null) || name === '') {\n      return '';\n    }\n    names = name.split(' ');\n    return names[0];\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('meters', function() {\n  return function(meters) {\n    if ((meters == null) || meters === '') {\n      meters = '0';\n    }\n    return meters + ' m²';\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('orderByString', function() {\n  return function(array, property, reverse) {\n    var result;\n    result = array.sort(function(object1, object2) {\n      if (angular.isUndefined(property)) {\n        object1.localeCompare(object2);\n      }\n      return object1[property].localeCompare(object2[property]);\n    });\n    if (reverse) {\n      return result.reverse();\n    } else {\n      return result;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('phoneBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    input = input.replace(/[^0-9]/g, \"\");\n    if (input.length < 11) {\n      return input.replace(/(\\d{2})(\\d{4})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    } else {\n      return input.replace(/(\\d{2})(\\d{5})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('propertyType', [\n  'PropertyTypeService', function(PropertyTypeService) {\n    return function(propertyType) {\n      var items, title;\n      if ((propertyType == null) || propertyType === '') {\n        return '';\n      }\n      items = PropertyTypeService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === propertyType) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('range', function() {\n  return function(n) {\n    var i, j, ref, res;\n    res = [];\n    for (i = j = 1, ref = n + 1; j < ref; i = j += 1) {\n      res.push(i);\n    }\n    return res;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('typesToText', function() {\n  return function(types) {\n    var i, items, len, type, values;\n    if (!((types != null) && types.length > 0)) {\n      return 'Indefinido';\n    }\n    items = {\n      apart: 'Apartamento',\n      land: 'Tereno',\n      car: 'Carro',\n      house: 'Case'\n    };\n    values = [];\n    for (i = 0, len = types.length; i < len; i++) {\n      type = types[i];\n      values.push(items[type]);\n    }\n    return values.join(' | ');\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('groupName', [\n  'UserGroupService', function(UserGroupService) {\n    return function(group) {\n      var items, title;\n      if ((group == null) || group === '') {\n        return '';\n      }\n      items = UserGroupService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === group) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('yesOrNo', function() {\n  return function(type) {\n    if (type) {\n      return 'Sim';\n    } else {\n      return 'Não';\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('ngConfirmClick', function() {\n  return {\n    priority: -1,\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var message;\n      message = attrs.ngConfirmClick;\n      return element.bind('click', function(e) {\n        if ((message != null) && !confirm(message)) {\n          e.stopImmediatePropagation();\n          return e.preventDefault();\n        }\n      });\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('decimals', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        formatter = function(value) {\n          if (value == null) {\n            return '';\n          }\n          return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n        };\n        ngModel.$formatters.push(function(value) {\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return formatter(value);\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').directive('file', [\n  '$parse', '$timeout', function($parse, $timeout) {\n    return {\n      require: \"ngModel\",\n      restrict: 'A',\n      link: function($scope, element, attrs, ngModel) {\n        var changeHandler;\n        changeHandler = function(event) {\n          var file, fileReader, files, fn;\n          files = event.target.files;\n          file = files[0];\n          if (typeof attrs['ngFileSelected'] === 'undefined') {\n            fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            return fileReader.onload = function(e) {\n              file.thumbnail = e.target.result;\n              ngModel.$setViewValue(file);\n              return $scope.$apply();\n            };\n          } else {\n            fn = $parse(attrs['ngFileSelected']);\n            return $timeout(function() {\n              return fn($scope, {\n                $file: file,\n                $event: event\n              });\n            });\n          }\n        };\n        return element.bind('change', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').directive('meters', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        console.log(ngModel.$modelValue);\n        formatter = function(value) {\n          if (value == null) {\n            value = 0;\n          }\n          value = value.toString().replace('m²', '');\n          value = value.toString().replace(/\\D/g, '');\n          return value + 'm²';\n        };\n        ngModel.$formatters.push(function(value) {\n          console.log(value);\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return value.toString().replace('m²', '');\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          console.log(newValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('AccountCtrl', [\n  '$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', function($scope, $rootScope, $loading, $logger, storage, UserService) {\n    $scope.user = {};\n    $scope.edit = false;\n    $scope.file = {};\n    $scope.fileName = 'Selecione um arquivo';\n    $loading.show();\n    UserService.getMyAccount().then(function(response) {\n      $scope.user = response.data;\n      if ($scope.user.photo == null) {\n        $scope.user.photo = false;\n      }\n      return $loading.hide();\n    })[\"catch\"](function(response) {\n      $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.');\n      return $loading.hide();\n    });\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.selectPhoto = function() {\n      if ($scope.file.name == null) {\n        $scope.file = {};\n        $scope.fileName = 'Selecione um arquivo';\n        return false;\n      }\n      return $scope.fileName = $scope.file.name;\n    };\n    return $scope.doUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.savePhoto($scope.file).then(function(response) {\n        if (response.data.file != null) {\n          $scope.user.photo = response.data.file;\n          storage.setPhoto(response.data.file);\n        }\n        return UserService.update($scope.user);\n      }).then(function(response) {\n        $logger.success('Sua conta foi atualizada com sucesso!');\n        storage.updateToken(response.data.token);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        console.log(response);\n        $logger.error('Erro ao editar sua conta. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('ClientsCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) {\n    $scope.client = {};\n    $scope.clients = [];\n    $scope.search = {};\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      ClientService.get($stateParams.id).then(function(response) {\n        $scope.client = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      ClientService.getAll().then(function(response) {\n        $scope.clients = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.client.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return ClientService.saveOrUpdate($scope.client).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.clients');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var client;\n      client = $scope.clients[index];\n      if (client._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return ClientService[\"delete\"](client._id).then(function(response) {\n        $logger.success('Cliente excluído com sucesso!');\n        $scope.clients.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('ConfirmCtrl', [\n  '$scope', '$rootScope', '$q', '$state', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', function($scope, $rootScope, $q, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) {\n    var cities, convertData, revertData, saveOrUpdate;\n    $scope.properties = [];\n    $scope.cities = [];\n    $scope.states = [];\n    $scope.clients = [];\n    $scope.search = {};\n    cities = [];\n    $scope.edit = true;\n    $loading.show();\n    LocationService.getAllStates().then(function(response) {\n      $scope.states = response.data.sort();\n      return ClientService.getAll();\n    }).then(function(response) {\n      $scope.clients = $filter('orderByString')(response.data, 'name');\n      return $loading.hide();\n    })[\"catch\"](function(response) {\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n      return $loading.hide();\n    });\n    $scope.showCities = function(state) {\n      if (cities[state] != null) {\n        $scope.cities = cities[state];\n        return false;\n      }\n      $loading.show();\n      return LocationService.getCitiesByState(state).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[state] = currentCities;\n        return $loading.hide();\n      })[\"catch\"](function() {\n        return $loading.hide();\n      });\n    };\n    $scope.doEditCsv = function(index) {\n      var item, ref;\n      item = $scope.newProperties.errors[index];\n      $scope.property = item.property;\n      $scope.property.client = item.client._id;\n      if (((ref = $scope.property.address) != null ? ref.cep : void 0) != null) {\n        $scope.property.address.cep = $scope.property.address.cep.replace(/[^0-9.]/g, \"\");\n      }\n      delete $scope.property._id;\n      return $rootScope.toggleModal();\n    };\n    $scope.doTryAgain = function(index) {\n      var item, property;\n      item = $scope.newProperties.errors[index];\n      property = item.property;\n      property.client = item.client._id;\n      delete property._id;\n      $scope.property = property;\n      return saveOrUpdate().then(function() {\n        return $scope.newProperties.errors.splice(index, 1);\n      });\n    };\n    $scope.saveOrUpdateModal = function(index) {\n      if (!$rootScope.forms.property.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      return saveOrUpdate().then(function() {\n        $scope.newProperties.errors.splice(index, 1);\n        return $rootScope.toggleModal();\n      });\n    };\n    $scope.doRemoveCsv = function(index) {\n      return $scope.newProperties.errors.splice(index, 1);\n    };\n    saveOrUpdate = function() {\n      var promise;\n      if ($scope.property == null) {\n        return false;\n      }\n      promise = $q.defer();\n      $loading.show();\n      revertData();\n      return PropertyService.saveOrUpdate($scope.property).then(function(response) {\n        $loading.hide();\n        return promise.resolve();\n      })[\"catch\"](function(response) {\n        promise.reject();\n        if (response.data.code === 8) {\n          $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.');\n        } else {\n          $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.');\n        }\n        return $loading.hide();\n      });\n    };\n    convertData = function() {\n      var ref, ref1, ref2, ref3, ref4, ref5, ref6;\n      $scope.property.interest.allMeters = [10, 500];\n      $scope.property.interest.allVacancies = [0, 50];\n      $scope.property.interest.allFloors = [1, 30];\n      $scope.property.interest.allValues = [1000, 5000000];\n      $scope.property.interest.allIptus = [1000, 15000];\n      $scope.property.interest.allCondominiums = [1000, 500000];\n      $scope.property.interest.allLocations = [1000, 50000];\n      if (((ref = $scope.property.interest) != null ? ref.meters : void 0) != null) {\n        $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min;\n        $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max;\n      }\n      if (((ref1 = $scope.property.interest) != null ? ref1.condominium : void 0) != null) {\n        $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min;\n        $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max;\n      }\n      if (((ref2 = $scope.property.interest) != null ? ref2.vacancy : void 0) != null) {\n        $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min;\n        $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max;\n      }\n      if (((ref3 = $scope.property.interest) != null ? ref3.floor : void 0) != null) {\n        $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min;\n        $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max;\n      }\n      if (((ref4 = $scope.property.interest) != null ? ref4.value : void 0) != null) {\n        $scope.property.interest.allValues[0] = $scope.property.interest.value.min;\n        $scope.property.interest.allValues[1] = $scope.property.interest.value.max;\n      }\n      if (((ref5 = $scope.property.interest) != null ? ref5.iptu : void 0) != null) {\n        $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min;\n        $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max;\n      }\n      if (((ref6 = $scope.property.interest) != null ? ref6.location : void 0) != null) {\n        $scope.property.interest.allLocations[0] = $scope.property.interest.location.min;\n        return $scope.property.interest.allLocations[1] = $scope.property.interest.location.max;\n      }\n    };\n    return revertData = function() {\n      $scope.property.value = $scope.property.value.toFixed(2);\n      $scope.property.condominium = $scope.property.condominium.toFixed(2);\n      $scope.property.location = $scope.property.location.toFixed(2);\n      $scope.property.iptu = $scope.property.iptu.toFixed(2);\n      if ($scope.property.interest.allMeters != null) {\n        $scope.property.interest.meters = {\n          min: $scope.property.interest.allMeters[0],\n          max: $scope.property.interest.allMeters[1]\n        };\n        delete $scope.property.interest.allMeters;\n      }\n      if ($scope.property.interest.allCondominiums != null) {\n        $scope.property.interest.condominium = {\n          min: $scope.property.interest.allCondominiums[0],\n          max: $scope.property.interest.allCondominiums[1]\n        };\n        delete $scope.property.interest.allCondominiums;\n      }\n      if ($scope.property.interest.allVacancies != null) {\n        $scope.property.interest.vacancy = {\n          min: $scope.property.interest.allVacancies[0],\n          max: $scope.property.interest.allVacancies[1]\n        };\n        delete $scope.property.interest.allVacancies;\n      }\n      if ($scope.property.interest.allFloors != null) {\n        $scope.property.interest.floor = {\n          min: $scope.property.interest.allFloors[0],\n          max: $scope.property.interest.allFloors[1]\n        };\n        delete $scope.property.interest.allFloors;\n      }\n      if ($scope.property.interest.allValues != null) {\n        $scope.property.interest.value = {\n          min: $scope.property.interest.allValues[0],\n          max: $scope.property.interest.allValues[1]\n        };\n        delete $scope.property.interest.allValues;\n      }\n      if ($scope.property.interest.allIptus != null) {\n        $scope.property.interest.iptu = {\n          min: $scope.property.interest.allIptus[0],\n          max: $scope.property.interest.allIptus[1]\n        };\n        delete $scope.property.interest.allIptus;\n      }\n      if ($scope.property.interest.allLocations != null) {\n        $scope.property.interest.location = {\n          min: $scope.property.interest.allLocations[0],\n          max: $scope.property.interest.allLocations[1]\n        };\n        return delete $scope.property.interest.allLocations;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('LoginCtrl', [\n  '$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', function($scope, $rootScope, $state, $logger, storage, UserService) {\n    $scope.user = {};\n    return $scope.doLogin = function() {\n      if (!$rootScope.forms.login.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $scope.user.origin = 'admin';\n      return UserService.doLogin($scope.user).then(function(response) {\n        storage.setCodes(response.data);\n        return $state.go('dashboard.home');\n      })[\"catch\"](function(response) {\n        return $logger.error('Usuário e/ou senha inválido(s).');\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('PropertiesCtrl', [\n  '$scope', '$rootScope', '$q', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', function($scope, $rootScope, $q, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) {\n    var cities, convertData, revertData;\n    $scope.properties = [];\n    $scope.cities = [];\n    $scope.states = [];\n    $scope.clients = [];\n    $scope.search = {};\n    cities = [];\n    $scope.edit = true;\n    $scope.property = {\n      code: 123,\n      value: 500000,\n      address: {\n        street: 'Rua Simões Delgado',\n        number: 15,\n        neighborhood: 'Jardim Nove de Julho',\n        condominium: 'Condominio de Teste'\n      }\n    };\n    $loading.show();\n    if ($stateParams.id) {\n      PropertyService.get($stateParams.id).then(function(response) {\n        $scope.property = response.data;\n        convertData();\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return LocationService.getCitiesByState($scope.property.address.state);\n      }).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[$scope.property.address.state] = currentCities;\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      PropertyService.getAll().then(function(response) {\n        $scope.properties = $filter('orderBy')(response.data, '-created');\n        convertData();\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.showCities = function(state) {\n      if (cities[state] != null) {\n        $scope.cities = cities[state];\n        return false;\n      }\n      $loading.show();\n      return LocationService.getCitiesByState(state).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[state] = currentCities;\n        return $loading.hide();\n      })[\"catch\"](function() {\n        return $loading.hide();\n      });\n    };\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.property.$valid || ($scope.property == null)) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      revertData();\n      return PropertyService.saveOrUpdate($scope.property).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.properties');\n      })[\"catch\"](function(response) {\n        if (response.data.code === 8) {\n          $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.');\n        } else {\n          $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.');\n        }\n        return $loading.hide();\n      });\n    };\n    $scope.doDelete = function(index) {\n      var property;\n      property = $scope.properties[index];\n      if (property._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return PropertyService[\"delete\"](property._id).then(function(response) {\n        $logger.success('Imóvel excluído com sucesso!');\n        $scope.properties.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    $scope.doUploadCSV = function(file) {\n      if ((file == null) || file.type !== 'text/csv') {\n        $logger.error('Por favor, selecione um arquivo válido do tipo .csv');\n        return false;\n      }\n      $rootScope.newProperties = {};\n      $loading.show();\n      return PropertyService.importCsv(file).then(function(response) {\n        $scope.file = null;\n        $rootScope.newProperties = response.data.content;\n        $state.go('dashboard.properties.confirm');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $scope.file = {};\n        $logger.error('Erro ao importar dados. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    convertData = function() {\n      var ref, ref1, ref2, ref3, ref4, ref5, ref6;\n      if ($scope.property.interest == null) {\n        $scope.property.interest = {};\n      }\n      $scope.property.interest.allMeters = [10, 500];\n      $scope.property.interest.allVacancies = [0, 50];\n      $scope.property.interest.allFloors = [1, 30];\n      $scope.property.interest.allValues = [1000, 5000000];\n      $scope.property.interest.allIptus = [1000, 15000];\n      $scope.property.interest.allCondominiums = [1000, 500000];\n      $scope.property.interest.allLocations = [1000, 50000];\n      if (((ref = $scope.property.interest) != null ? ref.meters : void 0) != null) {\n        $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min;\n        $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max;\n      }\n      if (((ref1 = $scope.property.interest) != null ? ref1.condominium : void 0) != null) {\n        $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min;\n        $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max;\n      }\n      if (((ref2 = $scope.property.interest) != null ? ref2.vacancy : void 0) != null) {\n        $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min;\n        $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max;\n      }\n      if (((ref3 = $scope.property.interest) != null ? ref3.floor : void 0) != null) {\n        $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min;\n        $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max;\n      }\n      if (((ref4 = $scope.property.interest) != null ? ref4.value : void 0) != null) {\n        $scope.property.interest.allValues[0] = $scope.property.interest.value.min;\n        $scope.property.interest.allValues[1] = $scope.property.interest.value.max;\n      }\n      if (((ref5 = $scope.property.interest) != null ? ref5.iptu : void 0) != null) {\n        $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min;\n        $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max;\n      }\n      if (((ref6 = $scope.property.interest) != null ? ref6.location : void 0) != null) {\n        $scope.property.interest.allLocations[0] = $scope.property.interest.location.min;\n        return $scope.property.interest.allLocations[1] = $scope.property.interest.location.max;\n      }\n    };\n    return revertData = function() {\n      $scope.property.value = $scope.property.value.toFixed(2);\n      if ($scope.property.condominium != null) {\n        $scope.property.condominium = $scope.property.condominium.toFixed(2);\n      }\n      if ($scope.property.location != null) {\n        $scope.property.location = $scope.property.location.toFixed(2);\n      }\n      if ($scope.property.iptu != null) {\n        $scope.property.iptu = $scope.property.iptu.toFixed(2);\n      }\n      if ($scope.property.interest == null) {\n        return false;\n      }\n      if ($scope.property.interest.allMeters != null) {\n        $scope.property.interest.meters = {\n          min: $scope.property.interest.allMeters[0],\n          max: $scope.property.interest.allMeters[1]\n        };\n        delete $scope.property.interest.allMeters;\n      }\n      if ($scope.property.interest.allCondominiums != null) {\n        $scope.property.interest.condominium = {\n          min: $scope.property.interest.allCondominiums[0],\n          max: $scope.property.interest.allCondominiums[1]\n        };\n        delete $scope.property.interest.allCondominiums;\n      }\n      if ($scope.property.interest.allVacancies != null) {\n        $scope.property.interest.vacancy = {\n          min: $scope.property.interest.allVacancies[0],\n          max: $scope.property.interest.allVacancies[1]\n        };\n        delete $scope.property.interest.allVacancies;\n      }\n      if ($scope.property.interest.allFloors != null) {\n        $scope.property.interest.floor = {\n          min: $scope.property.interest.allFloors[0],\n          max: $scope.property.interest.allFloors[1]\n        };\n        delete $scope.property.interest.allFloors;\n      }\n      if ($scope.property.interest.allValues != null) {\n        $scope.property.interest.value = {\n          min: $scope.property.interest.allValues[0],\n          max: $scope.property.interest.allValues[1]\n        };\n        delete $scope.property.interest.allValues;\n      }\n      if ($scope.property.interest.allIptus != null) {\n        $scope.property.interest.iptu = {\n          min: $scope.property.interest.allIptus[0],\n          max: $scope.property.interest.allIptus[1]\n        };\n        delete $scope.property.interest.allIptus;\n      }\n      if ($scope.property.interest.allLocations != null) {\n        $scope.property.interest.location = {\n          min: $scope.property.interest.allLocations[0],\n          max: $scope.property.interest.allLocations[1]\n        };\n        return delete $scope.property.interest.allLocations;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('SearchCtrl', [\n  '$scope', '$rootScope', '$loading', '$logger', 'storage', 'PropertyService', function($scope, $rootScope, $loading, $logger, storage, PropertyService) {\n    var convertData, find, resetValues, revertData;\n    $scope.properties = [];\n    $scope.showFilters = false;\n    $scope.query = {\n      interest: {},\n      property: {}\n    };\n    resetValues = function() {\n      $scope.query.interest.allMeters = [0, 500];\n      $scope.query.interest.allVacancies = [0, 50];\n      $scope.query.interest.allFloors = [0, 30];\n      $scope.query.interest.allValues = [0, 5000000];\n      $scope.query.interest.allIptus = [0, 15000];\n      $scope.query.interest.allCondominiums = [0, 500000];\n      $scope.query.interest.allLocations = [0, 50000];\n      $scope.query.property.allMeters = [0, 500];\n      $scope.query.property.allVacancies = [0, 50];\n      $scope.query.property.allFloors = [0, 30];\n      $scope.query.property.allValues = [0, 5000000];\n      $scope.query.property.allIptus = [0, 15000];\n      $scope.query.property.allCondominiums = [0, 500000];\n      return $scope.query.property.allLocations = [0, 50000];\n    };\n    revertData = function() {\n      resetValues();\n      if ($scope.property.interest.types != null) {\n        $scope.property.interest.types = [];\n      }\n      if ($scope.property.interest.meters != null) {\n        $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min;\n        $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max;\n      }\n      if ($scope.property.interest.condominium != null) {\n        $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min;\n        $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max;\n      }\n      if ($scope.property.interest.vacancy != null) {\n        $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min;\n        $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max;\n      }\n      if ($scope.property.interest.floor != null) {\n        $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min;\n        $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max;\n      }\n      if ($scope.property.interest.value != null) {\n        $scope.property.interest.allValues[0] = $scope.property.interest.value.min;\n        $scope.property.interest.allValues[1] = $scope.property.interest.value.max;\n      }\n      if ($scope.property.interest.iptu != null) {\n        $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min;\n        $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max;\n      }\n      if ($scope.property.interest.location != null) {\n        $scope.property.interest.allLocations[0] = $scope.property.interest.location.min;\n        return $scope.property.interest.allLocations[1] = $scope.property.interest.location.max;\n      }\n    };\n    convertData = function() {\n      $scope.query.property.meters = {\n        min: $scope.query.property.allMeters[0],\n        max: $scope.query.property.allMeters[1]\n      };\n      delete $scope.query.property.allMeters;\n      $scope.query.property.condominium = {\n        min: $scope.query.property.allCondominiums[0],\n        max: $scope.query.property.allCondominiums[1]\n      };\n      delete $scope.query.property.allCondominiums;\n      $scope.query.property.vacancy = {\n        min: $scope.query.property.allVacancies[0],\n        max: $scope.query.property.allVacancies[1]\n      };\n      delete $scope.query.property.allVacancies;\n      $scope.query.property.floor = {\n        min: $scope.query.property.allFloors[0],\n        max: $scope.query.property.allFloors[1]\n      };\n      delete $scope.query.property.allFloors;\n      $scope.query.property.value = {\n        min: $scope.query.property.allValues[0],\n        max: $scope.query.property.allValues[1]\n      };\n      delete $scope.query.property.allValues;\n      $scope.query.property.iptu = {\n        min: $scope.query.property.allIptus[0],\n        max: $scope.query.property.allIptus[1]\n      };\n      delete $scope.query.property.allIptus;\n      $scope.query.property.location = {\n        min: $scope.query.property.allLocations[0],\n        max: $scope.query.property.allLocations[1]\n      };\n      delete $scope.query.property.allLocations;\n      $scope.query.interest.meters = {\n        min: $scope.query.interest.allMeters[0],\n        max: $scope.query.interest.allMeters[1]\n      };\n      delete $scope.query.interest.allMeters;\n      $scope.query.interest.condominium = {\n        min: $scope.query.interest.allCondominiums[0],\n        max: $scope.query.interest.allCondominiums[1]\n      };\n      delete $scope.query.interest.allCondominiums;\n      $scope.query.interest.vacancy = {\n        min: $scope.query.interest.allVacancies[0],\n        max: $scope.query.interest.allVacancies[1]\n      };\n      delete $scope.query.interest.allVacancies;\n      $scope.query.interest.floor = {\n        min: $scope.query.interest.allFloors[0],\n        max: $scope.query.interest.allFloors[1]\n      };\n      delete $scope.query.interest.allFloors;\n      $scope.query.interest.value = {\n        min: $scope.query.interest.allValues[0],\n        max: $scope.query.interest.allValues[1]\n      };\n      delete $scope.query.interest.allValues;\n      $scope.query.interest.iptu = {\n        min: $scope.query.interest.allIptus[0],\n        max: $scope.query.interest.allIptus[1]\n      };\n      delete $scope.query.interest.allIptus;\n      $scope.query.interest.location = {\n        min: $scope.query.interest.allLocations[0],\n        max: $scope.query.interest.allLocations[1]\n      };\n      return delete $scope.query.interest.allLocations;\n    };\n    $scope.toggleFilters = function() {\n      $scope.showFilters = !$scope.showFilters;\n      if (!$scope.showFilters) {\n        return resetValues();\n      }\n    };\n    $scope.doFilter = function() {\n      $loading.show();\n      convertData();\n      return find();\n    };\n    find = function() {\n      return PropertyService.search($scope.query).then(function(response) {\n        console.log(response);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao efetuar busca. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return find();\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('UsersCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'UserGroupService', 'UserService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) {\n    $scope.user = {};\n    $scope.users = [];\n    $scope.file = {};\n    $scope.fileName = 'Selecione um arquivo';\n    $scope.groups = UserGroupService.getAll();\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      UserService.get($stateParams.id).then(function(response) {\n        $scope.user = response.data;\n        if ($scope.user.photo == null) {\n          $scope.user.photo = false;\n        }\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      UserService.getAll().then(function(response) {\n        $scope.users = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.selectPhoto = function() {\n      if ($scope.file.name == null) {\n        $scope.file = {};\n        $scope.fileName = 'Selecione um arquivo';\n        return false;\n      }\n      return $scope.fileName = $scope.file.name;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.savePhoto($scope.file).then(function(response) {\n        if (response.data.file != null) {\n          $scope.user.photo = response.data.file;\n        }\n        return UserService.saveOrUpdate($scope.user);\n      }).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.users');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var user;\n      user = $scope.users[index];\n      if (user._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return UserService[\"delete\"](user._id).then(function(response) {\n        $logger.success('Usuário excluído com sucesso!');\n        $scope.users.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'ConfirmCtrl', ['$scope', '$rootScope', '$q', '$state', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', ($scope, $rootScope, $q, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) ->\n\n  $scope.properties = []\n  $scope.cities = []\n  $scope.states = []\n  $scope.clients = []\n  $scope.search = {}\n  cities = []\n\n  $scope.edit = true\n\n  $loading.show()\n  LocationService.getAllStates()\n  .then (response) ->\n    $scope.states = response.data.sort()\n    return ClientService.getAll()\n  .then (response) ->\n    $scope.clients = $filter('orderByString')(response.data, 'name')\n    $loading.hide()\n  .catch (response) ->\n    $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n    $loading.hide()\n\n  $scope.showCities = (state) ->\n\n    if cities[state]?\n      $scope.cities = cities[state]\n      return false\n\n    $loading.show()\n    LocationService.getCitiesByState(state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[state] = currentCities\n      $loading.hide()\n    .catch () ->\n      $loading.hide()\n\n  $scope.doEditCsv = (index) ->\n    item = $scope.newProperties.errors[index]\n    $scope.property = item.property\n    $scope.property.client = item.client._id\n    $scope.property.address.cep = $scope.property.address.cep.replace(/[^0-9.]/g, \"\") if $scope.property.address?.cep?\n    delete $scope.property._id\n    $rootScope.toggleModal()\n\n  $scope.doTryAgain = (index) ->\n    item = $scope.newProperties.errors[index]\n    property = item.property\n    property.client = item.client._id\n    delete property._id\n\n    $scope.property = property\n\n    saveOrUpdate()\n    .then () ->\n      $scope.newProperties.errors.splice(index, 1)\n\n  $scope.saveOrUpdateModal = (index) ->\n    if !$rootScope.forms.property.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    saveOrUpdate()\n    .then () ->\n      $scope.newProperties.errors.splice(index, 1)\n      $rootScope.toggleModal()\n\n  $scope.doRemoveCsv = (index) ->\n    $scope.newProperties.errors.splice(index, 1)\n\n  saveOrUpdate = () ->\n    if not $scope.property?\n      return false\n\n    promise = $q.defer()\n    $loading.show()\n\n    revertData()\n    PropertyService.saveOrUpdate($scope.property)\n      .then (response) ->\n        $loading.hide()\n        promise.resolve()\n      .catch (response) ->\n        promise.reject()\n        if response.data.code == 8\n          $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.')\n        else\n          $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.')\n        $loading.hide()\n\n  convertData = () ->\n    $scope.property.interest.allMeters =  [10, 500]\n    $scope.property.interest.allVacancies = [0, 50]\n    $scope.property.interest.allFloors = [1, 30]\n    $scope.property.interest.allValues = [1000, 5000000]\n    $scope.property.interest.allIptus = [1000, 15000]\n    $scope.property.interest.allCondominiums = [1000, 500000]\n    $scope.property.interest.allLocations = [1000, 50000]\n\n#    if $scope.property.interest?.types?\n#      $scope.property.interest.types = []\n\n    if $scope.property.interest?.meters?\n      $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min\n      $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max\n\n    if $scope.property.interest?.condominium?\n      $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min\n      $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max\n\n    if $scope.property.interest?.vacancy?\n      $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min\n      $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max\n\n    if $scope.property.interest?.floor?\n      $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min\n      $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max\n\n    if $scope.property.interest?.value?\n      $scope.property.interest.allValues[0] = $scope.property.interest.value.min\n      $scope.property.interest.allValues[1] = $scope.property.interest.value.max\n\n    if $scope.property.interest?.iptu?\n      $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min\n      $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max\n\n    if $scope.property.interest?.location?\n      $scope.property.interest.allLocations[0] = $scope.property.interest.location.min\n      $scope.property.interest.allLocations[1] = $scope.property.interest.location.max\n\n\n  revertData = () ->\n    $scope.property.value = $scope.property.value.toFixed(2)\n    $scope.property.condominium = $scope.property.condominium.toFixed(2)\n    $scope.property.location = $scope.property.location.toFixed(2)\n    $scope.property.iptu = $scope.property.iptu.toFixed(2)\n\n    if $scope.property.interest.allMeters?\n      $scope.property.interest.meters =\n        min: $scope.property.interest.allMeters[0]\n        max: $scope.property.interest.allMeters[1]\n      delete $scope.property.interest.allMeters\n\n    if $scope.property.interest.allCondominiums?\n      $scope.property.interest.condominium =\n        min: $scope.property.interest.allCondominiums[0]\n        max: $scope.property.interest.allCondominiums[1]\n      delete $scope.property.interest.allCondominiums\n\n    if $scope.property.interest.allVacancies?\n      $scope.property.interest.vacancy =\n        min: $scope.property.interest.allVacancies[0]\n        max: $scope.property.interest.allVacancies[1]\n      delete $scope.property.interest.allVacancies\n\n    if $scope.property.interest.allFloors?\n      $scope.property.interest.floor =\n        min: $scope.property.interest.allFloors[0]\n        max: $scope.property.interest.allFloors[1]\n      delete $scope.property.interest.allFloors\n\n    if $scope.property.interest.allValues?\n      $scope.property.interest.value =\n        min: $scope.property.interest.allValues[0]\n        max: $scope.property.interest.allValues[1]\n      delete $scope.property.interest.allValues\n\n    if $scope.property.interest.allIptus?\n      $scope.property.interest.iptu =\n        min: $scope.property.interest.allIptus[0]\n        max: $scope.property.interest.allIptus[1]\n      delete $scope.property.interest.allIptus\n\n    if $scope.property.interest.allLocations?\n      $scope.property.interest.location =\n        min: $scope.property.interest.allLocations[0]\n        max: $scope.property.interest.allLocations[1]\n      delete $scope.property.interest.allLocations\n]\n",null,"'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'AccountCtrl', ['$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', ($scope, $rootScope, $loading, $logger, storage, UserService) ->\n\n  $scope.user = {}\n  $scope.edit = false\n\n  $scope.file = {}\n  $scope.fileName = 'Selecione um arquivo'\n\n  $loading.show()\n  UserService.getMyAccount()\n  .then (response) ->\n    $scope.user = response.data\n    $scope.user.photo = false if not $scope.user.photo?\n    $loading.hide()\n  .catch (response) ->\n    $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.')\n    $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.selectPhoto = () ->\n    if not $scope.file.name?\n      $scope.file = {}\n      $scope.fileName = 'Selecione um arquivo'\n      return false\n\n    $scope.fileName = $scope.file.name\n\n  $scope.doUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    UserService.savePhoto($scope.file)\n    .then (response) ->\n      if response.data.file?\n        $scope.user.photo = response.data.file\n        storage.setPhoto(response.data.file)\n      return UserService.update($scope.user)\n    .then (response) ->\n      $logger.success('Sua conta foi atualizada com sucesso!')\n      storage.updateToken(response.data.token)\n      $loading.hide()\n    .catch (response) ->\n      console.log(response);\n      $logger.error('Erro ao editar sua conta. Por favor, tente novamente.')\n      $loading.hide()\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'ClientsCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) ->\n\n  $scope.client = {}\n  $scope.clients = []\n  $scope.search = {}\n\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    ClientService.get($stateParams.id)\n    .then (response) ->\n      $scope.client = response.data\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar clientes. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar clientes. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.client.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    ClientService.saveOrUpdate($scope.client)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.clients')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    client = $scope.clients[index]\n    return false if client._id == storage.getCode()\n\n    $loading.show()\n    ClientService.delete(client._id)\n    .then (response) ->\n      $logger.success('Cliente excluído com sucesso!')\n      $scope.clients.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir cliente. Por favor, tente novamente.')\n      $loading.hide()\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'LoginCtrl', ['$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', ($scope, $rootScope, $state, $logger, storage, UserService) ->\n\n  $scope.user = {}\n\n  $scope.doLogin = () ->\n    if !$rootScope.forms.login.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $scope.user.origin = 'admin'\n    UserService.doLogin($scope.user)\n    .then (response) ->\n      storage.setCodes(response.data)\n      $state.go('dashboard.home')\n    .catch (response) ->\n      $logger.error('Usuário e/ou senha inválido(s).')\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'PropertiesCtrl', ['$scope', '$rootScope', '$q', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', ($scope, $rootScope, $q, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) ->\n\n  $scope.properties = []\n#  $scope.property = {}\n  $scope.cities = []\n  $scope.states = []\n  $scope.clients = []\n  $scope.search = {}\n  cities = []\n\n  $scope.edit = true\n\n  $scope.property = {\n    code: 123\n    value: 500000\n    address:\n      street: 'Rua Simões Delgado'\n      number: 15\n      neighborhood: 'Jardim Nove de Julho'\n      condominium: 'Condominio de Teste'\n  }\n\n  $loading.show()\n  if $stateParams.id\n    PropertyService.get($stateParams.id)\n    .then (response) ->\n      $scope.property = response.data\n      convertData()\n      return LocationService.getAllStates()\n    .then (response) ->\n      $scope.states = response.data.sort()\n      return LocationService.getCitiesByState($scope.property.address.state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[$scope.property.address.state] = currentCities\n      return ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderByString')(response.data, 'name')\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    PropertyService.getAll()\n    .then (response) ->\n      $scope.properties = $filter('orderBy')(response.data, '-created')\n      convertData()\n      return LocationService.getAllStates()\n    .then (response) ->\n      $scope.states = response.data.sort()\n      return ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderByString')(response.data, 'name')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.showCities = (state) ->\n\n    if cities[state]?\n      $scope.cities = cities[state]\n      return false\n\n    $loading.show()\n    LocationService.getCitiesByState(state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[state] = currentCities\n      $loading.hide()\n    .catch () ->\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.property.$valid or not $scope.property?\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    revertData()\n    PropertyService.saveOrUpdate($scope.property)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.properties')\n    .catch (response) ->\n      if response.data.code == 8\n        $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.')\n      else\n        $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.')\n      $loading.hide()\n\n\n  $scope.doDelete = (index) ->\n    property = $scope.properties[index]\n    return false if property._id == storage.getCode()\n\n    $loading.show()\n    PropertyService.delete(property._id)\n    .then (response) ->\n      $logger.success('Imóvel excluído com sucesso!')\n      $scope.properties.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doUploadCSV = (file) ->\n    if not file? or file.type != 'text/csv'\n      $logger.error('Por favor, selecione um arquivo válido do tipo .csv')\n      return false\n\n    $rootScope.newProperties = {}\n\n    $loading.show()\n    PropertyService.importCsv(file)\n    .then (response) ->\n      $scope.file = null\n      $rootScope.newProperties = response.data.content\n      $state.go('dashboard.properties.confirm')\n      $loading.hide()\n    .catch (response) ->\n      $scope.file = {}\n      $logger.error('Erro ao importar dados. Por favor, tente novamente.')\n      $loading.hide()\n\n  convertData = () ->\n    $scope.property.interest = {} if not $scope.property.interest?\n    $scope.property.interest.allMeters =  [10, 500]\n    $scope.property.interest.allVacancies = [0, 50]\n    $scope.property.interest.allFloors = [1, 30]\n    $scope.property.interest.allValues = [1000, 5000000]\n    $scope.property.interest.allIptus = [1000, 15000]\n    $scope.property.interest.allCondominiums = [1000, 500000]\n    $scope.property.interest.allLocations = [1000, 50000]\n\n    if $scope.property.interest?.meters?\n      $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min\n      $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max\n\n    if $scope.property.interest?.condominium?\n      $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min\n      $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max\n\n    if $scope.property.interest?.vacancy?\n      $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min\n      $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max\n\n    if $scope.property.interest?.floor?\n      $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min\n      $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max\n\n    if $scope.property.interest?.value?\n      $scope.property.interest.allValues[0] = $scope.property.interest.value.min\n      $scope.property.interest.allValues[1] = $scope.property.interest.value.max\n\n    if $scope.property.interest?.iptu?\n      $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min\n      $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max\n\n    if $scope.property.interest?.location?\n      $scope.property.interest.allLocations[0] = $scope.property.interest.location.min\n      $scope.property.interest.allLocations[1] = $scope.property.interest.location.max\n\n\n  revertData = () ->\n    $scope.property.value = $scope.property.value.toFixed(2)\n    $scope.property.condominium = $scope.property.condominium.toFixed(2) if $scope.property.condominium?\n    $scope.property.location = $scope.property.location.toFixed(2) if $scope.property.location?\n    $scope.property.iptu = $scope.property.iptu.toFixed(2) if $scope.property.iptu?\n\n    return false if not $scope.property.interest?\n\n    if $scope.property.interest.allMeters?\n      $scope.property.interest.meters =\n        min: $scope.property.interest.allMeters[0]\n        max: $scope.property.interest.allMeters[1]\n      delete $scope.property.interest.allMeters\n\n    if $scope.property.interest.allCondominiums?\n      $scope.property.interest.condominium =\n        min: $scope.property.interest.allCondominiums[0]\n        max: $scope.property.interest.allCondominiums[1]\n      delete $scope.property.interest.allCondominiums\n\n    if $scope.property.interest.allVacancies?\n      $scope.property.interest.vacancy =\n        min: $scope.property.interest.allVacancies[0]\n        max: $scope.property.interest.allVacancies[1]\n      delete $scope.property.interest.allVacancies\n\n    if $scope.property.interest.allFloors?\n      $scope.property.interest.floor =\n        min: $scope.property.interest.allFloors[0]\n        max: $scope.property.interest.allFloors[1]\n      delete $scope.property.interest.allFloors\n\n    if $scope.property.interest.allValues?\n      $scope.property.interest.value =\n        min: $scope.property.interest.allValues[0]\n        max: $scope.property.interest.allValues[1]\n      delete $scope.property.interest.allValues\n\n    if $scope.property.interest.allIptus?\n      $scope.property.interest.iptu =\n        min: $scope.property.interest.allIptus[0]\n        max: $scope.property.interest.allIptus[1]\n      delete $scope.property.interest.allIptus\n\n    if $scope.property.interest.allLocations?\n      $scope.property.interest.location =\n        min: $scope.property.interest.allLocations[0]\n        max: $scope.property.interest.allLocations[1]\n      delete $scope.property.interest.allLocations\n]\n","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'SearchCtrl', ['$scope', '$rootScope', '$loading', '$logger', 'storage', 'PropertyService', ($scope, $rootScope, $loading, $logger, storage, PropertyService) ->\n\n  $scope.properties = []\n  $scope.showFilters = false\n\n  $scope.query =\n    interest: {}\n    property: {}\n\n  resetValues = () ->\n    $scope.query.interest.allMeters =  [0, 500]\n    $scope.query.interest.allVacancies = [0, 50]\n    $scope.query.interest.allFloors = [0, 30]\n    $scope.query.interest.allValues = [0, 5000000]\n    $scope.query.interest.allIptus = [0, 15000]\n    $scope.query.interest.allCondominiums = [0, 500000]\n    $scope.query.interest.allLocations = [0, 50000]\n\n    $scope.query.property.allMeters =  [0, 500]\n    $scope.query.property.allVacancies = [0, 50]\n    $scope.query.property.allFloors = [0, 30]\n    $scope.query.property.allValues = [0, 5000000]\n    $scope.query.property.allIptus = [0, 15000]\n    $scope.query.property.allCondominiums = [0, 500000]\n    $scope.query.property.allLocations = [0, 50000]\n\n  revertData = () ->\n    resetValues()\n\n    if $scope.property.interest.types?\n      $scope.property.interest.types = []\n\n    if $scope.property.interest.meters?\n      $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min\n      $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max\n\n    if $scope.property.interest.condominium?\n      $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min\n      $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max\n\n    if $scope.property.interest.vacancy?\n      $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min\n      $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max\n\n    if $scope.property.interest.floor?\n      $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min\n      $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max\n\n    if $scope.property.interest.value?\n      $scope.property.interest.allValues[0] = $scope.property.interest.value.min\n      $scope.property.interest.allValues[1] = $scope.property.interest.value.max\n\n    if $scope.property.interest.iptu?\n      $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min\n      $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max\n\n    if $scope.property.interest.location?\n      $scope.property.interest.allLocations[0] = $scope.property.interest.location.min\n      $scope.property.interest.allLocations[1] = $scope.property.interest.location.max\n\n  convertData = () ->\n    $scope.query.property.meters =\n      min: $scope.query.property.allMeters[0]\n      max: $scope.query.property.allMeters[1]\n    delete $scope.query.property.allMeters\n\n    $scope.query.property.condominium =\n      min: $scope.query.property.allCondominiums[0]\n      max: $scope.query.property.allCondominiums[1]\n    delete $scope.query.property.allCondominiums\n\n    $scope.query.property.vacancy =\n      min: $scope.query.property.allVacancies[0]\n      max: $scope.query.property.allVacancies[1]\n    delete $scope.query.property.allVacancies\n\n    $scope.query.property.floor =\n      min: $scope.query.property.allFloors[0]\n      max: $scope.query.property.allFloors[1]\n    delete $scope.query.property.allFloors\n\n    $scope.query.property.value =\n      min: $scope.query.property.allValues[0]\n      max: $scope.query.property.allValues[1]\n    delete $scope.query.property.allValues\n\n    $scope.query.property.iptu =\n      min: $scope.query.property.allIptus[0]\n      max: $scope.query.property.allIptus[1]\n    delete $scope.query.property.allIptus\n\n    $scope.query.property.location =\n      min: $scope.query.property.allLocations[0]\n      max: $scope.query.property.allLocations[1]\n    delete $scope.query.property.allLocations\n\n    $scope.query.interest.meters =\n      min: $scope.query.interest.allMeters[0]\n      max: $scope.query.interest.allMeters[1]\n    delete $scope.query.interest.allMeters\n\n    $scope.query.interest.condominium =\n      min: $scope.query.interest.allCondominiums[0]\n      max: $scope.query.interest.allCondominiums[1]\n    delete $scope.query.interest.allCondominiums\n\n    $scope.query.interest.vacancy =\n      min: $scope.query.interest.allVacancies[0]\n      max: $scope.query.interest.allVacancies[1]\n    delete $scope.query.interest.allVacancies\n\n    $scope.query.interest.floor =\n      min: $scope.query.interest.allFloors[0]\n      max: $scope.query.interest.allFloors[1]\n    delete $scope.query.interest.allFloors\n\n    $scope.query.interest.value =\n      min: $scope.query.interest.allValues[0]\n      max: $scope.query.interest.allValues[1]\n    delete $scope.query.interest.allValues\n\n    $scope.query.interest.iptu =\n      min: $scope.query.interest.allIptus[0]\n      max: $scope.query.interest.allIptus[1]\n    delete $scope.query.interest.allIptus\n\n    $scope.query.interest.location =\n      min: $scope.query.interest.allLocations[0]\n      max: $scope.query.interest.allLocations[1]\n    delete $scope.query.interest.allLocations\n\n  $scope.toggleFilters = () ->\n    $scope.showFilters = !$scope.showFilters\n    resetValues() if !$scope.showFilters\n\n  $scope.doFilter = () ->\n\n    $loading.show()\n    convertData()\n    find()\n\n  find = () ->\n    PropertyService.search($scope.query)\n    .then (response) ->\n      console.log(response);\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao efetuar busca. Por favor, tente novamente.')\n      $loading.hide()\n\n  find()\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'UsersCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage','UserGroupService', 'UserService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) ->\n\n  $scope.user = {}\n  $scope.users = []\n\n  $scope.file = {}\n  $scope.fileName = 'Selecione um arquivo'\n\n  $scope.groups = UserGroupService.getAll()\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    UserService.get($stateParams.id)\n    .then (response) ->\n      $scope.user = response.data\n      $scope.user.photo = false if not $scope.user.photo?\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    UserService.getAll()\n    .then (response) ->\n      $scope.users = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.selectPhoto = () ->\n    if not $scope.file.name?\n      $scope.file = {}\n      $scope.fileName = 'Selecione um arquivo'\n      return false\n\n    $scope.fileName = $scope.file.name\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    UserService.savePhoto($scope.file)\n    .then (response) ->\n      $scope.user.photo = response.data.file if response.data.file?\n      return UserService.saveOrUpdate($scope.user)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.users')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n\n  $scope.doDelete = (index) ->\n\n    user = $scope.users[index]\n    return false if user._id == storage.getCode()\n\n    $loading.show()\n    UserService.delete(user._id)\n    .then (response) ->\n      $logger.success('Usuário excluído com sucesso!')\n      $scope.users.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n]"]}