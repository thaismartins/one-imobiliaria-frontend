{"version":3,"sources":["app.coffee","app.js","routes.coffee","client.coffee","loading.coffee","location.coffee","logger.coffee","property-type.coffee","property.coffee","session.coffee","storage.coffee","user-group.coffee","user.coffee","address.coffee","date-br.coffee","date-time-br.coffee","decimals.coffee","first-name.coffee","meters.coffee","order-by-string.coffee","phone-br.coffee","range.coffee","types-to-text.coffee","yes-or-no.coffee","file.coffee","account.coffee","clients.coffee","login.coffee","properties.coffee","users.coffee"],"names":["angular","module","run","$rootScope","$state","RESOURCES","storage","UserService","error","success","loading","fileUrl","API_URL","page","name","showMenu","showSubmenu","appTitle","forms","doLogout","toggleMenu","toggleSubmenu","$on","current","split","group","getGroup","getName","requiredLogin","isLogged","go","constant","config","$stateProvider","$httpProvider","$urlRouterProvider","state","url","views","main","templateUrl","controller","error@login","abstract","header","footer","main@","submenu@dashboard.users","error@dashboard.users","success@dashboard.users","loading@dashboard.users","error@dashboard.users.new","loading@dashboard.users.new","error@dashboard.users.edit","loading@dashboard.users.edit","submenu@dashboard.clients","error@dashboard.clients","success@dashboard.clients","loading@dashboard.clients","error@dashboard.clients.new","loading@dashboard.clients.new","error@dashboard.clients.edit","submenu@dashboard.properties","error@dashboard.properties","success@dashboard.properties","loading@dashboard.properties","submenu@dashboard.properties.new","property@dashboard.properties.new","interest@dashboard.properties.new","error@dashboard.properties.new","loading@dashboard.properties.new","submenu@dashboard.properties.edit","property@dashboard.properties.edit","interest@dashboard.properties.edit","error@dashboard.properties.edit","loading@dashboard.properties.edit","error@dashboard.account","loading@dashboard.account","otherwise","interceptors","push","defaults","useXDomain","headers","common","service","$http","apiUrl","create","client","post","update","put","_id","saveOrUpdate","this","getAll","get","id","delete","show","hide","getAllStates","getCitiesByState","clean","modalError","errorString","successString","items","title","code","property","importCsv","file","form","FormData","append","withCredentials","Content-Type","transformRequest","identity","isUnloggedPage","indexOf","request","getSessionToken","localStorage","getItem","setCodes","codes","setItem","token","type","updateToken","getCode","removeItem","doLogin","user","getMyAccount","filter","address","fullAddress","street","number","complement","input","date","moment","format","locale","calendar","sameElse","num","toString","replace","names","meters","array","reverse","result","sort","object1","object2","isUndefined","localeCompare","length","PropertyTypeService","propertyType","map","item","n","i","j","ref","res","types","len","apart","land","car","house","console","log","UserGroupService","directive","$parse","require","scope","ngModel","restrict","link","$scope","elem","attrs","changeHandler","formatter","value","$formatters","$parsers","newValue","$modelValue","assign","$viewValue","$render","bind","$timeout","fn","event","files","target","$file","$event","$loading","$logger","edit","then","response","data","canEdit","doUpdate","$valid","$stateParams","$filter","ClientService","clients","doDelete","index","splice","login","origin","PropertyService","LocationService","cities","convertData","revertData","payments","interest","allMeters","allVacancies","allFloors","allValues","allIptus","allCondominiums","allLocations","properties","states","currentCities","showCities","doUploadCSV","min","max","condominium","vacancy","floor","iptu","location","users","groups"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict'\n\nangular.module 'oneImobiliaria', [\n  'ui.router',\n  'ui.utils.masks',\n  'ui.slider'\n]\n.run ['$rootScope', '$state', 'RESOURCES', 'storage', 'UserService', ($rootScope, $state, RESOURCES, storage, UserService) ->\n\n  $rootScope.error = false\n  $rootScope.success = false\n  $rootScope.loading = false\n\n  $rootScope.fileUrl = RESOURCES.API_URL + '/'\n\n  $rootScope.page = ''\n  $rootScope.name = ''\n\n  $rootScope.showMenu = false\n  $rootScope.showSubmenu = false\n\n  $rootScope.appTitle = 'One Consultoria Imobiliária'\n\n  $rootScope.forms = {}\n\n  $rootScope.doLogout = () ->\n    UserService.doLogout()\n\n  $rootScope.toggleMenu = () ->\n    $rootScope.showMenu = !$rootScope.showMenu\n\n  $rootScope.toggleSubmenu = () ->\n    $rootScope.showSubmenu = !$rootScope.showSubmenu\n\n  $rootScope.$on '$stateChangeSuccess', () ->\n\n    page = $state.current.name.split('.')\n    $rootScope.page = page[1] || ''\n\n    $rootScope.group = storage.getGroup()\n    $rootScope.name = storage.getName()\n\n    $rootScope.error = false\n    $rootScope.success = false\n    $rootScope.loading = false\n    $rootScope.showMenu = false\n    $rootScope.showSubmenu = false\n\n    UserService.doLogout() if $state.current.requiredLogin && !UserService.isLogged()\n    $state.go('dashboard.home') if !$state.current.requiredLogin && UserService.isLogged()\n    $state.go('dashboard.home') if $rootScope.page == 'users' && $rootScope.group != 'admin'\n]\n.constant 'RESOURCES',\n#  'API_URL': 'http://desenv.doisoitosete.com:3000/api'\n  'API_URL': 'http://localhost:3000/api'\n","'use strict';\nangular.module('oneImobiliaria', ['ui.router', 'ui.utils.masks', 'ui.slider']).run([\n  '$rootScope', '$state', 'RESOURCES', 'storage', 'UserService', function($rootScope, $state, RESOURCES, storage, UserService) {\n    $rootScope.error = false;\n    $rootScope.success = false;\n    $rootScope.loading = false;\n    $rootScope.fileUrl = RESOURCES.API_URL + '/';\n    $rootScope.page = '';\n    $rootScope.name = '';\n    $rootScope.showMenu = false;\n    $rootScope.showSubmenu = false;\n    $rootScope.appTitle = 'One Consultoria Imobiliária';\n    $rootScope.forms = {};\n    $rootScope.doLogout = function() {\n      return UserService.doLogout();\n    };\n    $rootScope.toggleMenu = function() {\n      return $rootScope.showMenu = !$rootScope.showMenu;\n    };\n    $rootScope.toggleSubmenu = function() {\n      return $rootScope.showSubmenu = !$rootScope.showSubmenu;\n    };\n    return $rootScope.$on('$stateChangeSuccess', function() {\n      var page;\n      page = $state.current.name.split('.');\n      $rootScope.page = page[1] || '';\n      $rootScope.group = storage.getGroup();\n      $rootScope.name = storage.getName();\n      $rootScope.error = false;\n      $rootScope.success = false;\n      $rootScope.loading = false;\n      $rootScope.showMenu = false;\n      $rootScope.showSubmenu = false;\n      if ($state.current.requiredLogin && !UserService.isLogged()) {\n        UserService.doLogout();\n      }\n      if (!$state.current.requiredLogin && UserService.isLogged()) {\n        $state.go('dashboard.home');\n      }\n      if ($rootScope.page === 'users' && $rootScope.group !== 'admin') {\n        return $state.go('dashboard.home');\n      }\n    });\n  }\n]).constant('RESOURCES', {\n  'API_URL': 'http://localhost:3000/api'\n});\n\n'use strict';\nangular.module('oneImobiliaria').config([\n  '$stateProvider', '$httpProvider', '$urlRouterProvider', function($stateProvider, $httpProvider, $urlRouterProvider) {\n    $stateProvider.state('login', {\n      url: '/login',\n      views: {\n        main: {\n          templateUrl: 'app/views/login/index.html',\n          controller: 'LoginCtrl'\n        },\n        'error@login': {\n          templateUrl: 'app/views/error.html'\n        }\n      },\n      requiredLogin: false\n    }).state('dashboard', {\n      url: '/dashboard',\n      abstract: true,\n      views: {\n        main: {},\n        header: {\n          templateUrl: 'app/views/header.html'\n        },\n        footer: {\n          templateUrl: 'app/views/footer.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.home', {\n      url: '/home',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/home/index.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users', {\n      url: '/users',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/index.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users': {\n          templateUrl: 'app/views/users/submenu.html'\n        },\n        'error@dashboard.users': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.users': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.users': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'error@dashboard.users.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'error@dashboard.users.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients', {\n      url: '/clients',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/index.html',\n          controller: 'ClientsCtrl'\n        },\n        'submenu@dashboard.clients': {\n          templateUrl: 'app/views/clients/submenu.html'\n        },\n        'error@dashboard.clients': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.clients': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.clients': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.clients.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties', {\n      url: '/properties',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/index.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties': {\n          templateUrl: 'app/views/properties/submenu.html'\n        },\n        'error@dashboard.properties': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.properties': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.properties': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.account', {\n      url: '/account',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/account/form.html',\n          controller: 'AccountCtrl'\n        },\n        'error@dashboard.account': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.account': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    });\n    $urlRouterProvider.otherwise('/login');\n    $httpProvider.interceptors.push('sessionInjector');\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json';\n    return delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('ClientService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/clients';\n    return {\n      create: function(client) {\n        return $http.post(apiUrl, client);\n      },\n      update: function(client) {\n        return $http.put(apiUrl + '/' + client._id, client);\n      },\n      saveOrUpdate: function(client) {\n        if (client._id) {\n          return this.update(client);\n        } else {\n          return this.create(client);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$loading', [\n  '$rootScope', function($rootScope) {\n    return {\n      show: function() {\n        return $rootScope.loading = true;\n      },\n      hide: function() {\n        return $rootScope.loading = false;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('LocationService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/cities';\n    return {\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      getAllStates: function() {\n        return $http.get(apiUrl + '/states');\n      },\n      getCitiesByState: function(state) {\n        return $http.get(apiUrl + '/states/' + state);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$logger', [\n  '$rootScope', function($rootScope) {\n    return {\n      clean: function() {\n        $rootScope.success = false;\n        $rootScope.error = false;\n        return $rootScope.modalError = false;\n      },\n      error: function(errorString) {\n        this.clean();\n        return $rootScope.error = errorString;\n      },\n      modalError: function(errorString) {\n        this.clean();\n        return $rootScope.modalError = errorString;\n      },\n      success: function(successString) {\n        this.clean();\n        return $rootScope.success = successString;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyTypeService', function() {\n  var items;\n  items = [\n    {\n      title: 'Apartamento',\n      code: 'apartament'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Terreno',\n      code: 'land'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Carro',\n      code: 'car'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/properties';\n    return {\n      create: function(property) {\n        return $http.post(apiUrl, property);\n      },\n      update: function(property) {\n        return $http.put(apiUrl + '/' + property._id, property);\n      },\n      saveOrUpdate: function(property) {\n        if (property._id) {\n          return this.update(property);\n        } else {\n          return this.create(property);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      },\n      importCsv: function(file) {\n        var form;\n        form = new FormData();\n        form.append('csv', file);\n        return $http.post(apiUrl + '/import/csv', form, {\n          withCredentials: false,\n          headers: {\n            'Content-Type': void 0\n          },\n          transformRequest: angular.identity\n        });\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('sessionInjector', [\n  'storage', function(storage) {\n    var isUnloggedPage;\n    isUnloggedPage = function(config) {\n      return config.url.indexOf('auth') > -1 || config.url.indexOf('remember') > -1;\n    };\n    return {\n      request: function(config) {\n        if (!isUnloggedPage(config)) {\n          config.headers['x-access-token'] = storage.getSessionToken();\n        }\n        return config;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('storage', function() {\n  return {\n    isLogged: function() {\n      return (localStorage.getItem('x-code-one') !== null) && (localStorage.getItem('code-one') !== null);\n    },\n    setCodes: function(codes) {\n      localStorage.setItem('x-code-one', codes.token);\n      localStorage.setItem('code-one', codes.code);\n      localStorage.setItem('group-one', codes.type);\n      return localStorage.setItem('name-one', codes.name);\n    },\n    updateToken: function(token) {\n      return localStorage.setItem('x-code-one', token);\n    },\n    getSessionToken: function() {\n      return localStorage.getItem('x-code-one');\n    },\n    getCode: function() {\n      return localStorage.getItem('code-one');\n    },\n    getName: function() {\n      return localStorage.getItem('name-one') || '';\n    },\n    getGroup: function() {\n      return localStorage.getItem('group-one') || '';\n    },\n    clean: function() {\n      localStorage.removeItem('x-code-one');\n      localStorage.removeItem('code-one');\n      localStorage.removeItem('group-one');\n      return localStorage.removeItem('name-one');\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserGroupService', function() {\n  var items;\n  items = [\n    {\n      title: 'Administrador(a)',\n      code: 'admin'\n    }, {\n      title: 'Corretor(a)',\n      code: 'broker'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserService', [\n  '$http', '$state', 'storage', 'RESOURCES', function($http, $state, storage, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/accounts';\n    return {\n      isLogged: function() {\n        return storage.isLogged();\n      },\n      doLogin: function(user) {\n        return $http.post(apiUrl + '/auth', user);\n      },\n      doLogout: function() {\n        storage.clean();\n        $state.go('login');\n      },\n      create: function(user) {\n        return $http.post(apiUrl, user);\n      },\n      update: function(user) {\n        return $http.put(apiUrl + '/' + user._id, user);\n      },\n      saveOrUpdate: function(user) {\n        if (user._id) {\n          return this.update(user);\n        } else {\n          return this.create(user);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      getMyAccount: function() {\n        return $http.get(apiUrl + '/' + storage.getCode());\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('address', function() {\n  return function(address) {\n    var fullAddress;\n    if ((address == null) || ((address.street == null) && (address.number == null) && (address.complement == null))) {\n      return 'Indefinido';\n    }\n    fullAddress = '';\n    if (address.street != null) {\n      fullAddress += address.street;\n    }\n    if (address.number != null) {\n      fullAddress += ', ' + address.number;\n    }\n    if (address.complement != null) {\n      fullAddress += ' - ' + address.complement;\n    }\n    return fullAddress;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateBr', function() {\n  return function(input) {\n    var date;\n    if (input == null) {\n      return '';\n    }\n    date = input.split('T');\n    return moment(date[0]).format('DD/MM/YYYY');\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateTimeBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    moment.locale('pt-br');\n    return moment(input).calendar(null, {\n      sameElse: 'DD/MM/YYYY - H:mm'\n    });\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('decimals', function() {\n  return function(num) {\n    if (num == null) {\n      return '';\n    }\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('firstName', function() {\n  return function(name) {\n    var names;\n    if ((name == null) || name === '') {\n      return '';\n    }\n    names = name.split(' ');\n    return names[0];\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('meters', function() {\n  return function(meters) {\n    if ((meters == null) || meters === '') {\n      meters = '0';\n    }\n    return meters + ' m²';\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('orderByString', function() {\n  return function(array, property, reverse) {\n    var result;\n    result = array.sort(function(object1, object2) {\n      if (angular.isUndefined(property)) {\n        object1.localeCompare(object2);\n      }\n      return object1[property].localeCompare(object2[property]);\n    });\n    if (reverse) {\n      return result.reverse();\n    } else {\n      return result;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('phoneBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    if (input.length === 10) {\n      return input.replace(/(\\d{2})(\\d{4})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    } else {\n      return input.replace(/(\\d{2})(\\d{5})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('propertyType', [\n  'PropertyTypeService', function(PropertyTypeService) {\n    return function(propertyType) {\n      var items, title;\n      if ((propertyType == null) || propertyType === '') {\n        return '';\n      }\n      items = PropertyTypeService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === propertyType) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('range', function() {\n  return function(n) {\n    var i, j, ref, res;\n    res = [];\n    for (i = j = 1, ref = n + 1; j < ref; i = j += 1) {\n      res.push(i);\n    }\n    return res;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('typesToText', function() {\n  return function(types) {\n    var i, items, len, type;\n    if (!((types != null) && types.length > 0)) {\n      return 'Indefinido';\n    }\n    items = {\n      apart: 'Apartamento',\n      land: 'Tereno',\n      car: 'Carro',\n      house: 'Case'\n    };\n    for (i = 0, len = types.length; i < len; i++) {\n      type = types[i];\n      console.log(type);\n    }\n    return types;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('groupName', [\n  'UserGroupService', function(UserGroupService) {\n    return function(group) {\n      var items, title;\n      if ((group == null) || group === '') {\n        return '';\n      }\n      items = UserGroupService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === group) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('yesOrNo', function() {\n  return function(type) {\n    if (type) {\n      return 'Sim';\n    } else {\n      return 'Não';\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('decimals', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        formatter = function(value) {\n          if (value == null) {\n            return '';\n          }\n          return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n        };\n        ngModel.$formatters.push(function(value) {\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return formatter(value);\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').directive('file', [\n  '$parse', '$timeout', function($parse, $timeout) {\n    return {\n      require: \"ngModel\",\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, fn;\n        fn = $parse(attrs['ngFileSelected']);\n        changeHandler = function(event) {\n          var file, files;\n          files = event.target.files;\n          file = files[0];\n          return $timeout(function() {\n            return fn($scope, {\n              $file: file,\n              $event: event\n            });\n          });\n        };\n        return elem.bind('change', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').directive('meters', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        console.log(ngModel.$modelValue);\n        formatter = function(value) {\n          if (value == null) {\n            value = 0;\n          }\n          value = value.toString().replace('m²', '');\n          value = value.toString().replace(/\\D/g, '');\n          return value + 'm²';\n        };\n        ngModel.$formatters.push(function(value) {\n          console.log(value);\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return value.toString().replace('m²', '');\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          console.log(newValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('AccountCtrl', [\n  '$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', function($scope, $rootScope, $loading, $logger, storage, UserService) {\n    $scope.user = {};\n    $scope.edit = false;\n    $loading.show();\n    UserService.getMyAccount().then(function(response) {\n      $scope.user = response.data;\n      return $loading.hide();\n    })[\"catch\"](function(response) {\n      $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.');\n      return $loading.hide();\n    });\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    return $scope.doUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.update($scope.user).then(function(response) {\n        $logger.success('Sua conta foi atualizada com sucesso!');\n        storage.updateToken(response.data.token);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao editar sua conta. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('ClientsCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) {\n    $scope.client = {};\n    $scope.clients = [];\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      ClientService.get($stateParams.id).then(function(response) {\n        $scope.client = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      ClientService.getAll().then(function(response) {\n        $scope.clients = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.client.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return ClientService.saveOrUpdate($scope.client).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.clients');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var client;\n      client = $scope.clients[index];\n      if (client._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return ClientService[\"delete\"](client._id).then(function(response) {\n        $logger.success('Cliente excluído com sucesso!');\n        $scope.clients.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('LoginCtrl', [\n  '$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', function($scope, $rootScope, $state, $logger, storage, UserService) {\n    $scope.user = {};\n    return $scope.doLogin = function() {\n      if (!$rootScope.forms.login.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $scope.user.origin = 'admin';\n      return UserService.doLogin($scope.user).then(function(response) {\n        storage.setCodes(response.data);\n        return $state.go('dashboard.home');\n      })[\"catch\"](function(response) {\n        return $logger.error('Usuário e/ou senha inválido(s).');\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('PropertiesCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) {\n    var cities, convertData, revertData;\n    $scope.property = {\n      payments: [],\n      interest: {\n        types: [],\n        allMeters: [10, 500],\n        allVacancies: [0, 10],\n        allFloors: [1, 30],\n        allValues: [1000, 5000000],\n        allIptus: [1000, 15000],\n        allCondominiums: [1000, 500000],\n        allLocations: [1000, 50000]\n      }\n    };\n    $scope.properties = [];\n    $scope.cities = [];\n    $scope.states = [];\n    $scope.clients = [];\n    cities = [];\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      PropertyService.get($stateParams.id).then(function(response) {\n        $scope.property = response.data;\n        convertData();\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return LocationService.getCitiesByState($scope.property.address.state);\n      }).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[$scope.property.address.state] = currentCities;\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      PropertyService.getAll().then(function(response) {\n        $scope.properties = $filter('orderBy')(response.data, '-created');\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.showCities = function(state) {\n      if (cities[state] != null) {\n        $scope.cities = cities[state];\n        return false;\n      }\n      $loading.show();\n      return LocationService.getCitiesByState(state).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[state] = currentCities;\n        return $loading.hide();\n      })[\"catch\"](function() {\n        return $loading.hide();\n      });\n    };\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.property.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      revertData();\n      return PropertyService.saveOrUpdate($scope.property).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.properties');\n      })[\"catch\"](function(response) {\n        if (response.data.code === 8) {\n          $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.');\n        } else {\n          $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.');\n        }\n        return $loading.hide();\n      });\n    };\n    $scope.doDelete = function(index) {\n      var property;\n      property = $scope.properties[index];\n      if (property._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return PropertyService[\"delete\"](property._id).then(function(response) {\n        $logger.success('Imóvel excluído com sucesso!');\n        $scope.properties.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    $scope.doUploadCSV = function(file) {\n      console.log('Entrou....');\n      if ((file == null) || file.type !== 'text/csv') {\n        $logger.error('Por favor, selecione um arquivo válido do tipo .csv');\n        return false;\n      }\n      $loading.show();\n      return PropertyService.importCsv(file).then(function(response) {\n        console.log(response);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        console.log(response);\n        $logger.error('Erro ao importar dados. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    convertData = function() {\n      $scope.property.interest.allMeters = [10, 500];\n      $scope.property.interest.allVacancies = [0, 10];\n      $scope.property.interest.allFloors = [1, 30];\n      $scope.property.interest.allValues = [1000, 5000000];\n      $scope.property.interest.allIptus = [1000, 15000];\n      $scope.property.interest.allCondominiums = [1000, 500000];\n      $scope.property.interest.allLocations = [1000, 50000];\n      if ($scope.property.interest.types != null) {\n        $scope.property.interest.types = [];\n      }\n      if ($scope.property.interest.meters != null) {\n        $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min;\n        $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max;\n      }\n      if ($scope.property.interest.condominium != null) {\n        $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min;\n        $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max;\n      }\n      if ($scope.property.interest.vacancy != null) {\n        $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min;\n        $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max;\n      }\n      if ($scope.property.interest.floor != null) {\n        $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min;\n        $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max;\n      }\n      if ($scope.property.interest.value != null) {\n        $scope.property.interest.allValues[0] = $scope.property.interest.value.min;\n        $scope.property.interest.allValues[1] = $scope.property.interest.value.max;\n      }\n      if ($scope.property.interest.iptu != null) {\n        $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min;\n        $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max;\n      }\n      if ($scope.property.interest.location != null) {\n        $scope.property.interest.allLocations[0] = $scope.property.interest.location.min;\n        return $scope.property.interest.allLocations[1] = $scope.property.interest.location.max;\n      }\n    };\n    return revertData = function() {\n      $scope.property.interest.meters = {\n        min: $scope.property.interest.allMeters[0],\n        max: $scope.property.interest.allMeters[1]\n      };\n      delete $scope.property.interest.allMeters;\n      $scope.property.interest.condominium = {\n        min: $scope.property.interest.allCondominiums[0],\n        max: $scope.property.interest.allCondominiums[1]\n      };\n      delete $scope.property.interest.allCondominiums;\n      $scope.property.interest.vacancy = {\n        min: $scope.property.interest.allVacancies[0],\n        max: $scope.property.interest.allVacancies[1]\n      };\n      delete $scope.property.interest.allVacancies;\n      $scope.property.interest.floor = {\n        min: $scope.property.interest.allFloors[0],\n        max: $scope.property.interest.allFloors[1]\n      };\n      delete $scope.property.interest.allFloors;\n      $scope.property.interest.value = {\n        min: $scope.property.interest.allValues[0],\n        max: $scope.property.interest.allValues[1]\n      };\n      delete $scope.property.interest.allValues;\n      $scope.property.interest.iptu = {\n        min: $scope.property.interest.allIptus[0],\n        max: $scope.property.interest.allIptus[1]\n      };\n      delete $scope.property.interest.allIptus;\n      $scope.property.interest.location = {\n        min: $scope.property.interest.allLocations[0],\n        max: $scope.property.interest.allLocations[1]\n      };\n      return delete $scope.property.interest.allLocations;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('UsersCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'UserGroupService', 'UserService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) {\n    $scope.user = {};\n    $scope.users = [];\n    $scope.groups = UserGroupService.getAll();\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      UserService.get($stateParams.id).then(function(response) {\n        $scope.user = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      UserService.getAll().then(function(response) {\n        $scope.users = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.saveOrUpdate($scope.user).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.users');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var user;\n      user = $scope.users[index];\n      if (user._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return UserService[\"delete\"](user._id).then(function(response) {\n        $logger.success('Usuário excluído com sucesso!');\n        $scope.users.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n","'use strict'\n\nangular.module('oneImobiliaria')\n.config ['$stateProvider', '$httpProvider', '$urlRouterProvider', ($stateProvider, $httpProvider, $urlRouterProvider) ->\n\n  $stateProvider\n\n  .state 'login',\n    url: '/login'\n    views:\n      main:\n        templateUrl: 'app/views/login/index.html'\n        controller: 'LoginCtrl'\n      'error@login':\n        templateUrl: 'app/views/error.html'\n    requiredLogin: false\n\n  .state 'dashboard',\n    url: '/dashboard'\n    abstract: true\n    views:\n      main: {}\n      header:\n        templateUrl: 'app/views/header.html'\n      footer:\n        templateUrl: 'app/views/footer.html'\n    requiredLogin: true\n\n  .state 'dashboard.home',\n    url: '/home'\n    views:\n      'main@':\n        templateUrl: 'app/views/home/index.html'\n    requiredLogin: true\n\n  .state 'dashboard.users',\n    url: '/users'\n    views:\n      'main@':\n        templateUrl: 'app/views/users/index.html'\n        controller: 'UsersCtrl'\n      'submenu@dashboard.users':\n        templateUrl: 'app/views/users/submenu.html'\n      'error@dashboard.users':\n        templateUrl: 'app/views/error.html'\n      'success@dashboard.users':\n        templateUrl: 'app/views/success.html'\n      'loading@dashboard.users':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.users.new',\n    url: '/new'\n    views:\n      'main@':\n        templateUrl: 'app/views/users/form.html'\n        controller: 'UsersCtrl'\n      'error@dashboard.users.new':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.users.new':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.users.edit',\n    url: '/edit/:id'\n    views:\n      'main@':\n        templateUrl: 'app/views/users/form.html'\n        controller: 'UsersCtrl'\n      'error@dashboard.users.edit':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.users.edit':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.clients',\n    url: '/clients'\n    views:\n      'main@':\n        templateUrl: 'app/views/clients/index.html'\n        controller: 'ClientsCtrl'\n      'submenu@dashboard.clients':\n        templateUrl: 'app/views/clients/submenu.html'\n      'error@dashboard.clients':\n        templateUrl: 'app/views/error.html'\n      'success@dashboard.clients':\n        templateUrl: 'app/views/success.html'\n      'loading@dashboard.clients':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.clients.new',\n    url: '/new'\n    views:\n      'main@':\n        templateUrl: 'app/views/clients/form.html'\n        controller: 'ClientsCtrl'\n      'error@dashboard.clients.new':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.clients.new':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.clients.edit',\n    url: '/edit/:id'\n    views:\n      'main@':\n        templateUrl: 'app/views/clients/form.html'\n        controller: 'ClientsCtrl'\n      'error@dashboard.clients.edit':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.users.edit':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.properties',\n    url: '/properties'\n    views:\n      'main@':\n        templateUrl: 'app/views/properties/index.html'\n        controller: 'PropertiesCtrl'\n      'submenu@dashboard.properties':\n        templateUrl: 'app/views/properties/submenu.html'\n      'error@dashboard.properties':\n        templateUrl: 'app/views/error.html'\n      'success@dashboard.properties':\n        templateUrl: 'app/views/success.html'\n      'loading@dashboard.properties':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.properties.new',\n    url: '/new'\n    views:\n      'main@':\n        templateUrl: 'app/views/properties/form.html'\n        controller: 'PropertiesCtrl'\n      'submenu@dashboard.properties.new':\n        templateUrl: 'app/views/properties/form-submenu.html'\n      'property@dashboard.properties.new':\n        templateUrl: 'app/views/properties/property.html'\n      'interest@dashboard.properties.new':\n        templateUrl: 'app/views/properties/interest.html'\n      'error@dashboard.properties.new':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.properties.new':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.properties.edit',\n    url: '/edit/:id'\n    views:\n      'main@':\n        templateUrl: 'app/views/properties/form.html'\n        controller: 'PropertiesCtrl'\n      'submenu@dashboard.properties.edit':\n        templateUrl: 'app/views/properties/form-submenu.html'\n      'property@dashboard.properties.edit':\n        templateUrl: 'app/views/properties/property.html'\n      'interest@dashboard.properties.edit':\n        templateUrl: 'app/views/properties/interest.html'\n      'error@dashboard.properties.edit':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.properties.edit':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.account',\n    url: '/account'\n    views:\n      'main@':\n        templateUrl: 'app/views/account/form.html'\n        controller: 'AccountCtrl'\n      'error@dashboard.account':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.account':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  $urlRouterProvider.otherwise('/login')\n\n  # Access token injector\n  $httpProvider.interceptors.push('sessionInjector')\n\n  $httpProvider.defaults.useXDomain = true\n  $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json'\n  delete $httpProvider.defaults.headers.common['X-Requested-With']\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'ClientService', ['$http', '$state', 'RESOURCES', ($http, $state, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/clients'\n\n  create: (client) ->\n    return $http.post apiUrl, client\n  update: (client) ->\n    return $http.put apiUrl + '/' + client._id, client\n  saveOrUpdate: (client) ->\n    if client._id then this.update(client)\n    else this.create(client)\n  getAll: () ->\n    return $http.get apiUrl\n  get: (id) ->\n    return $http.get apiUrl + '/' + id\n  delete: (id) ->\n    return $http.delete apiUrl+ '/' + id\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service '$loading', ['$rootScope', ($rootScope) ->\n\n  show: () ->\n    $rootScope.loading = true\n  hide: () ->\n    $rootScope.loading = false\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'LocationService', ['$http', '$state', 'RESOURCES', ($http, $state, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/cities'\n\n  getAll: () ->\n    return $http.get apiUrl\n  getAllStates: () ->\n    return $http.get apiUrl + '/states'\n  getCitiesByState: (state) ->\n    return $http.get apiUrl + '/states/' + state\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service '$logger', ['$rootScope', ($rootScope) ->\n\n  clean: () ->\n    $rootScope.success = false\n    $rootScope.error = false\n    $rootScope.modalError = false\n  error: (errorString) ->\n    this.clean()\n    $rootScope.error = errorString\n  modalError: (errorString) ->\n    this.clean()\n    $rootScope.modalError = errorString\n  success: (successString) ->\n    this.clean()\n    $rootScope.success = successString\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'propertyType', ['PropertyTypeService', (PropertyTypeService) ->\n  (propertyType) ->\n\n    return '' if not propertyType? or propertyType == ''\n    items = PropertyTypeService.getAll()\n\n    title = ''\n    items.map (item) ->\n      title = item.title if item.code == propertyType\n\n    return title\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'PropertyService', ['$http', '$state', 'RESOURCES', ($http, $state, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/properties'\n\n  create: (property) ->\n    return $http.post apiUrl, property\n  update: (property) ->\n    return $http.put apiUrl + '/' + property._id, property\n  saveOrUpdate: (property) ->\n    if property._id then this.update(property)\n    else this.create(property)\n  getAll: () ->\n    return $http.get apiUrl\n  get: (id) ->\n    return $http.get apiUrl + '/' + id\n  delete: (id) ->\n    return $http.delete apiUrl + '/' + id\n  importCsv: (file) ->\n\n    form = new FormData()\n    form.append 'csv', file\n\n    return $http.post apiUrl + '/import/csv', form,\n      withCredentials: false\n      headers:\n        'Content-Type': undefined\n      transformRequest: angular.identity\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'sessionInjector', ['storage', (storage) ->\n\n  isUnloggedPage = (config) ->\n    return (config.url.indexOf('auth') > -1 or config.url.indexOf('remember') > -1)\n\n  request: (config)->\n    if !isUnloggedPage(config)\n      config.headers['x-access-token'] = storage.getSessionToken()\n    return config\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'storage', () ->\n  isLogged: () ->\n    return (localStorage.getItem('x-code-one') != null) && (localStorage.getItem('code-one') != null)\n  setCodes: (codes) ->\n    localStorage.setItem('x-code-one', codes.token)\n    localStorage.setItem('code-one', codes.code)\n    localStorage.setItem('group-one', codes.type)\n    localStorage.setItem('name-one', codes.name)\n  updateToken: (token) ->\n    localStorage.setItem('x-code-one', token)\n  getSessionToken: () ->\n    localStorage.getItem('x-code-one')\n  getCode: () ->\n    localStorage.getItem('code-one')\n  getName: () ->\n    localStorage.getItem('name-one') || ''\n  getGroup: () ->\n    localStorage.getItem('group-one') || ''\n  clean: () ->\n    localStorage.removeItem('x-code-one')\n    localStorage.removeItem('code-one')\n    localStorage.removeItem('group-one')\n    localStorage.removeItem('name-one')","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'groupName', ['UserGroupService', (UserGroupService) ->\n  (group) ->\n\n    return '' if not group? or group == ''\n    items = UserGroupService.getAll()\n\n    title = ''\n    items.map (item) ->\n      title = item.title if item.code == group\n\n    return title\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'UserService', ['$http', '$state', 'storage', 'RESOURCES', ($http, $state, storage, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/accounts'\n\n  isLogged: () ->\n    return storage.isLogged()\n  doLogin: (user) ->\n    return $http.post apiUrl + '/auth', user\n  doLogout: () ->\n      storage.clean()\n      $state.go('login')\n      return\n  create: (user) ->\n    return $http.post apiUrl, user\n  update: (user) ->\n    return $http.put apiUrl + '/' + user._id, user\n  saveOrUpdate: (user) ->\n    if user._id then this.update(user)\n    else this.create(user)\n  getAll: () ->\n    return $http.get apiUrl\n  get: (id) ->\n    return $http.get apiUrl + '/' + id\n  getMyAccount: () ->\n    return $http.get apiUrl + '/' + storage.getCode()\n  delete: (id) ->\n    return $http.delete apiUrl+ '/' + id\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'address', () ->\n  (address) ->\n\n    if not address? || (not address.street? and not address.number? and not address.complement?)\n      return 'Indefinido'\n\n    fullAddress = ''\n\n    if address.street?\n      fullAddress += address.street\n\n    if address.number?\n      fullAddress += ', ' + address.number\n\n    if address.complement?\n      fullAddress += ' - ' + address.complement\n\n    return fullAddress","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'dateBr', () ->\n  (input) ->\n\n    return '' if not input?\n    date = input.split('T')\n\n    moment(date[0]).format('DD/MM/YYYY')","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'dateTimeBr', () ->\n  (input) ->\n    return '' if not input?\n    moment.locale('pt-br')\n    moment(input).calendar(null, {sameElse: 'DD/MM/YYYY - H:mm'})","'use strict'\n\nangular.module('oneImobiliaria')\n.directive 'decimals', ['$parse', ($parse) ->\n  require: \"?ngModel\"\n  scope:\n    ngModel:'='\n  restrict: 'A'\n  link: ($scope, elem, attrs, ngModel) ->\n\n    formatter = (value) ->\n      return '' if not value?\n      return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")\n\n    ngModel.$formatters.push (value) ->\n      formatter(value)\n\n    ngModel.$parsers.push (value) ->\n      formatter(value)\n\n    changeHandler = () ->\n      newValue = formatter(ngModel.$modelValue)\n\n      $parse(attrs.ngModel).assign($scope, newValue);\n      ngModel.$viewValue = newValue;\n      ngModel.$render();\n\n    elem.bind('keyup', changeHandler)\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'firstName', () ->\n  (name) ->\n\n    return '' if not name? or name == ''\n    names = name.split(' ')\n    return names[0]","'use strict'\n\nangular.module('oneImobiliaria')\n.directive 'meters', ['$parse', ($parse) ->\n  require: \"?ngModel\"\n  scope:\n    ngModel:'='\n  restrict: 'A'\n  link: ($scope, elem, attrs, ngModel) ->\n\n    console.log(ngModel.$modelValue)\n    formatter = (value) ->\n      value = 0 if not value?\n      value = value.toString().replace('m²', '')\n      value = value.toString().replace(/\\D/g, '')\n      return value + 'm²'\n\n    ngModel.$formatters.push (value) ->\n      console.log(value)\n      formatter(value)\n\n    ngModel.$parsers.push (value) ->\n      value.toString().replace('m²', '')\n\n    changeHandler = () ->\n      newValue = formatter(ngModel.$modelValue)\n\n      console.log(newValue)\n      $parse(attrs.ngModel).assign($scope, newValue);\n      ngModel.$viewValue = newValue;\n      ngModel.$render();\n\n    elem.bind('keyup', changeHandler)\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'orderByString', () ->\n  (array, property, reverse) ->\n    result = array.sort (object1, object2) ->\n      object1.localeCompare(object2) if angular.isUndefined(property)\n      object1[property].localeCompare(object2[property])\n\n    if reverse then result.reverse()\n    else result","'use strict';\n\nangular.module('oneImobiliaria')\n.filter 'phoneBr', () ->\n  (input) ->\n    return '' if not input?\n\n    if input.length == 10\n        return input.replace(/(\\d{2})(\\d{4})(\\d{4})/g,\"(\\$1) \\$2-\\$3\")\n    else\n        return input.replace(/(\\d{2})(\\d{5})(\\d{4})/g,\"(\\$1) \\$2-\\$3\")","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'range', () ->\n  (n) ->\n    res = []\n    res.push(i) for i in [1...(n + 1)] by 1\n    return res","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'typesToText', () ->\n  (types) ->\n\n    return 'Indefinido' unless types? and types.length > 0\n\n    items =\n      apart: 'Apartamento'\n      land: 'Tereno'\n      car: 'Carro'\n      house: 'Case'\n\n    for type in types\n      console.log(type)\n\n    return types","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'yesOrNo', () ->\n  (type) ->\n\n    if type then 'Sim'\n    else 'Não'","'use strict'\n\nangular.module('oneImobiliaria')\n.directive 'file', ['$parse', '$timeout', ($parse, $timeout) ->\n  require: \"ngModel\"\n  restrict: 'A'\n  link: ($scope, elem, attrs, ngModel) ->\n\n    fn = $parse(attrs['ngFileSelected'])\n    changeHandler = (event) ->\n      files = event.target.files\n      file = files[0]\n\n      $timeout () ->\n        fn $scope,\n          $file: file,\n          $event: event\n\n    elem.bind('change', changeHandler)\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'AccountCtrl', ['$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', ($scope, $rootScope, $loading, $logger, storage, UserService) ->\n\n  $scope.user = {}\n  $scope.edit = false\n\n  $loading.show()\n  UserService.getMyAccount()\n  .then (response) ->\n    $scope.user = response.data\n    $loading.hide()\n  .catch (response) ->\n    $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.')\n    $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.doUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    UserService.update($scope.user)\n    .then (response) ->\n      $logger.success('Sua conta foi atualizada com sucesso!')\n      storage.updateToken(response.data.token)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao editar sua conta. Por favor, tente novamente.')\n      $loading.hide()\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'ClientsCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) ->\n\n  $scope.client = {}\n  $scope.clients = []\n\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    ClientService.get($stateParams.id)\n    .then (response) ->\n      $scope.client = response.data\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar clientes. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar clientes. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.client.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    ClientService.saveOrUpdate($scope.client)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.clients')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    client = $scope.clients[index]\n    return false if client._id == storage.getCode()\n\n    $loading.show()\n    ClientService.delete(client._id)\n    .then (response) ->\n      $logger.success('Cliente excluído com sucesso!')\n      $scope.clients.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir cliente. Por favor, tente novamente.')\n      $loading.hide()\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'LoginCtrl', ['$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', ($scope, $rootScope, $state, $logger, storage, UserService) ->\n\n  $scope.user = {}\n\n  $scope.doLogin = () ->\n    if !$rootScope.forms.login.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $scope.user.origin = 'admin'\n    UserService.doLogin($scope.user)\n    .then (response) ->\n      storage.setCodes(response.data)\n      $state.go('dashboard.home')\n    .catch (response) ->\n      $logger.error('Usuário e/ou senha inválido(s).')\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'PropertiesCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) ->\n\n  $scope.property =\n    payments: []\n    interest:\n      types: []\n      allMeters:  [10, 500]\n      allVacancies: [0, 10]\n      allFloors: [1, 30]\n      allValues: [1000, 5000000]\n      allIptus: [1000, 15000]\n      allCondominiums: [1000, 500000]\n      allLocations: [1000, 50000]\n\n#  $scope.property = {\n#    \"code\":\"123\",\n#    \"client\":\"585ecf5bd5af8351e3b894e3\",\n#    \"type\":\"apartament\",\n#    \"meters\":100,\n#    \"vacancy\":\"1\",\n#    \"floor\":\"2\",\n#    \"address\":{\n#      \"street\":\"Rua Simoes Delgado\",\n#      \"number\":\"15\",\n#      \"state\":\"SP\",\n#      \"city\":\"São Paulo\",\n#      \"neighborhood\":\"Jardim 9 de Julho\",\n#      \"cep\":\"03952020\"\n#    },\n#    \"hasSubway\":true,\n#    \"subwayStation\":\"Penha\",\n#    \"value\":1,\n#    \"condominium\":2,\n#    \"iptu\":3,\n#    \"location\":4,\n#    \"payments\": [\n#      \"financing\",\n#      \"money\",\n#      \"others\"\n#    ],\n#    \"exchange\":0.1,\n#    \"difference\":0.5,\n#    \"carValue\":5,\n#    \"settled\":true,\n#    \"car\":true\n#    interest:\n#      types: []\n#      allMeters:  [10, 500]\n#      allVacancies: [0, 10]\n#      allFloors: [1, 30]\n#      allValues: [1000, 5000000]\n#      allIptus: [1000, 15000]\n#      allCondominiums: [1000, 500000]\n#      allLocations: [1000, 50000]\n#  }\n\n  $scope.properties = []\n  $scope.cities = []\n  $scope.states = []\n  $scope.clients = []\n  cities = []\n\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    PropertyService.get($stateParams.id)\n    .then (response) ->\n      $scope.property = response.data\n      convertData()\n      return LocationService.getAllStates()\n    .then (response) ->\n      $scope.states = response.data.sort()\n      return LocationService.getCitiesByState($scope.property.address.state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[$scope.property.address.state] = currentCities\n      return ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderByString')(response.data, 'name')\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    PropertyService.getAll()\n    .then (response) ->\n      $scope.properties = $filter('orderBy')(response.data, '-created')\n      return LocationService.getAllStates()\n    .then (response) ->\n      $scope.states = response.data.sort()\n      return ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderByString')(response.data, 'name')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.showCities = (state) ->\n\n    if cities[state]?\n      $scope.cities = cities[state]\n      return false\n\n    $loading.show()\n    LocationService.getCitiesByState(state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[state] = currentCities\n      $loading.hide()\n    .catch () ->\n      $loading.hide()\n\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.property.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n\n    revertData()\n    PropertyService.saveOrUpdate($scope.property)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.properties')\n    .catch (response) ->\n      if response.data.code == 8\n        $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.')\n      else\n        $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    property = $scope.properties[index]\n    return false if property._id == storage.getCode()\n\n    $loading.show()\n    PropertyService.delete(property._id)\n    .then (response) ->\n      $logger.success('Imóvel excluído com sucesso!')\n      $scope.properties.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doUploadCSV = (file) ->\n    console.log('Entrou....')\n\n    if not file? or file.type != 'text/csv'\n      $logger.error('Por favor, selecione um arquivo válido do tipo .csv')\n      return false\n\n    $loading.show()\n    PropertyService.importCsv(file)\n    .then (response) ->\n      console.log(response)\n      $loading.hide()\n    .catch (response) ->\n      console.log(response)\n      $logger.error('Erro ao importar dados. Por favor, tente novamente.')\n      $loading.hide()\n\n\n\n\n  convertData = () ->\n    $scope.property.interest.allMeters =  [10, 500]\n    $scope.property.interest.allVacancies = [0, 10]\n    $scope.property.interest.allFloors = [1, 30]\n    $scope.property.interest.allValues = [1000, 5000000]\n    $scope.property.interest.allIptus = [1000, 15000]\n    $scope.property.interest.allCondominiums = [1000, 500000]\n    $scope.property.interest.allLocations = [1000, 50000]\n\n    if $scope.property.interest.types?\n      $scope.property.interest.types = []\n\n    if $scope.property.interest.meters?\n      $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min\n      $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max\n\n    if $scope.property.interest.condominium?\n      $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min\n      $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max\n\n    if $scope.property.interest.vacancy?\n      $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min\n      $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max\n\n    if $scope.property.interest.floor?\n      $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min\n      $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max\n\n    if $scope.property.interest.value?\n      $scope.property.interest.allValues[0] = $scope.property.interest.value.min\n      $scope.property.interest.allValues[1] = $scope.property.interest.value.max\n\n    if $scope.property.interest.iptu?\n      $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min\n      $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max\n\n    if $scope.property.interest.location?\n      $scope.property.interest.allLocations[0] = $scope.property.interest.location.min\n      $scope.property.interest.allLocations[1] = $scope.property.interest.location.max\n\n\n  revertData = () ->\n    $scope.property.interest.meters =\n      min: $scope.property.interest.allMeters[0]\n      max: $scope.property.interest.allMeters[1]\n    delete $scope.property.interest.allMeters\n\n    $scope.property.interest.condominium =\n      min: $scope.property.interest.allCondominiums[0]\n      max: $scope.property.interest.allCondominiums[1]\n    delete $scope.property.interest.allCondominiums\n\n    $scope.property.interest.vacancy =\n      min: $scope.property.interest.allVacancies[0]\n      max: $scope.property.interest.allVacancies[1]\n    delete $scope.property.interest.allVacancies\n\n    $scope.property.interest.floor =\n      min: $scope.property.interest.allFloors[0]\n      max: $scope.property.interest.allFloors[1]\n    delete $scope.property.interest.allFloors\n\n    $scope.property.interest.value =\n      min: $scope.property.interest.allValues[0]\n      max: $scope.property.interest.allValues[1]\n    delete $scope.property.interest.allValues\n\n    $scope.property.interest.iptu =\n      min: $scope.property.interest.allIptus[0]\n      max: $scope.property.interest.allIptus[1]\n    delete $scope.property.interest.allIptus\n\n    $scope.property.interest.location =\n      min: $scope.property.interest.allLocations[0]\n      max: $scope.property.interest.allLocations[1]\n    delete $scope.property.interest.allLocations\n]\n","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'UsersCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage','UserGroupService', 'UserService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) ->\n\n  $scope.user = {}\n  $scope.users = []\n\n  $scope.groups = UserGroupService.getAll()\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    UserService.get($stateParams.id)\n    .then (response) ->\n      $scope.user = response.data\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    UserService.getAll()\n    .then (response) ->\n      $scope.users = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    UserService.saveOrUpdate($scope.user)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.users')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    user = $scope.users[index]\n    return false if user._id == storage.getCode()\n\n    $loading.show()\n    UserService.delete(user._id)\n    .then (response) ->\n      $logger.success('Usuário excluído com sucesso!')\n      $scope.users.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n]"]}