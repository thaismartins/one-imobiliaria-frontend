{"version":3,"sources":["app.coffee","app.js","routes.coffee","client.coffee","loading.coffee","location.coffee","logger.coffee","property-type.coffee","property.coffee","session.coffee","storage.coffee","user-group.coffee","user.coffee","address.coffee","date-br.coffee","date-time-br.coffee","decimals.coffee","error-import.coffee","first-name.coffee","meters.coffee","order-by-string.coffee","phone-br.coffee","range.coffee","types-to-text.coffee","yes-or-no.coffee","confirm.coffee","file.coffee","account.coffee","clients.coffee","login.coffee","properties.coffee","search.coffee","users.coffee"],"names":["angular","module","run","$rootScope","$state","RESOURCES","storage","UserService","error","success","loading","fileUrl","API_URL","newProperties","page","name","showMenu","showSubmenu","appTitle","forms","doLogout","toggleMenu","toggleSubmenu","$on","current","split","group","getGroup","getName","requiredLogin","isLogged","go","constant","config","$stateProvider","$httpProvider","$urlRouterProvider","state","url","views","main","templateUrl","controller","error@login","abstract","header","footer","main@","submenu@dashboard.users","error@dashboard.users","success@dashboard.users","loading@dashboard.users","submenu@dashboard.users.new","error@dashboard.users.new","loading@dashboard.users.new","submenu@dashboard.users.edit","error@dashboard.users.edit","loading@dashboard.users.edit","submenu@dashboard.clients","search@dashboard.clients","error@dashboard.clients","success@dashboard.clients","loading@dashboard.clients","error@dashboard.clients.new","loading@dashboard.clients.new","error@dashboard.clients.edit","submenu@dashboard.properties","search@dashboard.properties","error@dashboard.properties","success@dashboard.properties","loading@dashboard.properties","submenu@dashboard.properties.new","property@dashboard.properties.new","interest@dashboard.properties.new","error@dashboard.properties.new","loading@dashboard.properties.new","submenu@dashboard.properties.edit","property@dashboard.properties.edit","interest@dashboard.properties.edit","error@dashboard.properties.edit","loading@dashboard.properties.edit","submenu@dashboard.properties.confirm","error@dashboard.account","loading@dashboard.account","submenu@dashboard.search","submenu-filter@dashboard.search","filters-interest@dashboard.search","filters-property@dashboard.search","error@dashboard.search","loading@dashboard.search","otherwise","interceptors","push","defaults","useXDomain","headers","common","service","$http","apiUrl","create","client","post","update","put","_id","saveOrUpdate","this","getAll","get","id","delete","show","hide","getAllStates","getCitiesByState","clean","modalError","errorString","successString","items","title","code","$httpParamSerializer","property","search","query","console","log","importCsv","file","form","FormData","append","withCredentials","Content-Type","transformRequest","identity","$injector","isUnloggedPage","indexOf","request","getSessionToken","responseError","rejection","data","localStorage","getItem","setCodes","codes","setItem","token","type","updateToken","getCode","removeItem","doLogin","user","getMyAccount","filter","address","fullAddress","street","number","complement","input","date","moment","format","locale","calendar","sameElse","num","toString","replace","fields","names","meters","array","reverse","result","sort","object1","object2","isUndefined","localeCompare","length","PropertyTypeService","propertyType","map","item","n","i","j","ref","res","types","len","apart","land","car","house","UserGroupService","directive","priority","restrict","link","scope","element","attrs","message","ngConfirmClick","bind","e","confirm","stopImmediatePropagation","preventDefault","$parse","require","ngModel","$scope","elem","changeHandler","formatter","value","$formatters","$parsers","newValue","$modelValue","assign","$viewValue","$render","$timeout","fn","event","files","target","$file","$event","$loading","$logger","edit","then","response","canEdit","doUpdate","$valid","$stateParams","$filter","ClientService","clients","doDelete","index","splice","login","origin","$q","PropertyService","LocationService","cities","convertData","revertData","properties","states","currentCities","showCities","doTryAgain","errors","doRemoveCsv","doUploadCSV","content","redirect","promise","defer","resolve","reject","ref1","ref2","ref3","ref4","ref5","ref6","ref7","interest","allMeters","allVacancies","allFloors","allValues","allIptus","allCondominiums","allLocations","min","max","condominium","vacancy","floor","iptu","location","toFixed","resetValues","showFilters","toggleFilters","doFilter","users","groups"],"mappings":"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","file":"app.min.js","sourcesContent":[null,"'use strict';\nangular.module('oneImobiliaria', ['ui.router', 'ui.utils.masks', 'ui.slider']).run([\n  '$rootScope', '$state', 'RESOURCES', 'storage', 'UserService', function($rootScope, $state, RESOURCES, storage, UserService) {\n    $rootScope.error = false;\n    $rootScope.success = false;\n    $rootScope.loading = false;\n    $rootScope.fileUrl = RESOURCES.API_URL + '/';\n    $rootScope.newProperties = {};\n    $rootScope.page = '';\n    $rootScope.name = '';\n    $rootScope.showMenu = false;\n    $rootScope.showSubmenu = false;\n    $rootScope.appTitle = 'One Consultoria Imobiliária';\n    $rootScope.forms = {};\n    $rootScope.doLogout = function() {\n      return UserService.doLogout();\n    };\n    $rootScope.toggleMenu = function() {\n      return $rootScope.showMenu = !$rootScope.showMenu;\n    };\n    $rootScope.toggleSubmenu = function() {\n      return $rootScope.showSubmenu = !$rootScope.showSubmenu;\n    };\n    return $rootScope.$on('$stateChangeSuccess', function() {\n      var page;\n      page = $state.current.name.split('.');\n      $rootScope.page = page[1] || '';\n      $rootScope.group = storage.getGroup();\n      $rootScope.name = storage.getName();\n      $rootScope.error = false;\n      $rootScope.success = false;\n      $rootScope.loading = false;\n      $rootScope.showMenu = false;\n      $rootScope.showSubmenu = false;\n      if ($state.current.requiredLogin && !UserService.isLogged()) {\n        UserService.doLogout();\n      }\n      if (!$state.current.requiredLogin && UserService.isLogged()) {\n        $state.go('dashboard.home');\n      }\n      if ($rootScope.page === 'users' && $rootScope.group !== 'admin') {\n        return $state.go('dashboard.home');\n      }\n    });\n  }\n]).constant('RESOURCES', {\n  'API_URL': 'http://localhost:3000/api'\n});\n\n'use strict';\nangular.module('oneImobiliaria').config([\n  '$stateProvider', '$httpProvider', '$urlRouterProvider', function($stateProvider, $httpProvider, $urlRouterProvider) {\n    $stateProvider.state('login', {\n      url: '/login',\n      views: {\n        main: {\n          templateUrl: 'app/views/login/index.html',\n          controller: 'LoginCtrl'\n        },\n        'error@login': {\n          templateUrl: 'app/views/error.html'\n        }\n      },\n      requiredLogin: false\n    }).state('dashboard', {\n      url: '/dashboard',\n      abstract: true,\n      views: {\n        main: {},\n        header: {\n          templateUrl: 'app/views/header.html'\n        },\n        footer: {\n          templateUrl: 'app/views/footer.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.home', {\n      url: '/home',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/home/index.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users', {\n      url: '/users',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/index.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users': {\n          templateUrl: 'app/views/users/submenu.html'\n        },\n        'error@dashboard.users': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.users': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.users': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users.new': {\n          templateUrl: 'app/views/users/form-submenu.html'\n        },\n        'error@dashboard.users.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users.edit': {\n          templateUrl: 'app/views/users/form-submenu.html'\n        },\n        'error@dashboard.users.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients', {\n      url: '/clients',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/index.html',\n          controller: 'ClientsCtrl'\n        },\n        'submenu@dashboard.clients': {\n          templateUrl: 'app/views/clients/submenu.html'\n        },\n        'search@dashboard.clients': {\n          templateUrl: 'app/views/clients/search.html'\n        },\n        'error@dashboard.clients': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.clients': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.clients': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.clients.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties', {\n      url: '/properties',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/index.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties': {\n          templateUrl: 'app/views/properties/submenu.html'\n        },\n        'search@dashboard.properties': {\n          templateUrl: 'app/views/properties/search.html'\n        },\n        'error@dashboard.properties': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.properties': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.properties': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.confirm', {\n      url: '/confirm',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/confirm.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.confirm': {\n          templateUrl: 'app/views/properties/confirm-submenu.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.account', {\n      url: '/account',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/account/form.html',\n          controller: 'AccountCtrl'\n        },\n        'error@dashboard.account': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.account': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.search', {\n      url: '/search',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/search/index.html',\n          controller: 'SearchCtrl'\n        },\n        'submenu@dashboard.search': {\n          templateUrl: 'app/views/search/submenu.html'\n        },\n        'submenu-filter@dashboard.search': {\n          templateUrl: 'app/views/search/submenu-filter.html'\n        },\n        'filters-interest@dashboard.search': {\n          templateUrl: 'app/views/search/filters-interest.html',\n          controller: 'AccountCtrl'\n        },\n        'filters-property@dashboard.search': {\n          templateUrl: 'app/views/search/filters-property.html',\n          controller: 'AccountCtrl'\n        },\n        'error@dashboard.search': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.search': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    });\n    $urlRouterProvider.otherwise('/login');\n    $httpProvider.interceptors.push('sessionInjector');\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json';\n    return delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('ClientService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/clients';\n    return {\n      create: function(client) {\n        return $http.post(apiUrl, client);\n      },\n      update: function(client) {\n        return $http.put(apiUrl + '/' + client._id, client);\n      },\n      saveOrUpdate: function(client) {\n        if (client._id) {\n          return this.update(client);\n        } else {\n          return this.create(client);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$loading', [\n  '$rootScope', function($rootScope) {\n    return {\n      show: function() {\n        return $rootScope.loading = true;\n      },\n      hide: function() {\n        return $rootScope.loading = false;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('LocationService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/cities';\n    return {\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      getAllStates: function() {\n        return $http.get(apiUrl + '/states');\n      },\n      getCitiesByState: function(state) {\n        return $http.get(apiUrl + '/states/' + state);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$logger', [\n  '$rootScope', function($rootScope) {\n    return {\n      clean: function() {\n        $rootScope.success = false;\n        $rootScope.error = false;\n        return $rootScope.modalError = false;\n      },\n      error: function(errorString) {\n        this.clean();\n        return $rootScope.error = errorString;\n      },\n      modalError: function(errorString) {\n        this.clean();\n        return $rootScope.modalError = errorString;\n      },\n      success: function(successString) {\n        this.clean();\n        return $rootScope.success = successString;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyTypeService', function() {\n  var items;\n  items = [\n    {\n      title: 'Apartamento',\n      code: 'apartament'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Terreno',\n      code: 'land'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Carro',\n      code: 'car'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyService', [\n  '$http', '$state', 'RESOURCES', '$httpParamSerializer', function($http, $state, RESOURCES, $httpParamSerializer) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/properties';\n    return {\n      create: function(property) {\n        return $http.post(apiUrl, property);\n      },\n      update: function(property) {\n        return $http.put(apiUrl + '/' + property._id, property);\n      },\n      saveOrUpdate: function(property) {\n        if (property._id) {\n          return this.update(property);\n        } else {\n          return this.create(property);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      },\n      search: function(query) {\n        console.log($httpParamSerializer(query));\n        return $http.get(apiUrl + '/search?' + $httpParamSerializer(query));\n      },\n      importCsv: function(file) {\n        var form;\n        form = new FormData();\n        form.append('csv', file);\n        return $http.post(apiUrl + '/import/csv', form, {\n          withCredentials: false,\n          headers: {\n            'Content-Type': void 0\n          },\n          transformRequest: angular.identity\n        });\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('sessionInjector', [\n  'storage', '$injector', function(storage, $injector) {\n    var isUnloggedPage;\n    isUnloggedPage = function(config) {\n      return config.url.indexOf('auth') > -1 || config.url.indexOf('remember') > -1;\n    };\n    return {\n      request: function(config) {\n        if (!isUnloggedPage(config)) {\n          config.headers['x-access-token'] = storage.getSessionToken();\n        }\n        return config;\n      },\n      responseError: function(rejection) {\n        if (rejection.data.error.name === 'TokenExpiredError') {\n          storage.clean();\n          $injector.get('$state').go('login');\n          console.log('Entrou');\n        }\n        return rejection;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('storage', function() {\n  return {\n    isLogged: function() {\n      return (localStorage.getItem('x-code-one') !== null) && (localStorage.getItem('code-one') !== null);\n    },\n    setCodes: function(codes) {\n      localStorage.setItem('x-code-one', codes.token);\n      localStorage.setItem('code-one', codes.code);\n      localStorage.setItem('group-one', codes.type);\n      return localStorage.setItem('name-one', codes.name);\n    },\n    updateToken: function(token) {\n      return localStorage.setItem('x-code-one', token);\n    },\n    getSessionToken: function() {\n      return localStorage.getItem('x-code-one');\n    },\n    getCode: function() {\n      return localStorage.getItem('code-one');\n    },\n    getName: function() {\n      return localStorage.getItem('name-one') || '';\n    },\n    getGroup: function() {\n      return localStorage.getItem('group-one') || '';\n    },\n    clean: function() {\n      localStorage.removeItem('x-code-one');\n      localStorage.removeItem('code-one');\n      localStorage.removeItem('group-one');\n      return localStorage.removeItem('name-one');\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserGroupService', function() {\n  var items;\n  items = [\n    {\n      title: 'Administrador(a)',\n      code: 'admin'\n    }, {\n      title: 'Corretor(a)',\n      code: 'broker'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserService', [\n  '$http', '$state', 'storage', 'RESOURCES', function($http, $state, storage, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/accounts';\n    return {\n      isLogged: function() {\n        return storage.isLogged();\n      },\n      doLogin: function(user) {\n        return $http.post(apiUrl + '/auth', user);\n      },\n      doLogout: function() {\n        storage.clean();\n        $state.go('login');\n      },\n      create: function(user) {\n        return $http.post(apiUrl, user);\n      },\n      update: function(user) {\n        return $http.put(apiUrl + '/' + user._id, user);\n      },\n      saveOrUpdate: function(user) {\n        if (user._id) {\n          return this.update(user);\n        } else {\n          return this.create(user);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      getMyAccount: function() {\n        return $http.get(apiUrl + '/' + storage.getCode());\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('address', function() {\n  return function(address) {\n    var fullAddress;\n    if ((address == null) || ((address.street == null) && (address.number == null) && (address.complement == null))) {\n      return 'Indefinido';\n    }\n    fullAddress = '';\n    if (address.street != null) {\n      fullAddress += address.street;\n    }\n    if (address.number != null) {\n      fullAddress += ', ' + address.number;\n    }\n    if (address.complement != null) {\n      fullAddress += ' - ' + address.complement;\n    }\n    return fullAddress;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateBr', function() {\n  return function(input) {\n    var date;\n    if (input == null) {\n      return '';\n    }\n    date = input.split('T');\n    return moment(date[0]).format('DD/MM/YYYY');\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateTimeBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    moment.locale('pt-br');\n    return moment(input).calendar(null, {\n      sameElse: 'DD/MM/YYYY - H:mm'\n    });\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('decimals', function() {\n  return function(num) {\n    if (num == null) {\n      return '';\n    }\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('errorImport', function() {\n  return function(code, fields) {\n    var error;\n    error = '';\n    switch (code) {\n      case 1:\n        error = 'Este cliente já possui um imóvel cadastrado.';\n        break;\n      case 5:\n        error = 'Erro(s) no(s) campo(s) de cliente: ' + fields + '.';\n        break;\n      case 6:\n        error = 'Erro(s) no(s) campo(s) de imóvel: ' + fields + '.';\n        break;\n      default:\n        error = 'Erro ao salvar item. Por favor, verifique o dados inseridos na tabela.';\n    }\n    return error;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('firstName', function() {\n  return function(name) {\n    var names;\n    if ((name == null) || name === '') {\n      return '';\n    }\n    names = name.split(' ');\n    return names[0];\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('meters', function() {\n  return function(meters) {\n    if ((meters == null) || meters === '') {\n      meters = '0';\n    }\n    return meters + ' m²';\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('orderByString', function() {\n  return function(array, property, reverse) {\n    var result;\n    result = array.sort(function(object1, object2) {\n      if (angular.isUndefined(property)) {\n        object1.localeCompare(object2);\n      }\n      return object1[property].localeCompare(object2[property]);\n    });\n    if (reverse) {\n      return result.reverse();\n    } else {\n      return result;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('phoneBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    input = input.replace(/[^0-9]/g, \"\");\n    if (input.length < 11) {\n      return input.replace(/(\\d{2})(\\d{4})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    } else {\n      return input.replace(/(\\d{2})(\\d{5})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('propertyType', [\n  'PropertyTypeService', function(PropertyTypeService) {\n    return function(propertyType) {\n      var items, title;\n      if ((propertyType == null) || propertyType === '') {\n        return '';\n      }\n      items = PropertyTypeService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === propertyType) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('range', function() {\n  return function(n) {\n    var i, j, ref, res;\n    res = [];\n    for (i = j = 1, ref = n + 1; j < ref; i = j += 1) {\n      res.push(i);\n    }\n    return res;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('typesToText', function() {\n  return function(types) {\n    var i, items, len, type;\n    if (!((types != null) && types.length > 0)) {\n      return 'Indefinido';\n    }\n    items = {\n      apart: 'Apartamento',\n      land: 'Tereno',\n      car: 'Carro',\n      house: 'Case'\n    };\n    for (i = 0, len = types.length; i < len; i++) {\n      type = types[i];\n      console.log(type);\n    }\n    return types;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('groupName', [\n  'UserGroupService', function(UserGroupService) {\n    return function(group) {\n      var items, title;\n      if ((group == null) || group === '') {\n        return '';\n      }\n      items = UserGroupService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === group) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('yesOrNo', function() {\n  return function(type) {\n    if (type) {\n      return 'Sim';\n    } else {\n      return 'Não';\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('ngConfirmClick', function() {\n  return {\n    priority: -1,\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var message;\n      message = attrs.ngConfirmClick;\n      return element.bind('click', function(e) {\n        if ((message != null) && !confirm(message)) {\n          e.stopImmediatePropagation();\n          return e.preventDefault();\n        }\n      });\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('decimals', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        formatter = function(value) {\n          if (value == null) {\n            return '';\n          }\n          return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n        };\n        ngModel.$formatters.push(function(value) {\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return formatter(value);\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').directive('file', [\n  '$parse', '$timeout', function($parse, $timeout) {\n    return {\n      require: \"ngModel\",\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, fn;\n        fn = $parse(attrs['ngFileSelected']);\n        changeHandler = function(event) {\n          var file, files;\n          files = event.target.files;\n          file = files[0];\n          return $timeout(function() {\n            return fn($scope, {\n              $file: file,\n              $event: event\n            });\n          });\n        };\n        return elem.bind('change', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').directive('meters', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        console.log(ngModel.$modelValue);\n        formatter = function(value) {\n          if (value == null) {\n            value = 0;\n          }\n          value = value.toString().replace('m²', '');\n          value = value.toString().replace(/\\D/g, '');\n          return value + 'm²';\n        };\n        ngModel.$formatters.push(function(value) {\n          console.log(value);\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return value.toString().replace('m²', '');\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          console.log(newValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('AccountCtrl', [\n  '$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', function($scope, $rootScope, $loading, $logger, storage, UserService) {\n    $scope.user = {};\n    $scope.edit = false;\n    $loading.show();\n    UserService.getMyAccount().then(function(response) {\n      $scope.user = response.data;\n      return $loading.hide();\n    })[\"catch\"](function(response) {\n      $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.');\n      return $loading.hide();\n    });\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    return $scope.doUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.update($scope.user).then(function(response) {\n        $logger.success('Sua conta foi atualizada com sucesso!');\n        storage.updateToken(response.data.token);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao editar sua conta. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('ClientsCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) {\n    $scope.client = {};\n    $scope.clients = [];\n    $scope.search = {};\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      ClientService.get($stateParams.id).then(function(response) {\n        $scope.client = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      ClientService.getAll().then(function(response) {\n        $scope.clients = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.client.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return ClientService.saveOrUpdate($scope.client).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.clients');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var client;\n      client = $scope.clients[index];\n      if (client._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return ClientService[\"delete\"](client._id).then(function(response) {\n        $logger.success('Cliente excluído com sucesso!');\n        $scope.clients.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('LoginCtrl', [\n  '$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', function($scope, $rootScope, $state, $logger, storage, UserService) {\n    $scope.user = {};\n    return $scope.doLogin = function() {\n      if (!$rootScope.forms.login.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $scope.user.origin = 'admin';\n      return UserService.doLogin($scope.user).then(function(response) {\n        storage.setCodes(response.data);\n        return $state.go('dashboard.home');\n      })[\"catch\"](function(response) {\n        return $logger.error('Usuário e/ou senha inválido(s).');\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('PropertiesCtrl', [\n  '$scope', '$rootScope', '$q', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', function($scope, $rootScope, $q, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) {\n    var cities, convertData, revertData, saveOrUpdate;\n    $scope.properties = [];\n    $scope.cities = [];\n    $scope.states = [];\n    $scope.clients = [];\n    $scope.search = {};\n    cities = [];\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      PropertyService.get($stateParams.id).then(function(response) {\n        $scope.property = response.data;\n        convertData();\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return LocationService.getCitiesByState($scope.property.address.state);\n      }).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[$scope.property.address.state] = currentCities;\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      PropertyService.getAll().then(function(response) {\n        $scope.properties = $filter('orderBy')(response.data, '-created');\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.showCities = function(state) {\n      if (cities[state] != null) {\n        $scope.cities = cities[state];\n        return false;\n      }\n      $loading.show();\n      return LocationService.getCitiesByState(state).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[state] = currentCities;\n        return $loading.hide();\n      })[\"catch\"](function() {\n        return $loading.hide();\n      });\n    };\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.doTryAgain = function(index) {\n      var item, property;\n      item = $scope.newProperties.errors[index];\n      property = item.property;\n      property.client = item.client._id;\n      delete property._id;\n      $scope.property = property;\n      return saveOrUpdate(false).then(function() {\n        return $scope.newProperties.errors.splice(index, 1);\n      });\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.property.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      return saveOrUpdate(true);\n    };\n    $scope.doRemoveCsv = function(index) {\n      return $scope.newProperties.errors.splice(index, 1);\n    };\n    $scope.doDelete = function(index) {\n      var property;\n      property = $scope.properties[index];\n      if (property._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return PropertyService[\"delete\"](property._id).then(function(response) {\n        $logger.success('Imóvel excluído com sucesso!');\n        $scope.properties.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    $scope.doUploadCSV = function(file) {\n      if ((file == null) || file.type !== 'text/csv') {\n        $logger.error('Por favor, selecione um arquivo válido do tipo .csv');\n        return false;\n      }\n      $rootScope.newProperties = {};\n      $loading.show();\n      return PropertyService.importCsv(file).then(function(response) {\n        $scope.file = null;\n        $rootScope.newProperties = response.data.content;\n        $state.go('dashboard.properties.confirm');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $scope.file = {};\n        $logger.error('Erro ao importar dados. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    saveOrUpdate = function(redirect) {\n      var promise;\n      if ($scope.property == null) {\n        return false;\n      }\n      promise = $q.defer();\n      $loading.show();\n      revertData();\n      return PropertyService.saveOrUpdate($scope.property).then(function(response) {\n        $loading.hide();\n        promise.resolve();\n        if (redirect) {\n          return $state.go('dashboard.properties');\n        }\n      })[\"catch\"](function(response) {\n        promise.reject();\n        if (response.data.code === 8) {\n          $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.');\n        } else {\n          $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.');\n        }\n        return $loading.hide();\n      });\n    };\n    convertData = function() {\n      var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7;\n      $scope.property.interest.allMeters = [10, 500];\n      $scope.property.interest.allVacancies = [0, 10];\n      $scope.property.interest.allFloors = [1, 30];\n      $scope.property.interest.allValues = [1000, 5000000];\n      $scope.property.interest.allIptus = [1000, 15000];\n      $scope.property.interest.allCondominiums = [1000, 500000];\n      $scope.property.interest.allLocations = [1000, 50000];\n      if (((ref = $scope.property.interest) != null ? ref.types : void 0) != null) {\n        $scope.property.interest.types = [];\n      }\n      if (((ref1 = $scope.property.interest) != null ? ref1.meters : void 0) != null) {\n        $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min;\n        $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max;\n      }\n      if (((ref2 = $scope.property.interest) != null ? ref2.condominium : void 0) != null) {\n        $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min;\n        $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max;\n      }\n      if (((ref3 = $scope.property.interest) != null ? ref3.vacancy : void 0) != null) {\n        $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min;\n        $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max;\n      }\n      if (((ref4 = $scope.property.interest) != null ? ref4.floor : void 0) != null) {\n        $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min;\n        $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max;\n      }\n      if (((ref5 = $scope.property.interest) != null ? ref5.value : void 0) != null) {\n        $scope.property.interest.allValues[0] = $scope.property.interest.value.min;\n        $scope.property.interest.allValues[1] = $scope.property.interest.value.max;\n      }\n      if (((ref6 = $scope.property.interest) != null ? ref6.iptu : void 0) != null) {\n        $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min;\n        $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max;\n      }\n      if (((ref7 = $scope.property.interest) != null ? ref7.location : void 0) != null) {\n        $scope.property.interest.allLocations[0] = $scope.property.interest.location.min;\n        return $scope.property.interest.allLocations[1] = $scope.property.interest.location.max;\n      }\n    };\n    return revertData = function() {\n      $scope.property.value = $scope.property.value.toFixed(2);\n      $scope.property.condominium = $scope.property.condominium.toFixed(2);\n      $scope.property.location = $scope.property.location.toFixed(2);\n      $scope.property.iptu = $scope.property.iptu.toFixed(2);\n      if ($scope.property.interest.allMeters != null) {\n        $scope.property.interest.meters = {\n          min: $scope.property.interest.allMeters[0],\n          max: $scope.property.interest.allMeters[1]\n        };\n        delete $scope.property.interest.allMeters;\n      }\n      if ($scope.property.interest.allCondominiums != null) {\n        $scope.property.interest.condominium = {\n          min: $scope.property.interest.allCondominiums[0],\n          max: $scope.property.interest.allCondominiums[1]\n        };\n        delete $scope.property.interest.allCondominiums;\n      }\n      if ($scope.property.interest.allVacancies != null) {\n        $scope.property.interest.vacancy = {\n          min: $scope.property.interest.allVacancies[0],\n          max: $scope.property.interest.allVacancies[1]\n        };\n        delete $scope.property.interest.allVacancies;\n      }\n      if ($scope.property.interest.allFloors != null) {\n        $scope.property.interest.floor = {\n          min: $scope.property.interest.allFloors[0],\n          max: $scope.property.interest.allFloors[1]\n        };\n        delete $scope.property.interest.allFloors;\n      }\n      if ($scope.property.interest.allValues != null) {\n        $scope.property.interest.value = {\n          min: $scope.property.interest.allValues[0],\n          max: $scope.property.interest.allValues[1]\n        };\n        delete $scope.property.interest.allValues;\n      }\n      if ($scope.property.interest.allIptus != null) {\n        $scope.property.interest.iptu = {\n          min: $scope.property.interest.allIptus[0],\n          max: $scope.property.interest.allIptus[1]\n        };\n        delete $scope.property.interest.allIptus;\n      }\n      if ($scope.property.interest.allLocations != null) {\n        $scope.property.interest.location = {\n          min: $scope.property.interest.allLocations[0],\n          max: $scope.property.interest.allLocations[1]\n        };\n        return delete $scope.property.interest.allLocations;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('SearchCtrl', [\n  '$scope', '$rootScope', '$loading', '$logger', 'storage', 'PropertyService', function($scope, $rootScope, $loading, $logger, storage, PropertyService) {\n    var convertData, resetValues, revertData;\n    $scope.properties = [];\n    $scope.showFilters = false;\n    $scope.query = {\n      interest: {},\n      property: {}\n    };\n    resetValues = function() {\n      $scope.query.interest.allMeters = [10, 500];\n      $scope.query.interest.allVacancies = [0, 10];\n      $scope.query.interest.allFloors = [1, 30];\n      $scope.query.interest.allValues = [1000, 5000000];\n      $scope.query.interest.allIptus = [1000, 15000];\n      $scope.query.interest.allCondominiums = [1000, 500000];\n      $scope.query.interest.allLocations = [1000, 50000];\n      $scope.query.property.allMeters = [10, 500];\n      $scope.query.property.allVacancies = [0, 10];\n      $scope.query.property.allFloors = [1, 30];\n      $scope.query.property.allValues = [1000, 5000000];\n      $scope.query.property.allIptus = [1000, 15000];\n      $scope.query.property.allCondominiums = [1000, 500000];\n      return $scope.query.property.allLocations = [1000, 50000];\n    };\n    revertData = function() {\n      resetValues();\n      if ($scope.property.interest.types != null) {\n        $scope.property.interest.types = [];\n      }\n      if ($scope.property.interest.meters != null) {\n        $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min;\n        $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max;\n      }\n      if ($scope.property.interest.condominium != null) {\n        $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min;\n        $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max;\n      }\n      if ($scope.property.interest.vacancy != null) {\n        $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min;\n        $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max;\n      }\n      if ($scope.property.interest.floor != null) {\n        $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min;\n        $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max;\n      }\n      if ($scope.property.interest.value != null) {\n        $scope.property.interest.allValues[0] = $scope.property.interest.value.min;\n        $scope.property.interest.allValues[1] = $scope.property.interest.value.max;\n      }\n      if ($scope.property.interest.iptu != null) {\n        $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min;\n        $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max;\n      }\n      if ($scope.property.interest.location != null) {\n        $scope.property.interest.allLocations[0] = $scope.property.interest.location.min;\n        return $scope.property.interest.allLocations[1] = $scope.property.interest.location.max;\n      }\n    };\n    convertData = function() {\n      $scope.query.property.meters = {\n        min: $scope.query.property.allMeters[0],\n        max: $scope.query.property.allMeters[1]\n      };\n      delete $scope.query.property.allMeters;\n      $scope.query.property.condominium = {\n        min: $scope.query.property.allCondominiums[0],\n        max: $scope.query.property.allCondominiums[1]\n      };\n      delete $scope.query.property.allCondominiums;\n      $scope.query.property.vacancy = {\n        min: $scope.query.property.allVacancies[0],\n        max: $scope.query.property.allVacancies[1]\n      };\n      delete $scope.query.property.allVacancies;\n      $scope.query.property.floor = {\n        min: $scope.query.property.allFloors[0],\n        max: $scope.query.property.allFloors[1]\n      };\n      delete $scope.query.property.allFloors;\n      $scope.query.property.value = {\n        min: $scope.query.property.allValues[0],\n        max: $scope.query.property.allValues[1]\n      };\n      delete $scope.query.property.allValues;\n      $scope.query.property.iptu = {\n        min: $scope.query.property.allIptus[0],\n        max: $scope.query.property.allIptus[1]\n      };\n      delete $scope.query.property.allIptus;\n      $scope.query.property.location = {\n        min: $scope.query.property.allLocations[0],\n        max: $scope.query.property.allLocations[1]\n      };\n      delete $scope.query.property.allLocations;\n      $scope.query.interest.meters = {\n        min: $scope.query.interest.allMeters[0],\n        max: $scope.query.interest.allMeters[1]\n      };\n      delete $scope.query.interest.allMeters;\n      $scope.query.interest.condominium = {\n        min: $scope.query.interest.allCondominiums[0],\n        max: $scope.query.interest.allCondominiums[1]\n      };\n      delete $scope.query.interest.allCondominiums;\n      $scope.query.interest.vacancy = {\n        min: $scope.query.interest.allVacancies[0],\n        max: $scope.query.interest.allVacancies[1]\n      };\n      delete $scope.query.interest.allVacancies;\n      $scope.query.interest.floor = {\n        min: $scope.query.interest.allFloors[0],\n        max: $scope.query.interest.allFloors[1]\n      };\n      delete $scope.query.interest.allFloors;\n      $scope.query.interest.value = {\n        min: $scope.query.interest.allValues[0],\n        max: $scope.query.interest.allValues[1]\n      };\n      delete $scope.query.interest.allValues;\n      $scope.query.interest.iptu = {\n        min: $scope.query.interest.allIptus[0],\n        max: $scope.query.interest.allIptus[1]\n      };\n      delete $scope.query.interest.allIptus;\n      $scope.query.interest.location = {\n        min: $scope.query.interest.allLocations[0],\n        max: $scope.query.interest.allLocations[1]\n      };\n      return delete $scope.query.interest.allLocations;\n    };\n    resetValues();\n    $scope.toggleFilters = function() {\n      $scope.showFilters = !$scope.showFilters;\n      if (!$scope.showFilters) {\n        return resetValues();\n      }\n    };\n    return $scope.doFilter = function() {\n      $loading.show();\n      convertData();\n      return PropertyService.search($scope.query).then(function(response) {\n        console.log(response);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao efetuar busca. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('UsersCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'UserGroupService', 'UserService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) {\n    $scope.user = {};\n    $scope.users = [];\n    $scope.groups = UserGroupService.getAll();\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      UserService.get($stateParams.id).then(function(response) {\n        $scope.user = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      UserService.getAll().then(function(response) {\n        $scope.users = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.saveOrUpdate($scope.user).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.users');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var user;\n      user = $scope.users[index];\n      if (user._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return UserService[\"delete\"](user._id).then(function(response) {\n        $logger.success('Usuário excluído com sucesso!');\n        $scope.users.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n",null,"'use strict'\n\nangular.module('oneImobiliaria')\n.service 'ClientService', ['$http', '$state', 'RESOURCES', ($http, $state, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/clients'\n\n  create: (client) ->\n    return $http.post apiUrl, client\n  update: (client) ->\n    return $http.put apiUrl + '/' + client._id, client\n  saveOrUpdate: (client) ->\n    if client._id then this.update(client)\n    else this.create(client)\n  getAll: () ->\n    return $http.get apiUrl\n  get: (id) ->\n    return $http.get apiUrl + '/' + id\n  delete: (id) ->\n    return $http.delete apiUrl+ '/' + id\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service '$loading', ['$rootScope', ($rootScope) ->\n\n  show: () ->\n    $rootScope.loading = true\n  hide: () ->\n    $rootScope.loading = false\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'LocationService', ['$http', '$state', 'RESOURCES', ($http, $state, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/cities'\n\n  getAll: () ->\n    return $http.get apiUrl\n  getAllStates: () ->\n    return $http.get apiUrl + '/states'\n  getCitiesByState: (state) ->\n    return $http.get apiUrl + '/states/' + state\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service '$logger', ['$rootScope', ($rootScope) ->\n\n  clean: () ->\n    $rootScope.success = false\n    $rootScope.error = false\n    $rootScope.modalError = false\n  error: (errorString) ->\n    this.clean()\n    $rootScope.error = errorString\n  modalError: (errorString) ->\n    this.clean()\n    $rootScope.modalError = errorString\n  success: (successString) ->\n    this.clean()\n    $rootScope.success = successString\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'PropertyTypeService', () ->\n\n  items = [\n    {title: 'Apartamento', code: 'apartament'},\n    {title: 'Casa', code: 'house'},\n    {title: 'Terreno', code: 'land'},\n    {title: 'Casa', code: 'house'},\n    {title: 'Carro', code: 'car'}\n  ]\n\n  getAll: () ->\n    return items","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'PropertyService', ['$http', '$state', 'RESOURCES', '$httpParamSerializer', ($http, $state, RESOURCES, $httpParamSerializer) ->\n\n  apiUrl = RESOURCES.API_URL + '/properties'\n\n  create: (property) ->\n    return $http.post apiUrl, property\n  update: (property) ->\n    return $http.put apiUrl + '/' + property._id, property\n  saveOrUpdate: (property) ->\n    if property._id then this.update(property)\n    else this.create(property)\n  getAll: () ->\n    return $http.get apiUrl\n  get: (id) ->\n    return $http.get apiUrl + '/' + id\n  delete: (id) ->\n    return $http.delete apiUrl + '/' + id\n  search: (query) ->\n    console.log($httpParamSerializer(query));\n    return $http.get apiUrl + '/search?' + $httpParamSerializer(query)\n  importCsv: (file) ->\n\n    form = new FormData()\n    form.append 'csv', file\n\n    return $http.post apiUrl + '/import/csv', form,\n      withCredentials: false\n      headers:\n        'Content-Type': undefined\n      transformRequest: angular.identity\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'sessionInjector', ['storage', '$injector', (storage, $injector) ->\n\n  isUnloggedPage = (config) ->\n    return (config.url.indexOf('auth') > -1 or config.url.indexOf('remember') > -1)\n\n  request: (config)->\n    if !isUnloggedPage(config)\n      config.headers['x-access-token'] = storage.getSessionToken()\n    return config\n\n  responseError: (rejection) ->\n    if rejection.data.error.name == 'TokenExpiredError'\n      storage.clean()\n      $injector.get('$state').go('login')\n      console.log('Entrou')\n    return rejection;\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'storage', () ->\n  isLogged: () ->\n    return (localStorage.getItem('x-code-one') != null) && (localStorage.getItem('code-one') != null)\n  setCodes: (codes) ->\n    localStorage.setItem('x-code-one', codes.token)\n    localStorage.setItem('code-one', codes.code)\n    localStorage.setItem('group-one', codes.type)\n    localStorage.setItem('name-one', codes.name)\n  updateToken: (token) ->\n    localStorage.setItem('x-code-one', token)\n  getSessionToken: () ->\n    localStorage.getItem('x-code-one')\n  getCode: () ->\n    localStorage.getItem('code-one')\n  getName: () ->\n    localStorage.getItem('name-one') || ''\n  getGroup: () ->\n    localStorage.getItem('group-one') || ''\n  clean: () ->\n    localStorage.removeItem('x-code-one')\n    localStorage.removeItem('code-one')\n    localStorage.removeItem('group-one')\n    localStorage.removeItem('name-one')","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'UserGroupService', () ->\n\n  items = [\n    {title: 'Administrador(a)', code: 'admin'},\n    {title: 'Corretor(a)', code: 'broker'}\n  ]\n\n  getAll: () ->\n    return items","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'UserService', ['$http', '$state', 'storage', 'RESOURCES', ($http, $state, storage, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/accounts'\n\n  isLogged: () ->\n    return storage.isLogged()\n  doLogin: (user) ->\n    return $http.post apiUrl + '/auth', user\n  doLogout: () ->\n      storage.clean()\n      $state.go('login')\n      return\n  create: (user) ->\n    return $http.post apiUrl, user\n  update: (user) ->\n    return $http.put apiUrl + '/' + user._id, user\n  saveOrUpdate: (user) ->\n    if user._id then this.update(user)\n    else this.create(user)\n  getAll: () ->\n    return $http.get apiUrl\n  get: (id) ->\n    return $http.get apiUrl + '/' + id\n  getMyAccount: () ->\n    return $http.get apiUrl + '/' + storage.getCode()\n  delete: (id) ->\n    return $http.delete apiUrl+ '/' + id\n]",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}