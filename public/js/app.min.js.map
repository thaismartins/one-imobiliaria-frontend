{"version":3,"sources":["app.coffee","app.js","routes.coffee","loading.coffee","logger.coffee","session.coffee","storage.coffee","user-group.coffee","user.coffee","login.coffee","users.coffee"],"names":["angular","module","run","$rootScope","$state","RESOURCES","UserService","error","success","loading","fileUrl","API_URL","page","showMenu","showSubmenu","appTitle","forms","toggleMenu","toggleSubmenu","$on","current","name","split","requiredLogin","isLogged","doLogout","go","constant","config","$stateProvider","$httpProvider","$urlRouterProvider","state","url","views","main","templateUrl","controller","error@login","abstract","header","footer","main@","submenu@dashboard.users","submenu@dashboard.properties","otherwise","interceptors","push","defaults","useXDomain","headers","common","service","show","hide","clean","modalError","errorString","this","successString","storage","isUnloggedPage","indexOf","request","session_key","getSessionToken","localStorage","getItem","setCodes","codes","setItem","id","removeItem","items","title","code","getAll","$http","apiUrl","doLogin","user","post","get","delete","$scope","logger","login","$valid","origin","then","response","data","console","log","UserGroupService","email","group","groups","edit","canEdit","saveOrUpdate"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict'\n\nangular.module 'oneImobiliaria', [\n  'ui.router',\n  'ui.utils.masks'\n]\n.run ['$rootScope', '$state', 'RESOURCES', 'UserService', ($rootScope, $state, RESOURCES, UserService) ->\n\n  $rootScope.error = false\n  $rootScope.success = false\n  $rootScope.loading = false\n\n  $rootScope.fileUrl = RESOURCES.API_URL + '/'\n\n  $rootScope.page = ''\n  $rootScope.showMenu = false\n  $rootScope.showSubmenu = false\n\n  $rootScope.appTitle = 'One Consultoria Imobiliária'\n\n  $rootScope.forms = {}\n\n  $rootScope.toggleMenu = () ->\n    $rootScope.showMenu = !$rootScope.showMenu\n\n\n  $rootScope.toggleSubmenu = () ->\n    $rootScope.showSubmenu = !$rootScope.showSubmenu\n\n  $rootScope.$on '$stateChangeSuccess', () ->\n\n    page = $state.current.name.split('.')\n    $rootScope.page = page[1] || ''\n\n    $rootScope.error = false\n    $rootScope.success = false\n    $rootScope.loading = false\n    $rootScope.showMenu = false\n    $rootScope.showSubmenu = false\n\n    UserService.doLogout() if $state.current.requiredLogin && !UserService.isLogged()\n    $state.go('dashboard.home') if !$state.current.requiredLogin && UserService.isLogged()\n]\n.constant 'RESOURCES', {\n  'API_URL': 'http://desenv.doisoitosete.com:3000/api'\n}","'use strict';\nangular.module('oneImobiliaria', ['ui.router', 'ui.utils.masks']).run([\n  '$rootScope', '$state', 'RESOURCES', 'UserService', function($rootScope, $state, RESOURCES, UserService) {\n    $rootScope.error = false;\n    $rootScope.success = false;\n    $rootScope.loading = false;\n    $rootScope.fileUrl = RESOURCES.API_URL + '/';\n    $rootScope.page = '';\n    $rootScope.showMenu = false;\n    $rootScope.showSubmenu = false;\n    $rootScope.appTitle = 'One Consultoria Imobiliária';\n    $rootScope.forms = {};\n    $rootScope.toggleMenu = function() {\n      return $rootScope.showMenu = !$rootScope.showMenu;\n    };\n    $rootScope.toggleSubmenu = function() {\n      return $rootScope.showSubmenu = !$rootScope.showSubmenu;\n    };\n    return $rootScope.$on('$stateChangeSuccess', function() {\n      var page;\n      page = $state.current.name.split('.');\n      $rootScope.page = page[1] || '';\n      $rootScope.error = false;\n      $rootScope.success = false;\n      $rootScope.loading = false;\n      $rootScope.showMenu = false;\n      $rootScope.showSubmenu = false;\n      if ($state.current.requiredLogin && !UserService.isLogged()) {\n        UserService.doLogout();\n      }\n      if (!$state.current.requiredLogin && UserService.isLogged()) {\n        return $state.go('dashboard.home');\n      }\n    });\n  }\n]).constant('RESOURCES', {\n  'API_URL': 'http://desenv.doisoitosete.com:3000/api'\n});\n\n'use strict';\nangular.module('oneImobiliaria').config([\n  '$stateProvider', '$httpProvider', '$urlRouterProvider', function($stateProvider, $httpProvider, $urlRouterProvider) {\n    $stateProvider.state('login', {\n      url: '/login',\n      views: {\n        main: {\n          templateUrl: 'app/views/login/index.html',\n          controller: 'LoginCtrl'\n        },\n        'error@login': {\n          templateUrl: 'app/views/error.html'\n        }\n      },\n      requiredLogin: false\n    }).state('dashboard', {\n      url: '/dashboard',\n      abstract: true,\n      views: {\n        main: {},\n        header: {\n          templateUrl: 'app/views/header.html'\n        },\n        footer: {\n          templateUrl: 'app/views/footer.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.home', {\n      url: '/home',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/home/index.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users', {\n      url: '/users',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/index.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users': {\n          templateUrl: 'app/views/users/submenu.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties', {\n      url: '/properties',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/index.html'\n        },\n        'submenu@dashboard.properties': {\n          templateUrl: 'app/views/properties/submenu.html'\n        }\n      },\n      requiredLogin: true\n    });\n    $urlRouterProvider.otherwise('/login');\n    $httpProvider.interceptors.push('sessionInjector');\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json';\n    return delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('loading', [\n  '$rootScope', function($rootScope) {\n    return {\n      show: function() {\n        return $rootScope.loading = true;\n      },\n      hide: function() {\n        return $rootScope.loading = false;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('logger', [\n  '$rootScope', function($rootScope) {\n    return {\n      clean: function() {\n        $rootScope.success = false;\n        $rootScope.error = false;\n        return $rootScope.modalError = false;\n      },\n      error: function(errorString) {\n        this.clean();\n        return $rootScope.error = errorString;\n      },\n      modalError: function(errorString) {\n        this.clean();\n        return $rootScope.modalError = errorString;\n      },\n      success: function(successString) {\n        this.clean();\n        return $rootScope.success = successString;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('sessionInjector', [\n  'storage', function(storage) {\n    var isUnloggedPage;\n    isUnloggedPage = function(config) {\n      return config.url.indexOf('auth') > -1 || config.url.indexOf('remember') > -1;\n    };\n    return {\n      request: function(config) {\n        if (!isUnloggedPage(config)) {\n          config.headers.session_key = storage.getSessionToken();\n        }\n        return config;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('storage', function() {\n  return {\n    isLogged: function() {\n      return (localStorage.getItem('x-code-one') !== null) && (localStorage.getItem('code-one') !== null);\n    },\n    setCodes: function(codes) {\n      localStorage.setItem('x-code-one', codes.session_key);\n      return localStorage.setItem('code-one', codes.id);\n    },\n    getSessionToken: function() {\n      return localStorage.getItem('x-code-one');\n    },\n    clean: function() {\n      localStorage.removeItem('x-code-one');\n      return localStorage.removeItem('code-one');\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserGroupService', function() {\n  var items;\n  items = [\n    {\n      title: 'Administrador',\n      code: 'admin'\n    }, {\n      title: 'Corretor(a)',\n      code: 'broker'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserService', [\n  '$http', '$state', 'storage', 'RESOURCES', function($http, $state, storage, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/accounts';\n    return {\n      isLogged: function() {\n        return storage.isLogged();\n      },\n      doLogin: function(user) {\n        return $http.post(apiUrl + '/auth', user);\n      },\n      doLogout: function() {\n        storage.clean();\n        $state.go('login');\n      },\n      getAll: function() {\n        return $http.get(apiUrl + '/');\n      },\n      \"delete\": function(user) {\n        return $http[\"delete\"](apiUrl + '/', {\n          id: user.id\n        });\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('LoginCtrl', [\n  '$scope', '$rootScope', '$state', 'logger', 'storage', 'UserService', function($scope, $rootScope, $state, logger, storage, UserService) {\n    $scope.user = {};\n    return $scope.doLogin = function() {\n      if (!$rootScope.forms.login.$valid) {\n        logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $scope.user.origin = 'admin';\n      return UserService.doLogin($scope.user).then(function(response) {\n        storage.setCodes(response.data);\n        return $state.go('dashboard.home');\n      })[\"catch\"](function(response) {\n        console.log(response);\n        return logger.error('Usuário e/ou senha inválido(s).');\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('UsersCtrl', [\n  '$scope', '$state', 'UserGroupService', function($scope, $state, UserGroupService) {\n    $scope.user = {\n      name: 'Thais Martins',\n      email: 'contato@thaismartins.co',\n      group: 'broker'\n    };\n    $scope.groups = UserGroupService.getAll();\n    $scope.edit = false;\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    return $scope.saveOrUpdate = function() {\n      return $state.go('dashboard.users');\n    };\n  }\n]);\n","'use strict'\n\nangular.module('oneImobiliaria')\n.config ['$stateProvider', '$httpProvider', '$urlRouterProvider', ($stateProvider, $httpProvider, $urlRouterProvider) ->\n\n  $stateProvider\n\n  .state 'login',\n    url: '/login'\n    views:\n      main:\n        templateUrl: 'app/views/login/index.html'\n        controller: 'LoginCtrl'\n      'error@login':\n        templateUrl: 'app/views/error.html'\n    requiredLogin: false\n\n  .state 'dashboard',\n    url: '/dashboard'\n    abstract: true\n    views:\n      main: {}\n      header:\n        templateUrl: 'app/views/header.html'\n      footer:\n        templateUrl: 'app/views/footer.html'\n    requiredLogin: true\n\n  .state 'dashboard.home',\n    url: '/home'\n    views:\n      'main@':\n        templateUrl: 'app/views/home/index.html'\n    requiredLogin: true\n\n  .state 'dashboard.users',\n    url: '/users'\n    views:\n      'main@':\n        templateUrl: 'app/views/users/index.html'\n        controller: 'UsersCtrl'\n      'submenu@dashboard.users':\n        templateUrl: 'app/views/users/submenu.html'\n    requiredLogin: true\n\n  .state 'dashboard.users.new',\n    url: '/new'\n    views:\n      'main@':\n        templateUrl: 'app/views/users/form.html'\n        controller: 'UsersCtrl'\n    requiredLogin: true\n\n  .state 'dashboard.properties',\n    url: '/properties'\n    views:\n      'main@':\n        templateUrl: 'app/views/properties/index.html'\n      'submenu@dashboard.properties':\n        templateUrl: 'app/views/properties/submenu.html'\n    requiredLogin: true\n\n  $urlRouterProvider.otherwise('/login')\n\n  # Access token injector\n  $httpProvider.interceptors.push('sessionInjector')\n\n  $httpProvider.defaults.useXDomain = true\n  $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json'\n  delete $httpProvider.defaults.headers.common['X-Requested-With']\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'loading', ['$rootScope', ($rootScope) ->\n\n  show: () ->\n    $rootScope.loading = true\n  hide: () ->\n    $rootScope.loading = false\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'logger', ['$rootScope', ($rootScope) ->\n\n  clean: () ->\n    $rootScope.success = false\n    $rootScope.error = false\n    $rootScope.modalError = false\n  error: (errorString) ->\n    this.clean()\n    $rootScope.error = errorString\n  modalError: (errorString) ->\n    this.clean()\n    $rootScope.modalError = errorString\n  success: (successString) ->\n    this.clean()\n    $rootScope.success = successString\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'sessionInjector', ['storage', (storage) ->\n\n  isUnloggedPage = (config) ->\n    return (config.url.indexOf('auth') > -1 or config.url.indexOf('remember') > -1)\n\n  request: (config)->\n    if !isUnloggedPage(config)\n      config.headers.session_key = storage.getSessionToken()\n    return config\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'storage', () ->\n  isLogged: () ->\n    return (localStorage.getItem('x-code-one') != null) && (localStorage.getItem('code-one') != null)\n  setCodes: (codes) ->\n    localStorage.setItem('x-code-one', codes.session_key)\n    localStorage.setItem('code-one', codes.id)\n  getSessionToken: () ->\n    localStorage.getItem('x-code-one')\n  clean: () ->\n    localStorage.removeItem('x-code-one')\n    localStorage.removeItem('code-one')","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'UserGroupService', () ->\n\n  items = [\n    {title: 'Administrador', code: 'admin'},\n    {title: 'Corretor(a)', code: 'broker'}\n  ]\n\n  getAll: () ->\n    return items","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'UserService', ['$http', '$state', 'storage', 'RESOURCES', ($http, $state, storage, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/accounts'\n\n  isLogged: () ->\n    return storage.isLogged()\n  doLogin: (user) ->\n    return $http.post apiUrl + '/auth', user\n  doLogout: () ->\n      storage.clean()\n      $state.go('login')\n      return\n  getAll: () ->\n    return $http.get apiUrl + '/'\n  delete: (user) ->\n    return $http.delete apiUrl + '/', {id: user.id}\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'LoginCtrl', ['$scope', '$rootScope', '$state', 'logger', 'storage', 'UserService', ($scope, $rootScope, $state, logger, storage, UserService) ->\n\n  $scope.user = {}\n\n  $scope.doLogin = () ->\n    if !$rootScope.forms.login.$valid\n      logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $scope.user.origin = 'admin'\n    UserService.doLogin($scope.user)\n    .then (response) ->\n      storage.setCodes(response.data)\n      $state.go('dashboard.home')\n    .catch (response) ->\n      console.log(response)\n      logger.error('Usuário e/ou senha inválido(s).')\n\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'UsersCtrl', ['$scope', '$state', 'UserGroupService', ($scope, $state, UserGroupService) ->\n\n  $scope.user =\n    name: 'Thais Martins'\n    email: 'contato@thaismartins.co'\n    group: 'broker'\n\n  $scope.groups = UserGroupService.getAll()\n  $scope.edit = false\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    $state.go('dashboard.users')\n\n]"]}