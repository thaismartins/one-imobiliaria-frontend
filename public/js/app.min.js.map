{"version":3,"sources":["app.coffee","app.js","routes.coffee","loading.coffee","logger.coffee","session.coffee","storage.coffee","user-group.coffee","user.coffee","first-name.coffee","file.coffee","login.coffee","users.coffee"],"names":["angular","module","run","$rootScope","$state","RESOURCES","UserService","error","success","loading","fileUrl","API_URL","page","name","showMenu","showSubmenu","appTitle","forms","doLogout","toggleMenu","toggleSubmenu","$on","current","split","localStorage","getItem","requiredLogin","isLogged","go","constant","config","$stateProvider","$httpProvider","$urlRouterProvider","state","url","views","main","templateUrl","controller","error@login","abstract","header","footer","main@","submenu@dashboard.users","error@dashboard.users","success@dashboard.users","loading@dashboard.users","error@dashboard.users.new","loading@dashboard.users.new","error@dashboard.users.edit","loading@dashboard.users.edit","submenu@dashboard.properties","otherwise","interceptors","push","defaults","useXDomain","headers","common","service","show","hide","clean","modalError","errorString","this","successString","storage","isUnloggedPage","indexOf","request","getSessionToken","setCodes","codes","setItem","token","code","type","getCode","removeItem","items","title","getAll","$http","apiUrl","doLogin","user","post","create","update","put","_id","saveOrUpdate","get","id","delete","filter","names","group","map","item","directive","require","restrict","link","$scope","elem","attrs","ngModel","changeHandler","event","file","files","target","$setViewValue","$apply","bind","$logger","login","$valid","origin","then","response","data","$stateParams","$filter","$loading","UserGroupService","users","groups","edit","canEdit","doDelete","index","splice"],"mappings":"AAAA,YAEAA,SAAQC,OAAO,kBACb,YACA,mBAEDC,KAAK,aAAc,SAAU,YAAa,cAAe,SAACC,EAAYC,EAAQC,EAAWC,GCgBtF,MDdFH,GAAWI,OAAQ,EACnBJ,EAAWK,SAAU,EACrBL,EAAWM,SAAU,EAErBN,EAAWO,QAAUL,EAAUM,QAAU,IAEzCR,EAAWS,KAAO,GAClBT,EAAWU,KAAO,GAElBV,EAAWW,UAAW,EACtBX,EAAWY,aAAc,EAEzBZ,EAAWa,SAAW,8BAEtBb,EAAWc,SAEXd,EAAWe,SAAW,WCVlB,MDWFZ,GAAYY,YAEdf,EAAWgB,WAAa,WCVpB,MDWFhB,GAAWW,UAAYX,EAAWW,UAEpCX,EAAWiB,cAAgB,WCVvB,MDWFjB,GAAWY,aAAeZ,EAAWY,aAEvCZ,EAAWkB,IAAI,sBAAuB,WAEpC,GAAAT,EAYA,IAZAA,EAAOR,EAAOkB,QAAQT,KAAKU,MAAM,KACjCpB,EAAWS,KAAOA,EAAK,IAAM,GAE7BT,EAAWU,KAAOW,aAAaC,QAAQ,aAAe,GAEtDtB,EAAWI,OAAQ,EACnBJ,EAAWK,SAAU,EACrBL,EAAWM,SAAU,EACrBN,EAAWW,UAAW,EACtBX,EAAWY,aAAc,EAECX,EAAOkB,QAAQI,gBAAkBpB,EAAYqB,YAAvErB,EAAYY,YACoBd,EAAOkB,QAAQI,eAAiBpB,EAAYqB,WCXxE,MDWJvB,GAAOwB,GAAG,uBAEbC,SAAS,aAERlB,QAAW,8BEjDbX,QAAQC,OAAO,kBACd6B,QAAQ,iBAAkB,gBAAiB,qBAAsB,SAACC,EAAgBC,EAAeC,GDgJ9F,MC9IFF,GAECG,MAAM,SACLC,IAAK,SACLC,OACEC,MACEC,YAAa,6BACbC,WAAY,aACdC,eACEF,YAAa,yBACjBZ,eAAe,IAEhBQ,MAAM,aACLC,IAAK,aACLM,YAAU,EACVL,OACEC,QACAK,QACEJ,YAAa,yBACfK,QACEL,YAAa,0BACjBZ,eAAe,IAEhBQ,MAAM,kBACLC,IAAK,QACLC,OACEQ,SACEN,YAAa,8BACjBZ,eAAe,IAEhBQ,MAAM,mBACLC,IAAK,SACLC,OACEQ,SACEN,YAAa,6BACbC,WAAY,aACdM,2BACEP,YAAa,gCACfQ,yBACER,YAAa,wBACfS,2BACET,YAAa,0BACfU,2BACEV,YAAa,2BACjBZ,eAAe,IAEhBQ,MAAM,uBACLC,IAAK,OACLC,OACEQ,SACEN,YAAa,4BACbC,WAAY,aACdU,6BACEX,YAAa,wBACfY,+BACEZ,YAAa,2BACjBZ,eAAe,IAEhBQ,MAAM,wBACLC,IAAK,YACLC,OACEQ,SACEN,YAAa,4BACbC,WAAY,aACdY,8BACEb,YAAa,wBACfc,gCACEd,YAAa,2BACjBZ,eAAe,IAEhBQ,MAAM,wBACLC,IAAK,cACLC,OACEQ,SACEN,YAAa,mCACfe,gCACEf,YAAa,sCACjBZ,eAAe,IAEjBO,EAAmBqB,UAAU,UAG7BtB,EAAcuB,aAAaC,KAAK,mBAEhCxB,EAAcyB,SAASC,YAAa,EACpC1B,EAAcyB,SAASE,QAAQC,OAAO,gBAAkB,yBACjD5B,GAAcyB,SAASE,QAAQC,OAAO,uBCzF/C5D,QAAQC,OAAO,kBACd4D,QAAQ,YAAa,aAAc,SAAC1D,GFuJjC,OErJF2D,KAAM,WFuJA,MEtJJ3D,GAAWM,SAAU,GACvBsD,KAAM,WFwJA,MEvJJ5D,GAAWM,SAAU,OCNzBT,QAAQC,OAAO,kBACd4D,QAAQ,WAAY,aAAc,SAAC1D,GHqKhC,OGnKF6D,MAAO,WHuKD,MGtKJ7D,GAAWK,SAAU,EACrBL,EAAWI,OAAQ,EACnBJ,EAAW8D,YAAa,GAC1B1D,MAAO,SAAC2D,GHuKF,MGtKJC,MAAKH,QACL7D,EAAWI,MAAQ2D,GACrBD,WAAY,SAACC,GHwKP,MGvKJC,MAAKH,QACL7D,EAAW8D,WAAaC,GAC1B1D,QAAS,SAAC4D,GHyKJ,MGxKJD,MAAKH,QACL7D,EAAWK,QAAU4D,OCfzBpE,QAAQC,OAAO,kBACd4D,QAAQ,mBAAoB,UAAW,SAACQ,GAEvC,GAAAC,EJgME,OIhMFA,GAAiB,SAACxC,GAChB,MAAQA,GAAOK,IAAIoC,QAAQ,YAAgBzC,EAAOK,IAAIoC,QAAQ,iBAEhEC,QAAS,SAAC1C,GAGR,MAFIwC,GAAexC,KACjBA,EAAO6B,QAAQ,kBAAoBU,EAAQI,mBACtC3C,OCTX9B,QAAQC,OAAO,kBACd4D,QAAQ,UAAW,WL+MlB,OK9MAlC,SAAU,WACR,MAA8C,QAAtCH,aAAaC,QAAQ,eAA+D,OAApCD,aAAaC,QAAQ,aAC/EiD,SAAU,SAACC,GLoNP,MKnNFnD,cAAaoD,QAAQ,aAAcD,EAAME,OACzCrD,aAAaoD,QAAQ,WAAYD,EAAMG,MACvCtD,aAAaoD,QAAQ,YAAaD,EAAMI,MACxCvD,aAAaoD,QAAQ,WAAYD,EAAM9D,OACzC4D,gBAAiB,WLkNb,MKjNFjD,cAAaC,QAAQ,eACvBuD,QAAS,WLmNL,MKlNFxD,cAAaC,QAAQ,aACvBuC,MAAO,WLuNH,MKtNFxC,cAAayD,WAAW,cACxBzD,aAAayD,WAAW,YACxBzD,aAAayD,WAAW,aACxBzD,aAAayD,WAAW,gBCjB5BjF,QAAQC,OAAO,kBACd4D,QAAQ,mBAAoB,WAE3B,GAAAqB,ENkPA,OMlPAA,KACGC,MAAO,mBAAoBL,KAAM,UACjCK,MAAO,cAAeL,KAAM,YAG/BM,OAAQ,WACN,MAAOF,OCTXlF,QAAQC,OAAO,kBACd4D,QAAQ,eAAgB,QAAS,SAAU,UAAW,YAAa,SAACwB,EAAOjF,EAAQiE,EAAShE,GAE3F,GAAAiF,EP8PE,OO9PFA,GAASjF,EAAUM,QAAU,aAE7BgB,SAAU,WACR,MAAO0C,GAAQ1C,YACjB4D,QAAS,SAACC,GACR,MAAOH,GAAMI,KAAKH,EAAS,QAASE,IACtCtE,SAAU,WACNmD,EAAQL,QACR5D,EAAOwB,GAAG,UAEd8D,OAAQ,SAACF,GACP,MAAOH,GAAMI,KAAKH,EAAQE,IAC5BG,OAAQ,SAACH,GACP,MAAOH,GAAMO,IAAIN,EAAS,IAAME,EAAKK,IAAKL,IAC5CM,aAAc,SAACN,GACb,MAAGA,GAAKK,IAAS1B,KAAKwB,OAAOH,GACxBrB,KAAKuB,OAAOF,IACnBJ,OAAQ,WACN,MAAOC,GAAMU,IAAIT,IACnBS,IAAK,SAACC,GACJ,MAAOX,GAAMU,IAAIT,EAAS,IAAMU,IAClCC,SAAQ,SAACD,GACP,MAAOX,GAAM,UAAOC,EAAQ,IAAMU,QCzBtChG,QAAQC,OAAO,kBACdiG,OAAO,YAAa,WRuSnB,MQtSA,UAACrF,GAEC,GAAAsF,EAAA,OAAiB,OAAAtF,GAAiB,KAARA,EAAnB,IACPsF,EAAQtF,EAAKU,MAAM,KACZ4E,EAAM,OFNjBnG,QAAQC,OAAO,kBACdiG,OAAO,YAAa,WNmTnB,MMlTA,UAACE,GAEC,GAAAlB,GAAAC,CAAA,OAAiB,OAAAiB,GAAmB,KAATA,EAApB,IACPlB,IACGC,MAAO,mBAAoBL,KAAM,UACjCK,MAAO,cAAeL,KAAM,WAG/BK,EAAQ,GACRD,EAAMmB,IAAI,SAACC,GACT,GAAsBA,EAAKxB,OAAQsB,ENyTjC,MMzTFjB,GAAQmB,EAAKnB,QAERA,MGdXnF,QAAQC,OAAO,kBACdsG,UAAU,OAAQ,WT6UjB,OS5UAC,QAAS,UACTC,SAAU,IACVC,KAAM,SAACC,EAAQC,EAAMC,EAAOC,GAE1B,GAAAC,EToVE,OSpVFA,GAAgB,SAACC,GACf,GAAAC,GAAAC,CTiVE,OSjVFA,GAAQF,EAAMG,OAAOD,MACrBD,EAAOC,EAAM,GAEbJ,EAAQM,cAAcH,GACtBN,EAAOU,UAETT,EAAKU,KAAK,SAAUP,OCbxB/G,QAAQC,OAAO,kBACdsC,WAAW,aAAc,SAAU,aAAc,SAAU,UAAW,UAAW,cAAe,SAACoE,EAAQxG,EAAYC,EAAQmH,EAASlD,EAAS/D,GVkW5I,MUhWFqG,GAAOnB,QAEPmB,EAAOpB,QAAU,WACf,MAAIpF,GAAWc,MAAMuG,MAAMC,QAI3Bd,EAAOnB,KAAKkC,OAAS,QACrBpH,EAAYiF,QAAQoB,EAAOnB,MAC1BmC,KAAK,SAACC,GV+VH,MU9VFvD,GAAQK,SAASkD,EAASC,MAC1BzH,EAAOwB,GAAG,oBACX,SAAM,SAACgG,GV8VJ,MU7VFL,GAAQhH,MAAM,0CATdgH,GAAQhH,MAAM,6CCPpBP,QAAQC,OAAO,kBACdsC,WAAW,aAAc,SAAU,aAAc,SAAU,eAAgB,UAAW,WAAY,UAAW,UAAU,mBAAoB,cAAe,SAACoE,EAAQxG,EAAYC,EAAQ0H,EAAcC,EAASC,EAAUT,EAASlD,EAAS4D,EAAkB3H,GX6ZzP,MW3ZFqG,GAAOnB,QACPmB,EAAOuB,SAEPvB,EAAOwB,OAASF,EAAiB7C,SACjCuB,EAAOyB,MAAO,EAEdJ,EAASlE,OACNgE,EAAa9B,GACd1F,EAAYyF,IAAI+B,EAAa9B,IAC5B2B,KAAK,SAACC,GXmXH,MWlXFjB,GAAOnB,KAAOoC,EAASC,KACvBlB,EAAOyB,MAAO,EACdJ,EAASjE,SACV,SAAM,SAAC6D,GXkXJ,MWjXFL,GAAQhH,MAAM,0DACdyH,EAASjE,SAEXzD,EAAY8E,SACXuC,KAAK,SAACC,GXkXH,MWjXFjB,GAAOuB,MAAQH,EAAQ,WAAWH,EAASC,KAAM,YACjDG,EAASjE,SACV,SAAM,SAAC6D,GXkXJ,MWjXFL,GAAQhH,MAAM,0DACdyH,EAASjE,SAEb4C,EAAO0B,QAAU,WXkXb,MWjXF1B,GAAOyB,MAAO,GAEhBzB,EAAOb,aAAe,WACpB,MAAI3F,GAAWc,MAAMuE,KAAKiC,QAI1BO,EAASlE,OACTxD,EAAYwF,aAAaa,EAAOnB,MAC/BmC,KAAK,SAACC,GXkXH,MWjXFI,GAASjE,OACT3D,EAAOwB,GAAG,qBACX,SAAM,SAACgG,GXkXJ,MWjXFL,GAAQhH,MAAM,6DACdyH,EAASjE,cAVTwD,GAAQhH,MAAM,0CAYlBoG,EAAO2B,SAAW,SAACC,GAEjB,GAAA/C,EACA,OADAA,GAAOmB,EAAOuB,MAAMK,GACJ/C,EAAKK,MAAOxB,EAAQW,YAEpCgD,EAASlE,OACTxD,EAAY,UAAOkF,EAAKK,KACvB8B,KAAK,SAACC,GXoXH,MWnXFL,GAAQ/G,QAAQ,iCAChBmG,EAAOuB,MAAMM,OAAOD,EAAO,GAC3BP,EAASjE,SACV,SAAM,SAAC6D,GXmXJ,MWlXFL,GAAQhH,MAAM,wDACdyH,EAASjE","file":"app.min.js","sourcesContent":["'use strict'\n\nangular.module 'oneImobiliaria', [\n  'ui.router',\n  'ui.utils.masks'\n]\n.run ['$rootScope', '$state', 'RESOURCES', 'UserService', ($rootScope, $state, RESOURCES, UserService) ->\n\n  $rootScope.error = false\n  $rootScope.success = false\n  $rootScope.loading = false\n\n  $rootScope.fileUrl = RESOURCES.API_URL + '/'\n\n  $rootScope.page = ''\n  $rootScope.name = ''\n\n  $rootScope.showMenu = false\n  $rootScope.showSubmenu = false\n\n  $rootScope.appTitle = 'One Consultoria Imobiliária'\n\n  $rootScope.forms = {}\n\n  $rootScope.doLogout = () ->\n    UserService.doLogout()\n\n  $rootScope.toggleMenu = () ->\n    $rootScope.showMenu = !$rootScope.showMenu\n\n  $rootScope.toggleSubmenu = () ->\n    $rootScope.showSubmenu = !$rootScope.showSubmenu\n\n  $rootScope.$on '$stateChangeSuccess', () ->\n\n    page = $state.current.name.split('.')\n    $rootScope.page = page[1] || ''\n\n    $rootScope.name = localStorage.getItem('name-one') || ''\n\n    $rootScope.error = false\n    $rootScope.success = false\n    $rootScope.loading = false\n    $rootScope.showMenu = false\n    $rootScope.showSubmenu = false\n\n    UserService.doLogout() if $state.current.requiredLogin && !UserService.isLogged()\n    $state.go('dashboard.home') if !$state.current.requiredLogin && UserService.isLogged()\n]\n.constant 'RESOURCES',\n#  'API_URL': 'http://desenv.doisoitosete.com:3000/api'\n  'API_URL': 'http://localhost:3000/api'\n","'use strict';\nangular.module('oneImobiliaria', ['ui.router', 'ui.utils.masks']).run([\n  '$rootScope', '$state', 'RESOURCES', 'UserService', function($rootScope, $state, RESOURCES, UserService) {\n    $rootScope.error = false;\n    $rootScope.success = false;\n    $rootScope.loading = false;\n    $rootScope.fileUrl = RESOURCES.API_URL + '/';\n    $rootScope.page = '';\n    $rootScope.name = '';\n    $rootScope.showMenu = false;\n    $rootScope.showSubmenu = false;\n    $rootScope.appTitle = 'One Consultoria Imobiliária';\n    $rootScope.forms = {};\n    $rootScope.doLogout = function() {\n      return UserService.doLogout();\n    };\n    $rootScope.toggleMenu = function() {\n      return $rootScope.showMenu = !$rootScope.showMenu;\n    };\n    $rootScope.toggleSubmenu = function() {\n      return $rootScope.showSubmenu = !$rootScope.showSubmenu;\n    };\n    return $rootScope.$on('$stateChangeSuccess', function() {\n      var page;\n      page = $state.current.name.split('.');\n      $rootScope.page = page[1] || '';\n      $rootScope.name = localStorage.getItem('name-one') || '';\n      $rootScope.error = false;\n      $rootScope.success = false;\n      $rootScope.loading = false;\n      $rootScope.showMenu = false;\n      $rootScope.showSubmenu = false;\n      if ($state.current.requiredLogin && !UserService.isLogged()) {\n        UserService.doLogout();\n      }\n      if (!$state.current.requiredLogin && UserService.isLogged()) {\n        return $state.go('dashboard.home');\n      }\n    });\n  }\n]).constant('RESOURCES', {\n  'API_URL': 'http://localhost:3000/api'\n});\n\n'use strict';\nangular.module('oneImobiliaria').config([\n  '$stateProvider', '$httpProvider', '$urlRouterProvider', function($stateProvider, $httpProvider, $urlRouterProvider) {\n    $stateProvider.state('login', {\n      url: '/login',\n      views: {\n        main: {\n          templateUrl: 'app/views/login/index.html',\n          controller: 'LoginCtrl'\n        },\n        'error@login': {\n          templateUrl: 'app/views/error.html'\n        }\n      },\n      requiredLogin: false\n    }).state('dashboard', {\n      url: '/dashboard',\n      abstract: true,\n      views: {\n        main: {},\n        header: {\n          templateUrl: 'app/views/header.html'\n        },\n        footer: {\n          templateUrl: 'app/views/footer.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.home', {\n      url: '/home',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/home/index.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users', {\n      url: '/users',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/index.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users': {\n          templateUrl: 'app/views/users/submenu.html'\n        },\n        'error@dashboard.users': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.users': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.users': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'error@dashboard.users.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'error@dashboard.users.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties', {\n      url: '/properties',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/index.html'\n        },\n        'submenu@dashboard.properties': {\n          templateUrl: 'app/views/properties/submenu.html'\n        }\n      },\n      requiredLogin: true\n    });\n    $urlRouterProvider.otherwise('/login');\n    $httpProvider.interceptors.push('sessionInjector');\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json';\n    return delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$loading', [\n  '$rootScope', function($rootScope) {\n    return {\n      show: function() {\n        return $rootScope.loading = true;\n      },\n      hide: function() {\n        return $rootScope.loading = false;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$logger', [\n  '$rootScope', function($rootScope) {\n    return {\n      clean: function() {\n        $rootScope.success = false;\n        $rootScope.error = false;\n        return $rootScope.modalError = false;\n      },\n      error: function(errorString) {\n        this.clean();\n        return $rootScope.error = errorString;\n      },\n      modalError: function(errorString) {\n        this.clean();\n        return $rootScope.modalError = errorString;\n      },\n      success: function(successString) {\n        this.clean();\n        return $rootScope.success = successString;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('sessionInjector', [\n  'storage', function(storage) {\n    var isUnloggedPage;\n    isUnloggedPage = function(config) {\n      return config.url.indexOf('auth') > -1 || config.url.indexOf('remember') > -1;\n    };\n    return {\n      request: function(config) {\n        if (!isUnloggedPage(config)) {\n          config.headers['x-access-token'] = storage.getSessionToken();\n        }\n        return config;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('storage', function() {\n  return {\n    isLogged: function() {\n      return (localStorage.getItem('x-code-one') !== null) && (localStorage.getItem('code-one') !== null);\n    },\n    setCodes: function(codes) {\n      localStorage.setItem('x-code-one', codes.token);\n      localStorage.setItem('code-one', codes.code);\n      localStorage.setItem('group-one', codes.type);\n      return localStorage.setItem('name-one', codes.name);\n    },\n    getSessionToken: function() {\n      return localStorage.getItem('x-code-one');\n    },\n    getCode: function() {\n      return localStorage.getItem('code-one');\n    },\n    clean: function() {\n      localStorage.removeItem('x-code-one');\n      localStorage.removeItem('code-one');\n      localStorage.removeItem('group-one');\n      return localStorage.removeItem('name-one');\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserGroupService', function() {\n  var items;\n  items = [\n    {\n      title: 'Administrador(a)',\n      code: 'admin'\n    }, {\n      title: 'Corretor(a)',\n      code: 'broker'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserService', [\n  '$http', '$state', 'storage', 'RESOURCES', function($http, $state, storage, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/accounts';\n    return {\n      isLogged: function() {\n        return storage.isLogged();\n      },\n      doLogin: function(user) {\n        return $http.post(apiUrl + '/auth', user);\n      },\n      doLogout: function() {\n        storage.clean();\n        $state.go('login');\n      },\n      create: function(user) {\n        return $http.post(apiUrl, user);\n      },\n      update: function(user) {\n        return $http.put(apiUrl + '/' + user._id, user);\n      },\n      saveOrUpdate: function(user) {\n        if (user._id) {\n          return this.update(user);\n        } else {\n          return this.create(user);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('firstName', function() {\n  return function(name) {\n    var names;\n    if ((name == null) || name === '') {\n      return '';\n    }\n    names = name.split(' ');\n    return names[0];\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('groupName', function() {\n  return function(group) {\n    var items, title;\n    if ((group == null) || group === '') {\n      return '';\n    }\n    items = [\n      {\n        title: 'Administrador(a)',\n        code: 'admin'\n      }, {\n        title: 'Corretor(a)',\n        code: 'broker'\n      }\n    ];\n    title = '';\n    items.map(function(item) {\n      if (item.code === group) {\n        return title = item.title;\n      }\n    });\n    return title;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('file', function() {\n  return {\n    require: \"ngModel\",\n    restrict: 'A',\n    link: function($scope, elem, attrs, ngModel) {\n      var changeHandler;\n      changeHandler = function(event) {\n        var file, files;\n        files = event.target.files;\n        file = files[0];\n        ngModel.$setViewValue(file);\n        return $scope.$apply();\n      };\n      return elem.bind('change', changeHandler);\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').controller('LoginCtrl', [\n  '$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', function($scope, $rootScope, $state, $logger, storage, UserService) {\n    $scope.user = {};\n    return $scope.doLogin = function() {\n      if (!$rootScope.forms.login.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $scope.user.origin = 'admin';\n      return UserService.doLogin($scope.user).then(function(response) {\n        storage.setCodes(response.data);\n        return $state.go('dashboard.home');\n      })[\"catch\"](function(response) {\n        return $logger.error('Usuário e/ou senha inválido(s).');\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('UsersCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'UserGroupService', 'UserService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) {\n    $scope.user = {};\n    $scope.users = [];\n    $scope.groups = UserGroupService.getAll();\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      UserService.get($stateParams.id).then(function(response) {\n        $scope.user = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      UserService.getAll().then(function(response) {\n        $scope.users = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.saveOrUpdate($scope.user).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.users');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var user;\n      user = $scope.users[index];\n      if (user._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return UserService[\"delete\"](user._id).then(function(response) {\n        $logger.success('Usuário deletado com sucesso!');\n        $scope.users.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao deletar usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n","'use strict'\n\nangular.module('oneImobiliaria')\n.config ['$stateProvider', '$httpProvider', '$urlRouterProvider', ($stateProvider, $httpProvider, $urlRouterProvider) ->\n\n  $stateProvider\n\n  .state 'login',\n    url: '/login'\n    views:\n      main:\n        templateUrl: 'app/views/login/index.html'\n        controller: 'LoginCtrl'\n      'error@login':\n        templateUrl: 'app/views/error.html'\n    requiredLogin: false\n\n  .state 'dashboard',\n    url: '/dashboard'\n    abstract: true\n    views:\n      main: {}\n      header:\n        templateUrl: 'app/views/header.html'\n      footer:\n        templateUrl: 'app/views/footer.html'\n    requiredLogin: true\n\n  .state 'dashboard.home',\n    url: '/home'\n    views:\n      'main@':\n        templateUrl: 'app/views/home/index.html'\n    requiredLogin: true\n\n  .state 'dashboard.users',\n    url: '/users'\n    views:\n      'main@':\n        templateUrl: 'app/views/users/index.html'\n        controller: 'UsersCtrl'\n      'submenu@dashboard.users':\n        templateUrl: 'app/views/users/submenu.html'\n      'error@dashboard.users':\n        templateUrl: 'app/views/error.html'\n      'success@dashboard.users':\n        templateUrl: 'app/views/success.html'\n      'loading@dashboard.users':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.users.new',\n    url: '/new'\n    views:\n      'main@':\n        templateUrl: 'app/views/users/form.html'\n        controller: 'UsersCtrl'\n      'error@dashboard.users.new':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.users.new':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.users.edit',\n    url: '/edit/:id'\n    views:\n      'main@':\n        templateUrl: 'app/views/users/form.html'\n        controller: 'UsersCtrl'\n      'error@dashboard.users.edit':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.users.edit':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.properties',\n    url: '/properties'\n    views:\n      'main@':\n        templateUrl: 'app/views/properties/index.html'\n      'submenu@dashboard.properties':\n        templateUrl: 'app/views/properties/submenu.html'\n    requiredLogin: true\n\n  $urlRouterProvider.otherwise('/login')\n\n  # Access token injector\n  $httpProvider.interceptors.push('sessionInjector')\n\n  $httpProvider.defaults.useXDomain = true\n  $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json'\n  delete $httpProvider.defaults.headers.common['X-Requested-With']\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service '$loading', ['$rootScope', ($rootScope) ->\n\n  show: () ->\n    $rootScope.loading = true\n  hide: () ->\n    $rootScope.loading = false\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service '$logger', ['$rootScope', ($rootScope) ->\n\n  clean: () ->\n    $rootScope.success = false\n    $rootScope.error = false\n    $rootScope.modalError = false\n  error: (errorString) ->\n    this.clean()\n    $rootScope.error = errorString\n  modalError: (errorString) ->\n    this.clean()\n    $rootScope.modalError = errorString\n  success: (successString) ->\n    this.clean()\n    $rootScope.success = successString\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'sessionInjector', ['storage', (storage) ->\n\n  isUnloggedPage = (config) ->\n    return (config.url.indexOf('auth') > -1 or config.url.indexOf('remember') > -1)\n\n  request: (config)->\n    if !isUnloggedPage(config)\n      config.headers['x-access-token'] = storage.getSessionToken()\n    return config\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'storage', () ->\n  isLogged: () ->\n    return (localStorage.getItem('x-code-one') != null) && (localStorage.getItem('code-one') != null)\n  setCodes: (codes) ->\n    localStorage.setItem('x-code-one', codes.token)\n    localStorage.setItem('code-one', codes.code)\n    localStorage.setItem('group-one', codes.type)\n    localStorage.setItem('name-one', codes.name)\n  getSessionToken: () ->\n    localStorage.getItem('x-code-one')\n  getCode: () ->\n    localStorage.getItem('code-one')\n  clean: () ->\n    localStorage.removeItem('x-code-one')\n    localStorage.removeItem('code-one')\n    localStorage.removeItem('group-one')\n    localStorage.removeItem('name-one')","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'groupName', () ->\n  (group) ->\n\n    return '' if not group? or group == ''\n    items = [\n      {title: 'Administrador(a)', code: 'admin'},\n      {title: 'Corretor(a)', code: 'broker'}\n    ]\n\n    title = ''\n    items.map (item) ->\n      title = item.title if item.code == group\n\n    return title","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'UserService', ['$http', '$state', 'storage', 'RESOURCES', ($http, $state, storage, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/accounts'\n\n  isLogged: () ->\n    return storage.isLogged()\n  doLogin: (user) ->\n    return $http.post apiUrl + '/auth', user\n  doLogout: () ->\n      storage.clean()\n      $state.go('login')\n      return\n  create: (user) ->\n    return $http.post apiUrl, user\n  update: (user) ->\n    return $http.put apiUrl + '/' + user._id, user\n  saveOrUpdate: (user) ->\n    if user._id then this.update(user)\n    else this.create(user)\n  getAll: () ->\n    return $http.get apiUrl\n  get: (id) ->\n    return $http.get apiUrl + '/' + id\n  delete: (id) ->\n    return $http.delete apiUrl+ '/' + id\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'firstName', () ->\n  (name) ->\n\n    return '' if not name? or name == ''\n    names = name.split(' ')\n    return names[0]","'use strict'\n\nangular.module('oneImobiliaria')\n.directive 'file', () ->\n  require: \"ngModel\"\n  restrict: 'A'\n  link: ($scope, elem, attrs, ngModel) ->\n\n    changeHandler = (event) ->\n      files = event.target.files\n      file = files[0]\n\n      ngModel.$setViewValue(file)\n      $scope.$apply()\n\n    elem.bind('change', changeHandler)","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'LoginCtrl', ['$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', ($scope, $rootScope, $state, $logger, storage, UserService) ->\n\n  $scope.user = {}\n\n  $scope.doLogin = () ->\n    if !$rootScope.forms.login.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $scope.user.origin = 'admin'\n    UserService.doLogin($scope.user)\n    .then (response) ->\n      storage.setCodes(response.data)\n      $state.go('dashboard.home')\n    .catch (response) ->\n      $logger.error('Usuário e/ou senha inválido(s).')\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'UsersCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage','UserGroupService', 'UserService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) ->\n\n  $scope.user = {}\n  $scope.users = []\n\n  $scope.groups = UserGroupService.getAll()\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    UserService.get($stateParams.id)\n    .then (response) ->\n      $scope.user = response.data\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    UserService.getAll()\n    .then (response) ->\n      $scope.users = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    UserService.saveOrUpdate($scope.user)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.users')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    user = $scope.users[index]\n    return false if user._id == storage.getCode()\n\n    $loading.show()\n    UserService.delete(user._id)\n    .then (response) ->\n      $logger.success('Usuário deletado com sucesso!')\n      $scope.users.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao deletar usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n]"]}