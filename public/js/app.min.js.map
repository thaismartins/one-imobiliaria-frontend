{"version":3,"sources":["app.coffee","app.js","routes.coffee","client.coffee","loading.coffee","location.coffee","logger.coffee","property-type.coffee","property.coffee","session.coffee","storage.coffee","user-group.coffee","user.coffee","address.coffee","date-br.coffee","date-time-br.coffee","decimals.coffee","first-name.coffee","meters.coffee","order-by-string.coffee","phone-br.coffee","range.coffee","types-to-text.coffee","yes-or-no.coffee","file.coffee","account.coffee","clients.coffee","login.coffee","properties.coffee","users.coffee"],"names":["angular","module","run","$rootScope","$state","RESOURCES","storage","UserService","error","success","loading","fileUrl","API_URL","page","name","showMenu","showSubmenu","appTitle","forms","doLogout","toggleMenu","toggleSubmenu","$on","current","split","group","getGroup","getName","requiredLogin","isLogged","go","constant","process","env","API_URI","config","$stateProvider","$httpProvider","$urlRouterProvider","state","url","views","main","templateUrl","controller","error@login","abstract","header","footer","main@","submenu@dashboard.users","error@dashboard.users","success@dashboard.users","loading@dashboard.users","error@dashboard.users.new","loading@dashboard.users.new","error@dashboard.users.edit","loading@dashboard.users.edit","submenu@dashboard.clients","error@dashboard.clients","success@dashboard.clients","loading@dashboard.clients","error@dashboard.clients.new","loading@dashboard.clients.new","error@dashboard.clients.edit","submenu@dashboard.properties","error@dashboard.properties","success@dashboard.properties","loading@dashboard.properties","submenu@dashboard.properties.new","property@dashboard.properties.new","interest@dashboard.properties.new","error@dashboard.properties.new","loading@dashboard.properties.new","submenu@dashboard.properties.edit","property@dashboard.properties.edit","interest@dashboard.properties.edit","error@dashboard.properties.edit","loading@dashboard.properties.edit","error@dashboard.account","loading@dashboard.account","otherwise","interceptors","push","defaults","useXDomain","headers","common","service","$http","apiUrl","create","client","post","update","put","_id","saveOrUpdate","this","getAll","get","id","delete","show","hide","getAllStates","getCitiesByState","clean","modalError","errorString","successString","items","title","code","property","isUnloggedPage","indexOf","request","getSessionToken","localStorage","getItem","setCodes","codes","setItem","token","type","updateToken","getCode","removeItem","doLogin","user","getMyAccount","filter","address","fullAddress","street","number","complement","input","date","moment","format","locale","calendar","sameElse","num","toString","replace","names","meters","array","reverse","result","sort","object1","object2","isUndefined","localeCompare","length","PropertyTypeService","propertyType","map","item","n","i","j","ref","res","types","len","apart","land","car","house","console","log","UserGroupService","directive","$parse","require","scope","ngModel","restrict","link","$scope","elem","attrs","changeHandler","formatter","value","$formatters","$parsers","newValue","$modelValue","assign","$viewValue","$render","bind","event","file","files","target","$setViewValue","$apply","$loading","$logger","edit","then","response","data","canEdit","doUpdate","$valid","$stateParams","$filter","ClientService","clients","doDelete","index","splice","login","origin","PropertyService","LocationService","cities","convertData","payments","interest","allMeters","allVacancies","allFloors","allValues","allIptus","allCondominiums","allLocations","properties","states","currentCities","showCities","doUploadCSV","csv","min","max","condominium","vacancy","floor","iptu","location","users","groups"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict'\n\nangular.module 'oneImobiliaria', [\n  'ui.router',\n  'ui.utils.masks',\n  'ui.slider'\n]\n.run ['$rootScope', '$state', 'RESOURCES', 'storage', 'UserService', ($rootScope, $state, RESOURCES, storage, UserService) ->\n\n  $rootScope.error = false\n  $rootScope.success = false\n  $rootScope.loading = false\n\n  $rootScope.fileUrl = RESOURCES.API_URL + '/'\n\n  $rootScope.page = ''\n  $rootScope.name = ''\n\n  $rootScope.showMenu = false\n  $rootScope.showSubmenu = false\n\n  $rootScope.appTitle = 'One Consultoria Imobiliária'\n\n  $rootScope.forms = {}\n\n  $rootScope.doLogout = () ->\n    UserService.doLogout()\n\n  $rootScope.toggleMenu = () ->\n    $rootScope.showMenu = !$rootScope.showMenu\n\n  $rootScope.toggleSubmenu = () ->\n    $rootScope.showSubmenu = !$rootScope.showSubmenu\n\n  $rootScope.$on '$stateChangeSuccess', () ->\n\n    page = $state.current.name.split('.')\n    $rootScope.page = page[1] || ''\n\n    $rootScope.group = storage.getGroup()\n    $rootScope.name = storage.getName()\n\n    $rootScope.error = false\n    $rootScope.success = false\n    $rootScope.loading = false\n    $rootScope.showMenu = false\n    $rootScope.showSubmenu = false\n\n    UserService.doLogout() if $state.current.requiredLogin && !UserService.isLogged()\n    $state.go('dashboard.home') if !$state.current.requiredLogin && UserService.isLogged()\n    $state.go('dashboard.home') if $rootScope.page == 'users' && $rootScope.group != 'admin'\n]\n.constant 'RESOURCES',\n#  'API_URL': 'http://desenv.doisoitosete.com:3000/api'\n  'API_URL': process.env.API_URI || 'http://localhost:3000/api'\n","'use strict';\nangular.module('oneImobiliaria', ['ui.router', 'ui.utils.masks', 'ui.slider']).run([\n  '$rootScope', '$state', 'RESOURCES', 'storage', 'UserService', function($rootScope, $state, RESOURCES, storage, UserService) {\n    $rootScope.error = false;\n    $rootScope.success = false;\n    $rootScope.loading = false;\n    $rootScope.fileUrl = RESOURCES.API_URL + '/';\n    $rootScope.page = '';\n    $rootScope.name = '';\n    $rootScope.showMenu = false;\n    $rootScope.showSubmenu = false;\n    $rootScope.appTitle = 'One Consultoria Imobiliária';\n    $rootScope.forms = {};\n    $rootScope.doLogout = function() {\n      return UserService.doLogout();\n    };\n    $rootScope.toggleMenu = function() {\n      return $rootScope.showMenu = !$rootScope.showMenu;\n    };\n    $rootScope.toggleSubmenu = function() {\n      return $rootScope.showSubmenu = !$rootScope.showSubmenu;\n    };\n    return $rootScope.$on('$stateChangeSuccess', function() {\n      var page;\n      page = $state.current.name.split('.');\n      $rootScope.page = page[1] || '';\n      $rootScope.group = storage.getGroup();\n      $rootScope.name = storage.getName();\n      $rootScope.error = false;\n      $rootScope.success = false;\n      $rootScope.loading = false;\n      $rootScope.showMenu = false;\n      $rootScope.showSubmenu = false;\n      if ($state.current.requiredLogin && !UserService.isLogged()) {\n        UserService.doLogout();\n      }\n      if (!$state.current.requiredLogin && UserService.isLogged()) {\n        $state.go('dashboard.home');\n      }\n      if ($rootScope.page === 'users' && $rootScope.group !== 'admin') {\n        return $state.go('dashboard.home');\n      }\n    });\n  }\n]).constant('RESOURCES', {\n  'API_URL': process.env.API_URI || 'http://localhost:3000/api'\n});\n\n'use strict';\nangular.module('oneImobiliaria').config([\n  '$stateProvider', '$httpProvider', '$urlRouterProvider', function($stateProvider, $httpProvider, $urlRouterProvider) {\n    $stateProvider.state('login', {\n      url: '/login',\n      views: {\n        main: {\n          templateUrl: 'app/views/login/index.html',\n          controller: 'LoginCtrl'\n        },\n        'error@login': {\n          templateUrl: 'app/views/error.html'\n        }\n      },\n      requiredLogin: false\n    }).state('dashboard', {\n      url: '/dashboard',\n      abstract: true,\n      views: {\n        main: {},\n        header: {\n          templateUrl: 'app/views/header.html'\n        },\n        footer: {\n          templateUrl: 'app/views/footer.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.home', {\n      url: '/home',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/home/index.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users', {\n      url: '/users',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/index.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users': {\n          templateUrl: 'app/views/users/submenu.html'\n        },\n        'error@dashboard.users': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.users': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.users': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'error@dashboard.users.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'error@dashboard.users.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients', {\n      url: '/clients',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/index.html',\n          controller: 'ClientsCtrl'\n        },\n        'submenu@dashboard.clients': {\n          templateUrl: 'app/views/clients/submenu.html'\n        },\n        'error@dashboard.clients': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.clients': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.clients': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.clients.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties', {\n      url: '/properties',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/index.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties': {\n          templateUrl: 'app/views/properties/submenu.html'\n        },\n        'error@dashboard.properties': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.properties': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.properties': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.account', {\n      url: '/account',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/account/form.html',\n          controller: 'AccountCtrl'\n        },\n        'error@dashboard.account': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.account': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    });\n    $urlRouterProvider.otherwise('/login');\n    $httpProvider.interceptors.push('sessionInjector');\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json';\n    return delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('ClientService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/clients';\n    return {\n      create: function(client) {\n        return $http.post(apiUrl, client);\n      },\n      update: function(client) {\n        return $http.put(apiUrl + '/' + client._id, client);\n      },\n      saveOrUpdate: function(client) {\n        if (client._id) {\n          return this.update(client);\n        } else {\n          return this.create(client);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$loading', [\n  '$rootScope', function($rootScope) {\n    return {\n      show: function() {\n        return $rootScope.loading = true;\n      },\n      hide: function() {\n        return $rootScope.loading = false;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('LocationService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/cities';\n    return {\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      getAllStates: function() {\n        return $http.get(apiUrl + '/states');\n      },\n      getCitiesByState: function(state) {\n        return $http.get(apiUrl + '/states/' + state);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$logger', [\n  '$rootScope', function($rootScope) {\n    return {\n      clean: function() {\n        $rootScope.success = false;\n        $rootScope.error = false;\n        return $rootScope.modalError = false;\n      },\n      error: function(errorString) {\n        this.clean();\n        return $rootScope.error = errorString;\n      },\n      modalError: function(errorString) {\n        this.clean();\n        return $rootScope.modalError = errorString;\n      },\n      success: function(successString) {\n        this.clean();\n        return $rootScope.success = successString;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyTypeService', function() {\n  var items;\n  items = [\n    {\n      title: 'Apartamento',\n      code: 'apartament'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Terreno',\n      code: 'land'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Carro',\n      code: 'car'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/properties';\n    return {\n      create: function(property) {\n        return $http.post(apiUrl, property);\n      },\n      update: function(property) {\n        return $http.put(apiUrl + '/' + property._id, property);\n      },\n      saveOrUpdate: function(property) {\n        if (property._id) {\n          return this.update(property);\n        } else {\n          return this.create(property);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('sessionInjector', [\n  'storage', function(storage) {\n    var isUnloggedPage;\n    isUnloggedPage = function(config) {\n      return config.url.indexOf('auth') > -1 || config.url.indexOf('remember') > -1;\n    };\n    return {\n      request: function(config) {\n        if (!isUnloggedPage(config)) {\n          config.headers['x-access-token'] = storage.getSessionToken();\n        }\n        return config;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('storage', function() {\n  return {\n    isLogged: function() {\n      return (localStorage.getItem('x-code-one') !== null) && (localStorage.getItem('code-one') !== null);\n    },\n    setCodes: function(codes) {\n      localStorage.setItem('x-code-one', codes.token);\n      localStorage.setItem('code-one', codes.code);\n      localStorage.setItem('group-one', codes.type);\n      return localStorage.setItem('name-one', codes.name);\n    },\n    updateToken: function(token) {\n      return localStorage.setItem('x-code-one', token);\n    },\n    getSessionToken: function() {\n      return localStorage.getItem('x-code-one');\n    },\n    getCode: function() {\n      return localStorage.getItem('code-one');\n    },\n    getName: function() {\n      return localStorage.getItem('name-one') || '';\n    },\n    getGroup: function() {\n      return localStorage.getItem('group-one') || '';\n    },\n    clean: function() {\n      localStorage.removeItem('x-code-one');\n      localStorage.removeItem('code-one');\n      localStorage.removeItem('group-one');\n      return localStorage.removeItem('name-one');\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserGroupService', function() {\n  var items;\n  items = [\n    {\n      title: 'Administrador(a)',\n      code: 'admin'\n    }, {\n      title: 'Corretor(a)',\n      code: 'broker'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserService', [\n  '$http', '$state', 'storage', 'RESOURCES', function($http, $state, storage, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/accounts';\n    return {\n      isLogged: function() {\n        return storage.isLogged();\n      },\n      doLogin: function(user) {\n        return $http.post(apiUrl + '/auth', user);\n      },\n      doLogout: function() {\n        storage.clean();\n        $state.go('login');\n      },\n      create: function(user) {\n        return $http.post(apiUrl, user);\n      },\n      update: function(user) {\n        return $http.put(apiUrl + '/' + user._id, user);\n      },\n      saveOrUpdate: function(user) {\n        if (user._id) {\n          return this.update(user);\n        } else {\n          return this.create(user);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      getMyAccount: function() {\n        return $http.get(apiUrl + '/' + storage.getCode());\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('address', function() {\n  return function(address) {\n    var fullAddress;\n    if ((address == null) || ((address.street == null) && (address.number == null) && (address.complement == null))) {\n      return 'Indefinido';\n    }\n    fullAddress = '';\n    if (address.street != null) {\n      fullAddress += address.street;\n    }\n    if (address.number != null) {\n      fullAddress += ', ' + address.number;\n    }\n    if (address.complement != null) {\n      fullAddress += ' - ' + address.complement;\n    }\n    return fullAddress;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateBr', function() {\n  return function(input) {\n    var date;\n    if (input == null) {\n      return '';\n    }\n    date = input.split('T');\n    return moment(date[0]).format('DD/MM/YYYY');\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateTimeBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    moment.locale('pt-br');\n    return moment(input).calendar(null, {\n      sameElse: 'DD/MM/YYYY - H:mm'\n    });\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('decimals', function() {\n  return function(num) {\n    if (num == null) {\n      return '';\n    }\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('firstName', function() {\n  return function(name) {\n    var names;\n    if ((name == null) || name === '') {\n      return '';\n    }\n    names = name.split(' ');\n    return names[0];\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('meters', function() {\n  return function(meters) {\n    if ((meters == null) || meters === '') {\n      meters = '0';\n    }\n    return meters + ' m²';\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('orderByString', function() {\n  return function(array, property, reverse) {\n    var result;\n    result = array.sort(function(object1, object2) {\n      if (angular.isUndefined(property)) {\n        object1.localeCompare(object2);\n      }\n      return object1[property].localeCompare(object2[property]);\n    });\n    if (reverse) {\n      return result.reverse();\n    } else {\n      return result;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('phoneBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    if (input.length === 10) {\n      return input.replace(/(\\d{2})(\\d{4})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    } else {\n      return input.replace(/(\\d{2})(\\d{5})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('propertyType', [\n  'PropertyTypeService', function(PropertyTypeService) {\n    return function(propertyType) {\n      var items, title;\n      if ((propertyType == null) || propertyType === '') {\n        return '';\n      }\n      items = PropertyTypeService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === propertyType) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('range', function() {\n  return function(n) {\n    var i, j, ref, res;\n    res = [];\n    for (i = j = 1, ref = n + 1; j < ref; i = j += 1) {\n      res.push(i);\n    }\n    return res;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('typesToText', function() {\n  return function(types) {\n    var i, items, len, type;\n    if (!((types != null) && types.length > 0)) {\n      return 'Indefinido';\n    }\n    items = {\n      apart: 'Apartamento',\n      land: 'Tereno',\n      car: 'Carro',\n      house: 'Case'\n    };\n    for (i = 0, len = types.length; i < len; i++) {\n      type = types[i];\n      console.log(type);\n    }\n    return types;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('groupName', [\n  'UserGroupService', function(UserGroupService) {\n    return function(group) {\n      var items, title;\n      if ((group == null) || group === '') {\n        return '';\n      }\n      items = UserGroupService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === group) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('yesOrNo', function() {\n  return function(type) {\n    if (type) {\n      return 'Sim';\n    } else {\n      return 'Não';\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('decimals', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        formatter = function(value) {\n          if (value == null) {\n            return '';\n          }\n          return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n        };\n        ngModel.$formatters.push(function(value) {\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return formatter(value);\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').directive('file', function() {\n  return {\n    require: \"ngModel\",\n    restrict: 'A',\n    link: function($scope, elem, attrs, ngModel) {\n      var changeHandler;\n      changeHandler = function(event) {\n        var file, files;\n        files = event.target.files;\n        file = files[0];\n        ngModel.$setViewValue(file);\n        return $scope.$apply();\n      };\n      return elem.bind('change', changeHandler);\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('meters', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        console.log(ngModel.$modelValue);\n        formatter = function(value) {\n          if (value == null) {\n            value = 0;\n          }\n          value = value.toString().replace('m²', '');\n          value = value.toString().replace(/\\D/g, '');\n          return value + 'm²';\n        };\n        ngModel.$formatters.push(function(value) {\n          console.log(value);\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return value.toString().replace('m²', '');\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          console.log(newValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('AccountCtrl', [\n  '$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', function($scope, $rootScope, $loading, $logger, storage, UserService) {\n    $scope.user = {};\n    $scope.edit = false;\n    $loading.show();\n    UserService.getMyAccount().then(function(response) {\n      $scope.user = response.data;\n      return $loading.hide();\n    })[\"catch\"](function(response) {\n      $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.');\n      return $loading.hide();\n    });\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    return $scope.doUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      console.log($scope.user);\n      $loading.show();\n      return UserService.update($scope.user).then(function(response) {\n        $logger.success('Sua conta foi atualizada com sucesso!');\n        storage.updateToken(response.data.token);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao editar sua conta. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('ClientsCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) {\n    $scope.client = {};\n    $scope.clients = [];\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      ClientService.get($stateParams.id).then(function(response) {\n        $scope.client = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      ClientService.getAll().then(function(response) {\n        $scope.clients = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.client.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return ClientService.saveOrUpdate($scope.client).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.clients');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var client;\n      client = $scope.clients[index];\n      if (client._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return ClientService[\"delete\"](client._id).then(function(response) {\n        $logger.success('Cliente excluído com sucesso!');\n        $scope.clients.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('LoginCtrl', [\n  '$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', function($scope, $rootScope, $state, $logger, storage, UserService) {\n    $scope.user = {};\n    return $scope.doLogin = function() {\n      if (!$rootScope.forms.login.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $scope.user.origin = 'admin';\n      return UserService.doLogin($scope.user).then(function(response) {\n        storage.setCodes(response.data);\n        return $state.go('dashboard.home');\n      })[\"catch\"](function(response) {\n        return $logger.error('Usuário e/ou senha inválido(s).');\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('PropertiesCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) {\n    var cities, convertData;\n    $scope.property = {\n      payments: [],\n      interest: {\n        types: [],\n        allMeters: [10, 500],\n        allVacancies: [0, 10],\n        allFloors: [1, 30],\n        allValues: [1000, 5000000],\n        allIptus: [1000, 15000],\n        allCondominiums: [1000, 500000],\n        allLocations: [1000, 50000]\n      }\n    };\n    $scope.properties = [];\n    $scope.cities = [];\n    $scope.states = [];\n    $scope.clients = [];\n    cities = [];\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      PropertyService.get($stateParams.id).then(function(response) {\n        $scope.property = response.data;\n        $scope.property.interest.allMeters = [52, 184];\n        $scope.property.interest.allVacancies = [1, 3];\n        $scope.property.interest.allFloors = [2, 10];\n        $scope.property.interest.allValues = [2222, 1000000];\n        $scope.property.interest.allIptus = [2222, 10000];\n        $scope.property.interest.allCondominiums = [2222, 10000];\n        $scope.property.interest.allLocations = [2222, 10000];\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return LocationService.getCitiesByState($scope.property.address.state);\n      }).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[$scope.property.address.state] = currentCities;\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      PropertyService.getAll().then(function(response) {\n        $scope.properties = $filter('orderBy')(response.data, '-created');\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.showCities = function(state) {\n      if (cities[state] != null) {\n        $scope.cities = cities[state];\n        return false;\n      }\n      $loading.show();\n      return LocationService.getCitiesByState(state).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[state] = currentCities;\n        return $loading.hide();\n      })[\"catch\"](function() {\n        return $loading.hide();\n      });\n    };\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.property.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      convertData();\n      return PropertyService.saveOrUpdate($scope.property).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.properties');\n      })[\"catch\"](function(response) {\n        if (response.data.code === 8) {\n          $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.');\n        } else {\n          $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.');\n        }\n        return $loading.hide();\n      });\n    };\n    $scope.doDelete = function(index) {\n      var property;\n      property = $scope.properties[index];\n      if (property._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return PropertyService[\"delete\"](property._id).then(function(response) {\n        $logger.success('Imóvel excluído com sucesso!');\n        $scope.properties.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    $scope.doUploadCSV = function() {\n      console.log('Entrou....');\n      return console.log($scope.csv);\n    };\n    return convertData = function() {\n      console.log('Entrou...');\n      $scope.property.interest.meters = {\n        min: $scope.property.interest.allMeters[0],\n        max: $scope.property.interest.allMeters[1]\n      };\n      delete $scope.property.interest.allMeters;\n      $scope.property.interest.condominium = {\n        min: $scope.property.interest.allCondominiums[0],\n        max: $scope.property.interest.allCondominiums[1]\n      };\n      delete $scope.property.interest.allCondominiums;\n      $scope.property.interest.vacancy = {\n        min: $scope.property.interest.allVacancies[0],\n        max: $scope.property.interest.allVacancies[1]\n      };\n      delete $scope.property.interest.allVacancies;\n      $scope.property.interest.floor = {\n        min: $scope.property.interest.allFloors[0],\n        max: $scope.property.interest.allFloors[1]\n      };\n      delete $scope.property.interest.allFloors;\n      $scope.property.interest.value = {\n        min: $scope.property.interest.allValues[0],\n        max: $scope.property.interest.allValues[1]\n      };\n      delete $scope.property.interest.allValues;\n      $scope.property.interest.iptu = {\n        min: $scope.property.interest.allIptus[0],\n        max: $scope.property.interest.allIptus[1]\n      };\n      delete $scope.property.interest.allIptus;\n      $scope.property.interest.location = {\n        min: $scope.property.interest.allLocations[0],\n        max: $scope.property.interest.allLocations[1]\n      };\n      delete $scope.property.interest.allLocations;\n      return console.log($scope.property.interest);\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('UsersCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'UserGroupService', 'UserService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) {\n    $scope.user = {};\n    $scope.users = [];\n    $scope.groups = UserGroupService.getAll();\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      UserService.get($stateParams.id).then(function(response) {\n        $scope.user = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      UserService.getAll().then(function(response) {\n        $scope.users = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.saveOrUpdate($scope.user).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.users');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var user;\n      user = $scope.users[index];\n      if (user._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return UserService[\"delete\"](user._id).then(function(response) {\n        $logger.success('Usuário excluído com sucesso!');\n        $scope.users.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n","'use strict'\n\nangular.module('oneImobiliaria')\n.config ['$stateProvider', '$httpProvider', '$urlRouterProvider', ($stateProvider, $httpProvider, $urlRouterProvider) ->\n\n  $stateProvider\n\n  .state 'login',\n    url: '/login'\n    views:\n      main:\n        templateUrl: 'app/views/login/index.html'\n        controller: 'LoginCtrl'\n      'error@login':\n        templateUrl: 'app/views/error.html'\n    requiredLogin: false\n\n  .state 'dashboard',\n    url: '/dashboard'\n    abstract: true\n    views:\n      main: {}\n      header:\n        templateUrl: 'app/views/header.html'\n      footer:\n        templateUrl: 'app/views/footer.html'\n    requiredLogin: true\n\n  .state 'dashboard.home',\n    url: '/home'\n    views:\n      'main@':\n        templateUrl: 'app/views/home/index.html'\n    requiredLogin: true\n\n  .state 'dashboard.users',\n    url: '/users'\n    views:\n      'main@':\n        templateUrl: 'app/views/users/index.html'\n        controller: 'UsersCtrl'\n      'submenu@dashboard.users':\n        templateUrl: 'app/views/users/submenu.html'\n      'error@dashboard.users':\n        templateUrl: 'app/views/error.html'\n      'success@dashboard.users':\n        templateUrl: 'app/views/success.html'\n      'loading@dashboard.users':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.users.new',\n    url: '/new'\n    views:\n      'main@':\n        templateUrl: 'app/views/users/form.html'\n        controller: 'UsersCtrl'\n      'error@dashboard.users.new':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.users.new':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.users.edit',\n    url: '/edit/:id'\n    views:\n      'main@':\n        templateUrl: 'app/views/users/form.html'\n        controller: 'UsersCtrl'\n      'error@dashboard.users.edit':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.users.edit':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.clients',\n    url: '/clients'\n    views:\n      'main@':\n        templateUrl: 'app/views/clients/index.html'\n        controller: 'ClientsCtrl'\n      'submenu@dashboard.clients':\n        templateUrl: 'app/views/clients/submenu.html'\n      'error@dashboard.clients':\n        templateUrl: 'app/views/error.html'\n      'success@dashboard.clients':\n        templateUrl: 'app/views/success.html'\n      'loading@dashboard.clients':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.clients.new',\n    url: '/new'\n    views:\n      'main@':\n        templateUrl: 'app/views/clients/form.html'\n        controller: 'ClientsCtrl'\n      'error@dashboard.clients.new':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.clients.new':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.clients.edit',\n    url: '/edit/:id'\n    views:\n      'main@':\n        templateUrl: 'app/views/clients/form.html'\n        controller: 'ClientsCtrl'\n      'error@dashboard.clients.edit':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.users.edit':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.properties',\n    url: '/properties'\n    views:\n      'main@':\n        templateUrl: 'app/views/properties/index.html'\n        controller: 'PropertiesCtrl'\n      'submenu@dashboard.properties':\n        templateUrl: 'app/views/properties/submenu.html'\n      'error@dashboard.properties':\n        templateUrl: 'app/views/error.html'\n      'success@dashboard.properties':\n        templateUrl: 'app/views/success.html'\n      'loading@dashboard.properties':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.properties.new',\n    url: '/new'\n    views:\n      'main@':\n        templateUrl: 'app/views/properties/form.html'\n        controller: 'PropertiesCtrl'\n      'submenu@dashboard.properties.new':\n        templateUrl: 'app/views/properties/form-submenu.html'\n      'property@dashboard.properties.new':\n        templateUrl: 'app/views/properties/property.html'\n      'interest@dashboard.properties.new':\n        templateUrl: 'app/views/properties/interest.html'\n      'error@dashboard.properties.new':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.properties.new':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.properties.edit',\n    url: '/edit/:id'\n    views:\n      'main@':\n        templateUrl: 'app/views/properties/form.html'\n        controller: 'PropertiesCtrl'\n      'submenu@dashboard.properties.edit':\n        templateUrl: 'app/views/properties/form-submenu.html'\n      'property@dashboard.properties.edit':\n        templateUrl: 'app/views/properties/property.html'\n      'interest@dashboard.properties.edit':\n        templateUrl: 'app/views/properties/interest.html'\n      'error@dashboard.properties.edit':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.properties.edit':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  .state 'dashboard.account',\n    url: '/account'\n    views:\n      'main@':\n        templateUrl: 'app/views/account/form.html'\n        controller: 'AccountCtrl'\n      'error@dashboard.account':\n        templateUrl: 'app/views/error.html'\n      'loading@dashboard.account':\n        templateUrl: 'app/views/loading.html'\n    requiredLogin: true\n\n  $urlRouterProvider.otherwise('/login')\n\n  # Access token injector\n  $httpProvider.interceptors.push('sessionInjector')\n\n  $httpProvider.defaults.useXDomain = true\n  $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json'\n  delete $httpProvider.defaults.headers.common['X-Requested-With']\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'ClientService', ['$http', '$state', 'RESOURCES', ($http, $state, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/clients'\n\n  create: (client) ->\n    return $http.post apiUrl, client\n  update: (client) ->\n    return $http.put apiUrl + '/' + client._id, client\n  saveOrUpdate: (client) ->\n    if client._id then this.update(client)\n    else this.create(client)\n  getAll: () ->\n    return $http.get apiUrl\n  get: (id) ->\n    return $http.get apiUrl + '/' + id\n  delete: (id) ->\n    return $http.delete apiUrl+ '/' + id\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service '$loading', ['$rootScope', ($rootScope) ->\n\n  show: () ->\n    $rootScope.loading = true\n  hide: () ->\n    $rootScope.loading = false\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'LocationService', ['$http', '$state', 'RESOURCES', ($http, $state, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/cities'\n\n  getAll: () ->\n    return $http.get apiUrl\n  getAllStates: () ->\n    return $http.get apiUrl + '/states'\n  getCitiesByState: (state) ->\n    return $http.get apiUrl + '/states/' + state\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service '$logger', ['$rootScope', ($rootScope) ->\n\n  clean: () ->\n    $rootScope.success = false\n    $rootScope.error = false\n    $rootScope.modalError = false\n  error: (errorString) ->\n    this.clean()\n    $rootScope.error = errorString\n  modalError: (errorString) ->\n    this.clean()\n    $rootScope.modalError = errorString\n  success: (successString) ->\n    this.clean()\n    $rootScope.success = successString\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'propertyType', ['PropertyTypeService', (PropertyTypeService) ->\n  (propertyType) ->\n\n    return '' if not propertyType? or propertyType == ''\n    items = PropertyTypeService.getAll()\n\n    title = ''\n    items.map (item) ->\n      title = item.title if item.code == propertyType\n\n    return title\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'PropertyService', ['$http', '$state', 'RESOURCES', ($http, $state, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/properties'\n\n  create: (property) ->\n    return $http.post apiUrl, property\n  update: (property) ->\n    return $http.put apiUrl + '/' + property._id, property\n  saveOrUpdate: (property) ->\n    if property._id then this.update(property)\n    else this.create(property)\n  getAll: () ->\n    return $http.get apiUrl\n  get: (id) ->\n    return $http.get apiUrl + '/' + id\n  delete: (id) ->\n    return $http.delete apiUrl+ '/' + id\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'sessionInjector', ['storage', (storage) ->\n\n  isUnloggedPage = (config) ->\n    return (config.url.indexOf('auth') > -1 or config.url.indexOf('remember') > -1)\n\n  request: (config)->\n    if !isUnloggedPage(config)\n      config.headers['x-access-token'] = storage.getSessionToken()\n    return config\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'storage', () ->\n  isLogged: () ->\n    return (localStorage.getItem('x-code-one') != null) && (localStorage.getItem('code-one') != null)\n  setCodes: (codes) ->\n    localStorage.setItem('x-code-one', codes.token)\n    localStorage.setItem('code-one', codes.code)\n    localStorage.setItem('group-one', codes.type)\n    localStorage.setItem('name-one', codes.name)\n  updateToken: (token) ->\n    localStorage.setItem('x-code-one', token)\n  getSessionToken: () ->\n    localStorage.getItem('x-code-one')\n  getCode: () ->\n    localStorage.getItem('code-one')\n  getName: () ->\n    localStorage.getItem('name-one') || ''\n  getGroup: () ->\n    localStorage.getItem('group-one') || ''\n  clean: () ->\n    localStorage.removeItem('x-code-one')\n    localStorage.removeItem('code-one')\n    localStorage.removeItem('group-one')\n    localStorage.removeItem('name-one')","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'groupName', ['UserGroupService', (UserGroupService) ->\n  (group) ->\n\n    return '' if not group? or group == ''\n    items = UserGroupService.getAll()\n\n    title = ''\n    items.map (item) ->\n      title = item.title if item.code == group\n\n    return title\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.service 'UserService', ['$http', '$state', 'storage', 'RESOURCES', ($http, $state, storage, RESOURCES) ->\n\n  apiUrl = RESOURCES.API_URL + '/accounts'\n\n  isLogged: () ->\n    return storage.isLogged()\n  doLogin: (user) ->\n    return $http.post apiUrl + '/auth', user\n  doLogout: () ->\n      storage.clean()\n      $state.go('login')\n      return\n  create: (user) ->\n    return $http.post apiUrl, user\n  update: (user) ->\n    return $http.put apiUrl + '/' + user._id, user\n  saveOrUpdate: (user) ->\n    if user._id then this.update(user)\n    else this.create(user)\n  getAll: () ->\n    return $http.get apiUrl\n  get: (id) ->\n    return $http.get apiUrl + '/' + id\n  getMyAccount: () ->\n    return $http.get apiUrl + '/' + storage.getCode()\n  delete: (id) ->\n    return $http.delete apiUrl+ '/' + id\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'address', () ->\n  (address) ->\n\n    if not address? || (not address.street? and not address.number? and not address.complement?)\n      return 'Indefinido'\n\n    fullAddress = ''\n\n    if address.street?\n      fullAddress += address.street\n\n    if address.number?\n      fullAddress += ', ' + address.number\n\n    if address.complement?\n      fullAddress += ' - ' + address.complement\n\n    return fullAddress","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'dateBr', () ->\n  (input) ->\n\n    return '' if not input?\n    date = input.split('T')\n\n    moment(date[0]).format('DD/MM/YYYY')","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'dateTimeBr', () ->\n  (input) ->\n    return '' if not input?\n    moment.locale('pt-br')\n    moment(input).calendar(null, {sameElse: 'DD/MM/YYYY - H:mm'})","'use strict'\n\nangular.module('oneImobiliaria')\n.directive 'decimals', ['$parse', ($parse) ->\n  require: \"?ngModel\"\n  scope:\n    ngModel:'='\n  restrict: 'A'\n  link: ($scope, elem, attrs, ngModel) ->\n\n    formatter = (value) ->\n      return '' if not value?\n      return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")\n\n    ngModel.$formatters.push (value) ->\n      formatter(value)\n\n    ngModel.$parsers.push (value) ->\n      formatter(value)\n\n    changeHandler = () ->\n      newValue = formatter(ngModel.$modelValue)\n\n      $parse(attrs.ngModel).assign($scope, newValue);\n      ngModel.$viewValue = newValue;\n      ngModel.$render();\n\n    elem.bind('keyup', changeHandler)\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'firstName', () ->\n  (name) ->\n\n    return '' if not name? or name == ''\n    names = name.split(' ')\n    return names[0]","'use strict'\n\nangular.module('oneImobiliaria')\n.directive 'meters', ['$parse', ($parse) ->\n  require: \"?ngModel\"\n  scope:\n    ngModel:'='\n  restrict: 'A'\n  link: ($scope, elem, attrs, ngModel) ->\n\n    console.log(ngModel.$modelValue)\n    formatter = (value) ->\n      value = 0 if not value?\n      value = value.toString().replace('m²', '')\n      value = value.toString().replace(/\\D/g, '')\n      return value + 'm²'\n\n    ngModel.$formatters.push (value) ->\n      console.log(value)\n      formatter(value)\n\n    ngModel.$parsers.push (value) ->\n      value.toString().replace('m²', '')\n\n    changeHandler = () ->\n      newValue = formatter(ngModel.$modelValue)\n\n      console.log(newValue)\n      $parse(attrs.ngModel).assign($scope, newValue);\n      ngModel.$viewValue = newValue;\n      ngModel.$render();\n\n    elem.bind('keyup', changeHandler)\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'orderByString', () ->\n  (array, property, reverse) ->\n    result = array.sort (object1, object2) ->\n      object1.localeCompare(object2) if angular.isUndefined(property)\n      object1[property].localeCompare(object2[property])\n\n    if reverse then result.reverse()\n    else result","'use strict';\n\nangular.module('oneImobiliaria')\n.filter 'phoneBr', () ->\n  (input) ->\n    return '' if not input?\n\n    if input.length == 10\n        return input.replace(/(\\d{2})(\\d{4})(\\d{4})/g,\"(\\$1) \\$2-\\$3\")\n    else\n        return input.replace(/(\\d{2})(\\d{5})(\\d{4})/g,\"(\\$1) \\$2-\\$3\")","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'range', () ->\n  (n) ->\n    res = []\n    res.push(i) for i in [1...(n + 1)] by 1\n    return res","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'typesToText', () ->\n  (types) ->\n\n    return 'Indefinido' unless types? and types.length > 0\n\n    items =\n      apart: 'Apartamento'\n      land: 'Tereno'\n      car: 'Carro'\n      house: 'Case'\n\n    for type in types\n      console.log(type)\n\n    return types","'use strict'\n\nangular.module('oneImobiliaria')\n.filter 'yesOrNo', () ->\n  (type) ->\n\n    if type then 'Sim'\n    else 'Não'","'use strict'\n\nangular.module('oneImobiliaria')\n.directive 'file', () ->\n  require: \"ngModel\"\n  restrict: 'A'\n  link: ($scope, elem, attrs, ngModel) ->\n\n    changeHandler = (event) ->\n      files = event.target.files\n      file = files[0]\n\n      ngModel.$setViewValue(file)\n      $scope.$apply()\n\n    elem.bind('change', changeHandler)","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'AccountCtrl', ['$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', ($scope, $rootScope, $loading, $logger, storage, UserService) ->\n\n  $scope.user = {}\n  $scope.edit = false\n\n  $loading.show()\n  UserService.getMyAccount()\n  .then (response) ->\n    $scope.user = response.data\n    $loading.hide()\n  .catch (response) ->\n    $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.')\n    $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.doUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    console.log($scope.user)\n    $loading.show()\n    UserService.update($scope.user)\n    .then (response) ->\n      $logger.success('Sua conta foi atualizada com sucesso!')\n      storage.updateToken(response.data.token)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao editar sua conta. Por favor, tente novamente.')\n      $loading.hide()\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'ClientsCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) ->\n\n  $scope.client = {}\n  $scope.clients = []\n\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    ClientService.get($stateParams.id)\n    .then (response) ->\n      $scope.client = response.data\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar clientes. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar clientes. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.client.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    ClientService.saveOrUpdate($scope.client)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.clients')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    client = $scope.clients[index]\n    return false if client._id == storage.getCode()\n\n    $loading.show()\n    ClientService.delete(client._id)\n    .then (response) ->\n      $logger.success('Cliente excluído com sucesso!')\n      $scope.clients.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir cliente. Por favor, tente novamente.')\n      $loading.hide()\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'LoginCtrl', ['$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', ($scope, $rootScope, $state, $logger, storage, UserService) ->\n\n  $scope.user = {}\n\n  $scope.doLogin = () ->\n    if !$rootScope.forms.login.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $scope.user.origin = 'admin'\n    UserService.doLogin($scope.user)\n    .then (response) ->\n      storage.setCodes(response.data)\n      $state.go('dashboard.home')\n    .catch (response) ->\n      $logger.error('Usuário e/ou senha inválido(s).')\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'PropertiesCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) ->\n\n  $scope.property =\n    payments: []\n    interest:\n      types: []\n      allMeters:  [10, 500]\n      allVacancies: [0, 10]\n      allFloors: [1, 30]\n      allValues: [1000, 5000000]\n      allIptus: [1000, 15000]\n      allCondominiums: [1000, 500000]\n      allLocations: [1000, 50000]\n\n#  $scope.property = {\n#    \"code\":\"123\",\n#    \"client\":\"585ecf5bd5af8351e3b894e3\",\n#    \"type\":\"apartament\",\n#    \"meters\":100,\n#    \"vacancy\":\"1\",\n#    \"floor\":\"2\",\n#    \"address\":{\n#      \"street\":\"Rua Simoes Delgado\",\n#      \"number\":\"15\",\n#      \"state\":\"SP\",\n#      \"city\":\"São Paulo\",\n#      \"neighborhood\":\"Jardim 9 de Julho\",\n#      \"cep\":\"03952020\"\n#    },\n#    \"hasSubway\":true,\n#    \"subwayStation\":\"Penha\",\n#    \"value\":1,\n#    \"condominium\":2,\n#    \"iptu\":3,\n#    \"location\":4,\n#    \"payments\": [\n#      \"financing\",\n#      \"money\",\n#      \"others\"\n#    ],\n#    \"exchange\":0.1,\n#    \"difference\":0.5,\n#    \"carValue\":5,\n#    \"settled\":true,\n#    \"car\":true\n#    interest:\n#      types: []\n#      allMeters:  [10, 500]\n#      allVacancies: [0, 10]\n#      allFloors: [1, 30]\n#      allValues: [1000, 5000000]\n#      allIptus: [1000, 15000]\n#      allCondominiums: [1000, 500000]\n#      allLocations: [1000, 50000]\n#  }\n\n  $scope.properties = []\n  $scope.cities = []\n  $scope.states = []\n  $scope.clients = []\n  cities = []\n\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    PropertyService.get($stateParams.id)\n    .then (response) ->\n      $scope.property = response.data\n      $scope.property.interest.allMeters = [52, 184]\n      $scope.property.interest.allVacancies = [1, 3]\n      $scope.property.interest.allFloors = [2, 10]\n      $scope.property.interest.allValues = [2222, 1000000]\n      $scope.property.interest.allIptus = [2222, 10000]\n      $scope.property.interest.allCondominiums = [2222, 10000]\n      $scope.property.interest.allLocations = [2222, 10000]\n      return LocationService.getAllStates()\n    .then (response) ->\n      $scope.states = response.data.sort()\n      return LocationService.getCitiesByState($scope.property.address.state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[$scope.property.address.state] = currentCities\n      return ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderByString')(response.data, 'name')\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    PropertyService.getAll()\n    .then (response) ->\n      $scope.properties = $filter('orderBy')(response.data, '-created')\n      return LocationService.getAllStates()\n    .then (response) ->\n      $scope.states = response.data.sort()\n      return ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderByString')(response.data, 'name')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.showCities = (state) ->\n\n    if cities[state]?\n      $scope.cities = cities[state]\n      return false\n\n    $loading.show()\n    LocationService.getCitiesByState(state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[state] = currentCities\n      $loading.hide()\n    .catch () ->\n      $loading.hide()\n\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.property.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n\n    convertData()\n    PropertyService.saveOrUpdate($scope.property)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.properties')\n    .catch (response) ->\n      if response.data.code == 8\n        $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.')\n      else\n        $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    property = $scope.properties[index]\n    return false if property._id == storage.getCode()\n\n    $loading.show()\n    PropertyService.delete(property._id)\n    .then (response) ->\n      $logger.success('Imóvel excluído com sucesso!')\n      $scope.properties.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doUploadCSV = () ->\n    console.log('Entrou....')\n    console.log($scope.csv)\n\n\n  convertData = () ->\n    console.log('Entrou...')\n    $scope.property.interest.meters =\n      min: $scope.property.interest.allMeters[0]\n      max: $scope.property.interest.allMeters[1]\n    delete $scope.property.interest.allMeters\n\n    $scope.property.interest.condominium =\n      min: $scope.property.interest.allCondominiums[0]\n      max: $scope.property.interest.allCondominiums[1]\n    delete $scope.property.interest.allCondominiums\n\n    $scope.property.interest.vacancy =\n      min: $scope.property.interest.allVacancies[0]\n      max: $scope.property.interest.allVacancies[1]\n    delete $scope.property.interest.allVacancies\n\n    $scope.property.interest.floor =\n      min: $scope.property.interest.allFloors[0]\n      max: $scope.property.interest.allFloors[1]\n    delete $scope.property.interest.allFloors\n\n    $scope.property.interest.value =\n      min: $scope.property.interest.allValues[0]\n      max: $scope.property.interest.allValues[1]\n    delete $scope.property.interest.allValues\n\n    $scope.property.interest.iptu =\n      min: $scope.property.interest.allIptus[0]\n      max: $scope.property.interest.allIptus[1]\n    delete $scope.property.interest.allIptus\n\n    $scope.property.interest.location =\n      min: $scope.property.interest.allLocations[0]\n      max: $scope.property.interest.allLocations[1]\n    delete $scope.property.interest.allLocations\n    console.log($scope.property.interest)\n\n]\n","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'UsersCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage','UserGroupService', 'UserService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) ->\n\n  $scope.user = {}\n  $scope.users = []\n\n  $scope.groups = UserGroupService.getAll()\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    UserService.get($stateParams.id)\n    .then (response) ->\n      $scope.user = response.data\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    UserService.getAll()\n    .then (response) ->\n      $scope.users = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    UserService.saveOrUpdate($scope.user)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.users')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    user = $scope.users[index]\n    return false if user._id == storage.getCode()\n\n    $loading.show()\n    UserService.delete(user._id)\n    .then (response) ->\n      $logger.success('Usuário excluído com sucesso!')\n      $scope.users.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n]"]}