{"version":3,"sources":["app.coffee","app.js","routes.coffee","client.coffee","loading.coffee","location.coffee","logger.coffee","property-type.coffee","property.coffee","session.coffee","storage.coffee","user-group.coffee","user.coffee","address.coffee","date-br.coffee","date-time-br.coffee","decimals.coffee","error-import.coffee","first-name.coffee","meters.coffee","order-by-string.coffee","phone-br.coffee","range.coffee","types-to-text.coffee","yes-or-no.coffee","confirm.coffee","file.coffee","account.coffee","clients.coffee","login.coffee","properties.coffee","search.coffee","users.coffee"],"names":["angular","module","run","$rootScope","$state","RESOURCES","storage","UserService","error","success","loading","fileUrl","API_URL","newProperties","page","name","showMenu","showSubmenu","appTitle","forms","doLogout","toggleMenu","toggleSubmenu","$on","current","split","group","getGroup","getName","photo","getPhoto","requiredLogin","isLogged","go","constant","config","$stateProvider","$httpProvider","$urlRouterProvider","state","url","views","main","templateUrl","controller","error@login","abstract","header","footer","main@","submenu@dashboard.users","error@dashboard.users","success@dashboard.users","loading@dashboard.users","submenu@dashboard.users.new","error@dashboard.users.new","loading@dashboard.users.new","submenu@dashboard.users.edit","error@dashboard.users.edit","loading@dashboard.users.edit","submenu@dashboard.clients","search@dashboard.clients","error@dashboard.clients","success@dashboard.clients","loading@dashboard.clients","error@dashboard.clients.new","loading@dashboard.clients.new","error@dashboard.clients.edit","submenu@dashboard.properties","search@dashboard.properties","error@dashboard.properties","success@dashboard.properties","loading@dashboard.properties","submenu@dashboard.properties.new","property@dashboard.properties.new","interest@dashboard.properties.new","error@dashboard.properties.new","loading@dashboard.properties.new","submenu@dashboard.properties.edit","property@dashboard.properties.edit","interest@dashboard.properties.edit","error@dashboard.properties.edit","loading@dashboard.properties.edit","submenu@dashboard.properties.confirm","error@dashboard.account","loading@dashboard.account","submenu@dashboard.search","submenu-filter@dashboard.search","filters-interest@dashboard.search","filters-property@dashboard.search","error@dashboard.search","loading@dashboard.search","otherwise","interceptors","push","defaults","useXDomain","headers","common","service","$http","apiUrl","create","client","post","update","put","_id","saveOrUpdate","this","getAll","get","id","delete","show","hide","getAllStates","getCitiesByState","clean","modalError","errorString","successString","items","title","code","$httpParamSerializer","property","search","query","console","log","importCsv","file","form","FormData","append","withCredentials","Content-Type","transformRequest","identity","$injector","isUnloggedPage","indexOf","request","getSessionToken","responseError","rejection","data","localStorage","getItem","setCodes","codes","setItem","token","type","setPhoto","updateToken","getCode","removeItem","$q","doLogin","user","savePhoto","q","defer","resolve","then","response","reject","promise","getMyAccount","filter","address","fullAddress","street","number","complement","input","date","moment","format","locale","calendar","sameElse","num","toString","replace","fields","names","meters","array","reverse","result","sort","object1","object2","isUndefined","localeCompare","length","PropertyTypeService","propertyType","map","item","n","i","j","ref","res","types","len","apart","land","car","house","UserGroupService","directive","priority","restrict","link","scope","element","attrs","message","ngConfirmClick","bind","e","confirm","stopImmediatePropagation","preventDefault","$parse","require","ngModel","$scope","elem","changeHandler","formatter","value","$formatters","$parsers","newValue","$modelValue","assign","$viewValue","$render","event","fileReader","files","target","FileReader","readAsDataURL","onload","thumbnail","$setViewValue","$apply","$loading","$logger","edit","fileName","canEdit","selectPhoto","doUpdate","$valid","$stateParams","$filter","ClientService","clients","doDelete","index","splice","login","origin","PropertyService","LocationService","cities","convertData","revertData","properties","states","currentCities","showCities","doTryAgain","errors","doRemoveCsv","doUploadCSV","content","redirect","ref1","ref2","ref3","ref4","ref5","ref6","ref7","interest","allMeters","allVacancies","allFloors","allValues","allIptus","allCondominiums","allLocations","min","max","condominium","vacancy","floor","iptu","location","toFixed","resetValues","showFilters","toggleFilters","doFilter","users","groups"],"mappings":"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","file":"app.min.js","sourcesContent":[null,"'use strict';\nangular.module('oneImobiliaria', ['ui.router', 'ui.utils.masks', 'ui.slider']).run([\n  '$rootScope', '$state', 'RESOURCES', 'storage', 'UserService', function($rootScope, $state, RESOURCES, storage, UserService) {\n    $rootScope.error = false;\n    $rootScope.success = false;\n    $rootScope.loading = false;\n    $rootScope.fileUrl = RESOURCES.API_URL + '/files/';\n    $rootScope.newProperties = {};\n    $rootScope.page = '';\n    $rootScope.name = '';\n    $rootScope.showMenu = false;\n    $rootScope.showSubmenu = false;\n    $rootScope.appTitle = 'One Consultoria Imobiliária';\n    $rootScope.forms = {};\n    $rootScope.doLogout = function() {\n      return UserService.doLogout();\n    };\n    $rootScope.toggleMenu = function() {\n      return $rootScope.showMenu = !$rootScope.showMenu;\n    };\n    $rootScope.toggleSubmenu = function() {\n      return $rootScope.showSubmenu = !$rootScope.showSubmenu;\n    };\n    return $rootScope.$on('$stateChangeSuccess', function() {\n      var page;\n      page = $state.current.name.split('.');\n      $rootScope.page = page[1] || '';\n      $rootScope.group = storage.getGroup();\n      $rootScope.name = storage.getName();\n      $rootScope.photo = storage.getPhoto();\n      $rootScope.error = false;\n      $rootScope.success = false;\n      $rootScope.loading = false;\n      $rootScope.showMenu = false;\n      $rootScope.showSubmenu = false;\n      if ($state.current.requiredLogin && !UserService.isLogged()) {\n        UserService.doLogout();\n      }\n      if (!$state.current.requiredLogin && UserService.isLogged()) {\n        $state.go('dashboard.home');\n      }\n      if ($rootScope.page === 'users' && $rootScope.group !== 'admin') {\n        return $state.go('dashboard.home');\n      }\n    });\n  }\n]).constant('RESOURCES', {\n  'API_URL': 'http://desenv.doisoitosete.com:3000/api'\n});\n\n'use strict';\nangular.module('oneImobiliaria').config([\n  '$stateProvider', '$httpProvider', '$urlRouterProvider', function($stateProvider, $httpProvider, $urlRouterProvider) {\n    $stateProvider.state('login', {\n      url: '/login',\n      views: {\n        main: {\n          templateUrl: 'app/views/login/index.html',\n          controller: 'LoginCtrl'\n        },\n        'error@login': {\n          templateUrl: 'app/views/error.html'\n        }\n      },\n      requiredLogin: false\n    }).state('dashboard', {\n      url: '/dashboard',\n      abstract: true,\n      views: {\n        main: {},\n        header: {\n          templateUrl: 'app/views/header.html'\n        },\n        footer: {\n          templateUrl: 'app/views/footer.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.home', {\n      url: '/home',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/home/index.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users', {\n      url: '/users',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/index.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users': {\n          templateUrl: 'app/views/users/submenu.html'\n        },\n        'error@dashboard.users': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.users': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.users': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users.new': {\n          templateUrl: 'app/views/users/form-submenu.html'\n        },\n        'error@dashboard.users.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users.edit': {\n          templateUrl: 'app/views/users/form-submenu.html'\n        },\n        'error@dashboard.users.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients', {\n      url: '/clients',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/index.html',\n          controller: 'ClientsCtrl'\n        },\n        'submenu@dashboard.clients': {\n          templateUrl: 'app/views/clients/submenu.html'\n        },\n        'search@dashboard.clients': {\n          templateUrl: 'app/views/clients/search.html'\n        },\n        'error@dashboard.clients': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.clients': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.clients': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.clients.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties', {\n      url: '/properties',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/index.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties': {\n          templateUrl: 'app/views/properties/submenu.html'\n        },\n        'search@dashboard.properties': {\n          templateUrl: 'app/views/properties/search.html'\n        },\n        'error@dashboard.properties': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.properties': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.properties': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.confirm', {\n      url: '/confirm',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/confirm.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.confirm': {\n          templateUrl: 'app/views/properties/confirm-submenu.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.account', {\n      url: '/account',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/account/form.html',\n          controller: 'AccountCtrl'\n        },\n        'error@dashboard.account': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.account': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.search', {\n      url: '/search',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/search/index.html',\n          controller: 'SearchCtrl'\n        },\n        'submenu@dashboard.search': {\n          templateUrl: 'app/views/search/submenu.html'\n        },\n        'submenu-filter@dashboard.search': {\n          templateUrl: 'app/views/search/submenu-filter.html'\n        },\n        'filters-interest@dashboard.search': {\n          templateUrl: 'app/views/search/filters-interest.html',\n          controller: 'AccountCtrl'\n        },\n        'filters-property@dashboard.search': {\n          templateUrl: 'app/views/search/filters-property.html',\n          controller: 'AccountCtrl'\n        },\n        'error@dashboard.search': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.search': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    });\n    $urlRouterProvider.otherwise('/login');\n    $httpProvider.interceptors.push('sessionInjector');\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json';\n    return delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('ClientService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/clients';\n    return {\n      create: function(client) {\n        return $http.post(apiUrl, client);\n      },\n      update: function(client) {\n        return $http.put(apiUrl + '/' + client._id, client);\n      },\n      saveOrUpdate: function(client) {\n        if (client._id) {\n          return this.update(client);\n        } else {\n          return this.create(client);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$loading', [\n  '$rootScope', function($rootScope) {\n    return {\n      show: function() {\n        return $rootScope.loading = true;\n      },\n      hide: function() {\n        return $rootScope.loading = false;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('LocationService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/cities';\n    return {\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      getAllStates: function() {\n        return $http.get(apiUrl + '/states');\n      },\n      getCitiesByState: function(state) {\n        return $http.get(apiUrl + '/states/' + state);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$logger', [\n  '$rootScope', function($rootScope) {\n    return {\n      clean: function() {\n        $rootScope.success = false;\n        $rootScope.error = false;\n        return $rootScope.modalError = false;\n      },\n      error: function(errorString) {\n        this.clean();\n        return $rootScope.error = errorString;\n      },\n      modalError: function(errorString) {\n        this.clean();\n        return $rootScope.modalError = errorString;\n      },\n      success: function(successString) {\n        this.clean();\n        return $rootScope.success = successString;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyTypeService', function() {\n  var items;\n  items = [\n    {\n      title: 'Apartamento',\n      code: 'apartament'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Terreno',\n      code: 'land'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Carro',\n      code: 'car'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyService', [\n  '$http', '$state', 'RESOURCES', '$httpParamSerializer', function($http, $state, RESOURCES, $httpParamSerializer) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/properties';\n    return {\n      create: function(property) {\n        return $http.post(apiUrl, property);\n      },\n      update: function(property) {\n        return $http.put(apiUrl + '/' + property._id, property);\n      },\n      saveOrUpdate: function(property) {\n        if (property._id) {\n          return this.update(property);\n        } else {\n          return this.create(property);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      },\n      search: function(query) {\n        console.log($httpParamSerializer(query));\n        return $http.get(apiUrl + '/search?' + $httpParamSerializer(query));\n      },\n      importCsv: function(file) {\n        var form;\n        form = new FormData();\n        form.append('csv', file);\n        return $http.post(apiUrl + '/import/csv', form, {\n          withCredentials: false,\n          headers: {\n            'Content-Type': void 0\n          },\n          transformRequest: angular.identity\n        });\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('sessionInjector', [\n  'storage', '$injector', function(storage, $injector) {\n    var isUnloggedPage;\n    isUnloggedPage = function(config) {\n      return config.url.indexOf('auth') > -1 || config.url.indexOf('remember') > -1;\n    };\n    return {\n      request: function(config) {\n        if (!isUnloggedPage(config)) {\n          config.headers['x-access-token'] = storage.getSessionToken();\n        }\n        return config;\n      },\n      responseError: function(rejection) {\n        if (rejection.data.error.name === 'TokenExpiredError') {\n          storage.clean();\n          $injector.get('$state').go('login');\n        }\n        return rejection;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('storage', function() {\n  return {\n    isLogged: function() {\n      return (localStorage.getItem('x-code-one') !== null) && (localStorage.getItem('code-one') !== null);\n    },\n    setCodes: function(codes) {\n      localStorage.setItem('x-code-one', codes.token);\n      localStorage.setItem('code-one', codes.code);\n      localStorage.setItem('group-one', codes.type);\n      localStorage.setItem('name-one', codes.name);\n      return localStorage.setItem('photo-one', codes.photo);\n    },\n    setPhoto: function(photo) {\n      return localStorage.setItem('photo-one', photo);\n    },\n    updateToken: function(token) {\n      return localStorage.setItem('x-code-one', token);\n    },\n    getSessionToken: function() {\n      return localStorage.getItem('x-code-one');\n    },\n    getCode: function() {\n      return localStorage.getItem('code-one');\n    },\n    getName: function() {\n      return localStorage.getItem('name-one') || '';\n    },\n    getGroup: function() {\n      return localStorage.getItem('group-one') || '';\n    },\n    getPhoto: function() {\n      if (localStorage.getItem('photo-one') === 'undefined') {\n        return false;\n      }\n      return localStorage.getItem('photo-one');\n    },\n    clean: function() {\n      localStorage.removeItem('x-code-one');\n      localStorage.removeItem('code-one');\n      localStorage.removeItem('group-one');\n      return localStorage.removeItem('name-one');\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserGroupService', function() {\n  var items;\n  items = [\n    {\n      title: 'Administrador(a)',\n      code: 'admin'\n    }, {\n      title: 'Corretor(a)',\n      code: 'broker'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserService', [\n  '$http', '$q', '$state', 'storage', 'RESOURCES', function($http, $q, $state, storage, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/accounts';\n    return {\n      isLogged: function() {\n        return storage.isLogged();\n      },\n      doLogin: function(user) {\n        return $http.post(apiUrl + '/auth', user);\n      },\n      doLogout: function() {\n        storage.clean();\n        $state.go('login');\n      },\n      create: function(user) {\n        return $http.post(apiUrl, user);\n      },\n      update: function(user) {\n        return $http.put(apiUrl + '/' + user._id, user);\n      },\n      savePhoto: function(photo) {\n        var file, q;\n        q = $q.defer();\n        if ((photo == null) || (photo.name == null)) {\n          q.resolve({\n            data: {\n              file: null\n            }\n          });\n        } else {\n          file = new FormData;\n          file.append('photo', photo);\n          $http.post(apiUrl + '/photo', file, {\n            withCredentials: false,\n            headers: {\n              'Content-Type': void 0\n            },\n            transformRequest: angular.identity\n          }).then(function(response) {\n            return q.resolve(response);\n          })[\"catch\"](function(error) {\n            return q.reject(error);\n          });\n        }\n        return q.promise;\n      },\n      saveOrUpdate: function(user) {\n        if (user._id) {\n          return this.update(user);\n        } else {\n          return this.create(user);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      getMyAccount: function() {\n        return $http.get(apiUrl + '/' + storage.getCode());\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('address', function() {\n  return function(address) {\n    var fullAddress;\n    if ((address == null) || ((address.street == null) && (address.number == null) && (address.complement == null))) {\n      return 'Indefinido';\n    }\n    fullAddress = '';\n    if (address.street != null) {\n      fullAddress += address.street;\n    }\n    if (address.number != null) {\n      fullAddress += ', ' + address.number;\n    }\n    if (address.complement != null) {\n      fullAddress += ' - ' + address.complement;\n    }\n    return fullAddress;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateBr', function() {\n  return function(input) {\n    var date;\n    if (input == null) {\n      return '';\n    }\n    date = input.split('T');\n    return moment(date[0]).format('DD/MM/YYYY');\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateTimeBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    moment.locale('pt-br');\n    return moment(input).calendar(null, {\n      sameElse: 'DD/MM/YYYY - H:mm'\n    });\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('decimals', function() {\n  return function(num) {\n    if (num == null) {\n      return '';\n    }\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('errorImport', function() {\n  return function(code, fields) {\n    var error;\n    error = '';\n    switch (code) {\n      case 1:\n        error = 'Este cliente já possui um imóvel cadastrado.';\n        break;\n      case 5:\n        error = 'Erro(s) no(s) campo(s) de cliente: ' + fields + '.';\n        break;\n      case 6:\n        error = 'Erro(s) no(s) campo(s) de imóvel: ' + fields + '.';\n        break;\n      default:\n        error = 'Erro ao salvar item. Por favor, verifique o dados inseridos na tabela.';\n    }\n    return error;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('firstName', function() {\n  return function(name) {\n    var names;\n    if ((name == null) || name === '') {\n      return '';\n    }\n    names = name.split(' ');\n    return names[0];\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('meters', function() {\n  return function(meters) {\n    if ((meters == null) || meters === '') {\n      meters = '0';\n    }\n    return meters + ' m²';\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('orderByString', function() {\n  return function(array, property, reverse) {\n    var result;\n    result = array.sort(function(object1, object2) {\n      if (angular.isUndefined(property)) {\n        object1.localeCompare(object2);\n      }\n      return object1[property].localeCompare(object2[property]);\n    });\n    if (reverse) {\n      return result.reverse();\n    } else {\n      return result;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('phoneBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    input = input.replace(/[^0-9]/g, \"\");\n    if (input.length < 11) {\n      return input.replace(/(\\d{2})(\\d{4})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    } else {\n      return input.replace(/(\\d{2})(\\d{5})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('propertyType', [\n  'PropertyTypeService', function(PropertyTypeService) {\n    return function(propertyType) {\n      var items, title;\n      if ((propertyType == null) || propertyType === '') {\n        return '';\n      }\n      items = PropertyTypeService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === propertyType) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('range', function() {\n  return function(n) {\n    var i, j, ref, res;\n    res = [];\n    for (i = j = 1, ref = n + 1; j < ref; i = j += 1) {\n      res.push(i);\n    }\n    return res;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('typesToText', function() {\n  return function(types) {\n    var i, items, len, type;\n    if (!((types != null) && types.length > 0)) {\n      return 'Indefinido';\n    }\n    items = {\n      apart: 'Apartamento',\n      land: 'Tereno',\n      car: 'Carro',\n      house: 'Case'\n    };\n    for (i = 0, len = types.length; i < len; i++) {\n      type = types[i];\n      console.log(type);\n    }\n    return types;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('groupName', [\n  'UserGroupService', function(UserGroupService) {\n    return function(group) {\n      var items, title;\n      if ((group == null) || group === '') {\n        return '';\n      }\n      items = UserGroupService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === group) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('yesOrNo', function() {\n  return function(type) {\n    if (type) {\n      return 'Sim';\n    } else {\n      return 'Não';\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('ngConfirmClick', function() {\n  return {\n    priority: -1,\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var message;\n      message = attrs.ngConfirmClick;\n      return element.bind('click', function(e) {\n        if ((message != null) && !confirm(message)) {\n          e.stopImmediatePropagation();\n          return e.preventDefault();\n        }\n      });\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('decimals', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        formatter = function(value) {\n          if (value == null) {\n            return '';\n          }\n          return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n        };\n        ngModel.$formatters.push(function(value) {\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return formatter(value);\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').directive('file', function() {\n  return {\n    require: \"ngModel\",\n    restrict: 'A',\n    link: function($scope, element, attrs, ngModel) {\n      var changeHandler;\n      changeHandler = function(event) {\n        var file, fileReader, files;\n        files = event.target.files;\n        file = files[0];\n        fileReader = new FileReader();\n        fileReader.readAsDataURL(file);\n        return fileReader.onload = function(e) {\n          file.thumbnail = e.target.result;\n          ngModel.$setViewValue(file);\n          return $scope.$apply();\n        };\n      };\n      element.bind('change', changeHandler);\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('meters', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        console.log(ngModel.$modelValue);\n        formatter = function(value) {\n          if (value == null) {\n            value = 0;\n          }\n          value = value.toString().replace('m²', '');\n          value = value.toString().replace(/\\D/g, '');\n          return value + 'm²';\n        };\n        ngModel.$formatters.push(function(value) {\n          console.log(value);\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return value.toString().replace('m²', '');\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          console.log(newValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('AccountCtrl', [\n  '$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', function($scope, $rootScope, $loading, $logger, storage, UserService) {\n    $scope.user = {};\n    $scope.edit = false;\n    $scope.file = {};\n    $scope.fileName = 'Selecione um arquivo';\n    $loading.show();\n    UserService.getMyAccount().then(function(response) {\n      $scope.user = response.data;\n      if ($scope.user.photo == null) {\n        $scope.user.photo = false;\n      }\n      return $loading.hide();\n    })[\"catch\"](function(response) {\n      $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.');\n      return $loading.hide();\n    });\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.selectPhoto = function() {\n      if ($scope.file.name == null) {\n        $scope.file = {};\n        $scope.fileName = 'Selecione um arquivo';\n        return false;\n      }\n      return $scope.fileName = $scope.file.name;\n    };\n    return $scope.doUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.savePhoto($scope.file).then(function(response) {\n        if (response.data.file != null) {\n          $scope.user.photo = response.data.file;\n          storage.setPhoto(response.data.file);\n        }\n        return UserService.update($scope.user);\n      }).then(function(response) {\n        $logger.success('Sua conta foi atualizada com sucesso!');\n        storage.updateToken(response.data.token);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        console.log(response);\n        $logger.error('Erro ao editar sua conta. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('ClientsCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) {\n    $scope.client = {};\n    $scope.clients = [];\n    $scope.search = {};\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      ClientService.get($stateParams.id).then(function(response) {\n        $scope.client = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      ClientService.getAll().then(function(response) {\n        $scope.clients = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.client.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return ClientService.saveOrUpdate($scope.client).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.clients');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var client;\n      client = $scope.clients[index];\n      if (client._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return ClientService[\"delete\"](client._id).then(function(response) {\n        $logger.success('Cliente excluído com sucesso!');\n        $scope.clients.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('LoginCtrl', [\n  '$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', function($scope, $rootScope, $state, $logger, storage, UserService) {\n    $scope.user = {};\n    return $scope.doLogin = function() {\n      if (!$rootScope.forms.login.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $scope.user.origin = 'admin';\n      return UserService.doLogin($scope.user).then(function(response) {\n        storage.setCodes(response.data);\n        return $state.go('dashboard.home');\n      })[\"catch\"](function(response) {\n        return $logger.error('Usuário e/ou senha inválido(s).');\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('PropertiesCtrl', [\n  '$scope', '$rootScope', '$q', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', function($scope, $rootScope, $q, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) {\n    var cities, convertData, revertData, saveOrUpdate;\n    $scope.properties = [];\n    $scope.cities = [];\n    $scope.states = [];\n    $scope.clients = [];\n    $scope.search = {};\n    cities = [];\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      PropertyService.get($stateParams.id).then(function(response) {\n        $scope.property = response.data;\n        convertData();\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return LocationService.getCitiesByState($scope.property.address.state);\n      }).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[$scope.property.address.state] = currentCities;\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      PropertyService.getAll().then(function(response) {\n        $scope.properties = $filter('orderBy')(response.data, '-created');\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.showCities = function(state) {\n      if (cities[state] != null) {\n        $scope.cities = cities[state];\n        return false;\n      }\n      $loading.show();\n      return LocationService.getCitiesByState(state).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[state] = currentCities;\n        return $loading.hide();\n      })[\"catch\"](function() {\n        return $loading.hide();\n      });\n    };\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.doTryAgain = function(index) {\n      var item, property;\n      item = $scope.newProperties.errors[index];\n      property = item.property;\n      property.client = item.client._id;\n      delete property._id;\n      $scope.property = property;\n      return saveOrUpdate(false).then(function() {\n        return $scope.newProperties.errors.splice(index, 1);\n      });\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.property.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      return saveOrUpdate(true);\n    };\n    $scope.doRemoveCsv = function(index) {\n      return $scope.newProperties.errors.splice(index, 1);\n    };\n    $scope.doDelete = function(index) {\n      var property;\n      property = $scope.properties[index];\n      if (property._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return PropertyService[\"delete\"](property._id).then(function(response) {\n        $logger.success('Imóvel excluído com sucesso!');\n        $scope.properties.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    $scope.doUploadCSV = function(file) {\n      if ((file == null) || file.type !== 'text/csv') {\n        $logger.error('Por favor, selecione um arquivo válido do tipo .csv');\n        return false;\n      }\n      $rootScope.newProperties = {};\n      $loading.show();\n      return PropertyService.importCsv(file).then(function(response) {\n        $scope.file = null;\n        $rootScope.newProperties = response.data.content;\n        $state.go('dashboard.properties.confirm');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $scope.file = {};\n        $logger.error('Erro ao importar dados. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    saveOrUpdate = function(redirect) {\n      var promise;\n      if ($scope.property == null) {\n        return false;\n      }\n      promise = $q.defer();\n      $loading.show();\n      revertData();\n      return PropertyService.saveOrUpdate($scope.property).then(function(response) {\n        $loading.hide();\n        promise.resolve();\n        if (redirect) {\n          return $state.go('dashboard.properties');\n        }\n      })[\"catch\"](function(response) {\n        promise.reject();\n        if (response.data.code === 8) {\n          $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.');\n        } else {\n          $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.');\n        }\n        return $loading.hide();\n      });\n    };\n    convertData = function() {\n      var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7;\n      $scope.property.interest.allMeters = [10, 500];\n      $scope.property.interest.allVacancies = [0, 10];\n      $scope.property.interest.allFloors = [1, 30];\n      $scope.property.interest.allValues = [1000, 5000000];\n      $scope.property.interest.allIptus = [1000, 15000];\n      $scope.property.interest.allCondominiums = [1000, 500000];\n      $scope.property.interest.allLocations = [1000, 50000];\n      if (((ref = $scope.property.interest) != null ? ref.types : void 0) != null) {\n        $scope.property.interest.types = [];\n      }\n      if (((ref1 = $scope.property.interest) != null ? ref1.meters : void 0) != null) {\n        $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min;\n        $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max;\n      }\n      if (((ref2 = $scope.property.interest) != null ? ref2.condominium : void 0) != null) {\n        $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min;\n        $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max;\n      }\n      if (((ref3 = $scope.property.interest) != null ? ref3.vacancy : void 0) != null) {\n        $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min;\n        $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max;\n      }\n      if (((ref4 = $scope.property.interest) != null ? ref4.floor : void 0) != null) {\n        $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min;\n        $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max;\n      }\n      if (((ref5 = $scope.property.interest) != null ? ref5.value : void 0) != null) {\n        $scope.property.interest.allValues[0] = $scope.property.interest.value.min;\n        $scope.property.interest.allValues[1] = $scope.property.interest.value.max;\n      }\n      if (((ref6 = $scope.property.interest) != null ? ref6.iptu : void 0) != null) {\n        $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min;\n        $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max;\n      }\n      if (((ref7 = $scope.property.interest) != null ? ref7.location : void 0) != null) {\n        $scope.property.interest.allLocations[0] = $scope.property.interest.location.min;\n        return $scope.property.interest.allLocations[1] = $scope.property.interest.location.max;\n      }\n    };\n    return revertData = function() {\n      $scope.property.value = $scope.property.value.toFixed(2);\n      $scope.property.condominium = $scope.property.condominium.toFixed(2);\n      $scope.property.location = $scope.property.location.toFixed(2);\n      $scope.property.iptu = $scope.property.iptu.toFixed(2);\n      if ($scope.property.interest.allMeters != null) {\n        $scope.property.interest.meters = {\n          min: $scope.property.interest.allMeters[0],\n          max: $scope.property.interest.allMeters[1]\n        };\n        delete $scope.property.interest.allMeters;\n      }\n      if ($scope.property.interest.allCondominiums != null) {\n        $scope.property.interest.condominium = {\n          min: $scope.property.interest.allCondominiums[0],\n          max: $scope.property.interest.allCondominiums[1]\n        };\n        delete $scope.property.interest.allCondominiums;\n      }\n      if ($scope.property.interest.allVacancies != null) {\n        $scope.property.interest.vacancy = {\n          min: $scope.property.interest.allVacancies[0],\n          max: $scope.property.interest.allVacancies[1]\n        };\n        delete $scope.property.interest.allVacancies;\n      }\n      if ($scope.property.interest.allFloors != null) {\n        $scope.property.interest.floor = {\n          min: $scope.property.interest.allFloors[0],\n          max: $scope.property.interest.allFloors[1]\n        };\n        delete $scope.property.interest.allFloors;\n      }\n      if ($scope.property.interest.allValues != null) {\n        $scope.property.interest.value = {\n          min: $scope.property.interest.allValues[0],\n          max: $scope.property.interest.allValues[1]\n        };\n        delete $scope.property.interest.allValues;\n      }\n      if ($scope.property.interest.allIptus != null) {\n        $scope.property.interest.iptu = {\n          min: $scope.property.interest.allIptus[0],\n          max: $scope.property.interest.allIptus[1]\n        };\n        delete $scope.property.interest.allIptus;\n      }\n      if ($scope.property.interest.allLocations != null) {\n        $scope.property.interest.location = {\n          min: $scope.property.interest.allLocations[0],\n          max: $scope.property.interest.allLocations[1]\n        };\n        return delete $scope.property.interest.allLocations;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('SearchCtrl', [\n  '$scope', '$rootScope', '$loading', '$logger', 'storage', 'PropertyService', function($scope, $rootScope, $loading, $logger, storage, PropertyService) {\n    var convertData, resetValues, revertData;\n    $scope.properties = [];\n    $scope.showFilters = false;\n    $scope.query = {\n      interest: {},\n      property: {}\n    };\n    resetValues = function() {\n      $scope.query.interest.allMeters = [10, 500];\n      $scope.query.interest.allVacancies = [0, 50];\n      $scope.query.interest.allFloors = [1, 30];\n      $scope.query.interest.allValues = [1000, 5000000];\n      $scope.query.interest.allIptus = [1000, 15000];\n      $scope.query.interest.allCondominiums = [1000, 500000];\n      $scope.query.interest.allLocations = [1000, 50000];\n      $scope.query.property.allMeters = [10, 500];\n      $scope.query.property.allVacancies = [0, 50];\n      $scope.query.property.allFloors = [1, 30];\n      $scope.query.property.allValues = [1000, 5000000];\n      $scope.query.property.allIptus = [1000, 15000];\n      $scope.query.property.allCondominiums = [1000, 500000];\n      return $scope.query.property.allLocations = [1000, 50000];\n    };\n    revertData = function() {\n      resetValues();\n      if ($scope.property.interest.types != null) {\n        $scope.property.interest.types = [];\n      }\n      if ($scope.property.interest.meters != null) {\n        $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min;\n        $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max;\n      }\n      if ($scope.property.interest.condominium != null) {\n        $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min;\n        $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max;\n      }\n      if ($scope.property.interest.vacancy != null) {\n        $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min;\n        $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max;\n      }\n      if ($scope.property.interest.floor != null) {\n        $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min;\n        $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max;\n      }\n      if ($scope.property.interest.value != null) {\n        $scope.property.interest.allValues[0] = $scope.property.interest.value.min;\n        $scope.property.interest.allValues[1] = $scope.property.interest.value.max;\n      }\n      if ($scope.property.interest.iptu != null) {\n        $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min;\n        $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max;\n      }\n      if ($scope.property.interest.location != null) {\n        $scope.property.interest.allLocations[0] = $scope.property.interest.location.min;\n        return $scope.property.interest.allLocations[1] = $scope.property.interest.location.max;\n      }\n    };\n    convertData = function() {\n      $scope.query.property.meters = {\n        min: $scope.query.property.allMeters[0],\n        max: $scope.query.property.allMeters[1]\n      };\n      delete $scope.query.property.allMeters;\n      $scope.query.property.condominium = {\n        min: $scope.query.property.allCondominiums[0],\n        max: $scope.query.property.allCondominiums[1]\n      };\n      delete $scope.query.property.allCondominiums;\n      $scope.query.property.vacancy = {\n        min: $scope.query.property.allVacancies[0],\n        max: $scope.query.property.allVacancies[1]\n      };\n      delete $scope.query.property.allVacancies;\n      $scope.query.property.floor = {\n        min: $scope.query.property.allFloors[0],\n        max: $scope.query.property.allFloors[1]\n      };\n      delete $scope.query.property.allFloors;\n      $scope.query.property.value = {\n        min: $scope.query.property.allValues[0],\n        max: $scope.query.property.allValues[1]\n      };\n      delete $scope.query.property.allValues;\n      $scope.query.property.iptu = {\n        min: $scope.query.property.allIptus[0],\n        max: $scope.query.property.allIptus[1]\n      };\n      delete $scope.query.property.allIptus;\n      $scope.query.property.location = {\n        min: $scope.query.property.allLocations[0],\n        max: $scope.query.property.allLocations[1]\n      };\n      delete $scope.query.property.allLocations;\n      $scope.query.interest.meters = {\n        min: $scope.query.interest.allMeters[0],\n        max: $scope.query.interest.allMeters[1]\n      };\n      delete $scope.query.interest.allMeters;\n      $scope.query.interest.condominium = {\n        min: $scope.query.interest.allCondominiums[0],\n        max: $scope.query.interest.allCondominiums[1]\n      };\n      delete $scope.query.interest.allCondominiums;\n      $scope.query.interest.vacancy = {\n        min: $scope.query.interest.allVacancies[0],\n        max: $scope.query.interest.allVacancies[1]\n      };\n      delete $scope.query.interest.allVacancies;\n      $scope.query.interest.floor = {\n        min: $scope.query.interest.allFloors[0],\n        max: $scope.query.interest.allFloors[1]\n      };\n      delete $scope.query.interest.allFloors;\n      $scope.query.interest.value = {\n        min: $scope.query.interest.allValues[0],\n        max: $scope.query.interest.allValues[1]\n      };\n      delete $scope.query.interest.allValues;\n      $scope.query.interest.iptu = {\n        min: $scope.query.interest.allIptus[0],\n        max: $scope.query.interest.allIptus[1]\n      };\n      delete $scope.query.interest.allIptus;\n      $scope.query.interest.location = {\n        min: $scope.query.interest.allLocations[0],\n        max: $scope.query.interest.allLocations[1]\n      };\n      return delete $scope.query.interest.allLocations;\n    };\n    resetValues();\n    $scope.toggleFilters = function() {\n      $scope.showFilters = !$scope.showFilters;\n      if (!$scope.showFilters) {\n        return resetValues();\n      }\n    };\n    return $scope.doFilter = function() {\n      $loading.show();\n      convertData();\n      return PropertyService.search($scope.query).then(function(response) {\n        console.log(response);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao efetuar busca. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('UsersCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'UserGroupService', 'UserService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) {\n    $scope.user = {};\n    $scope.users = [];\n    $scope.file = {};\n    $scope.fileName = 'Selecione um arquivo';\n    $scope.groups = UserGroupService.getAll();\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      UserService.get($stateParams.id).then(function(response) {\n        $scope.user = response.data;\n        if ($scope.user.photo == null) {\n          $scope.user.photo = false;\n        }\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      UserService.getAll().then(function(response) {\n        $scope.users = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.selectPhoto = function() {\n      if ($scope.file.name == null) {\n        $scope.file = {};\n        $scope.fileName = 'Selecione um arquivo';\n        return false;\n      }\n      return $scope.fileName = $scope.file.name;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.savePhoto($scope.file).then(function(response) {\n        if (response.data.file != null) {\n          $scope.user.photo = response.data.file;\n        }\n        return UserService.saveOrUpdate($scope.user);\n      }).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.users');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var user;\n      user = $scope.users[index];\n      if (user._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return UserService[\"delete\"](user._id).then(function(response) {\n        $logger.success('Usuário excluído com sucesso!');\n        $scope.users.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'AccountCtrl', ['$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', ($scope, $rootScope, $loading, $logger, storage, UserService) ->\n\n  $scope.user = {}\n  $scope.edit = false\n\n  $scope.file = {}\n  $scope.fileName = 'Selecione um arquivo'\n\n  $loading.show()\n  UserService.getMyAccount()\n  .then (response) ->\n    $scope.user = response.data\n    $scope.user.photo = false if not $scope.user.photo?\n    $loading.hide()\n  .catch (response) ->\n    $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.')\n    $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.selectPhoto = () ->\n    if not $scope.file.name?\n      $scope.file = {}\n      $scope.fileName = 'Selecione um arquivo'\n      return false\n\n    $scope.fileName = $scope.file.name\n\n  $scope.doUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    UserService.savePhoto($scope.file)\n    .then (response) ->\n      if response.data.file?\n        $scope.user.photo = response.data.file\n        storage.setPhoto(response.data.file)\n      return UserService.update($scope.user)\n    .then (response) ->\n      $logger.success('Sua conta foi atualizada com sucesso!')\n      storage.updateToken(response.data.token)\n      $loading.hide()\n    .catch (response) ->\n      console.log(response);\n      $logger.error('Erro ao editar sua conta. Por favor, tente novamente.')\n      $loading.hide()\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'ClientsCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) ->\n\n  $scope.client = {}\n  $scope.clients = []\n  $scope.search = {}\n\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    ClientService.get($stateParams.id)\n    .then (response) ->\n      $scope.client = response.data\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar clientes. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar clientes. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.client.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    ClientService.saveOrUpdate($scope.client)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.clients')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    client = $scope.clients[index]\n    return false if client._id == storage.getCode()\n\n    $loading.show()\n    ClientService.delete(client._id)\n    .then (response) ->\n      $logger.success('Cliente excluído com sucesso!')\n      $scope.clients.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir cliente. Por favor, tente novamente.')\n      $loading.hide()\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'LoginCtrl', ['$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', ($scope, $rootScope, $state, $logger, storage, UserService) ->\n\n  $scope.user = {}\n\n  $scope.doLogin = () ->\n    if !$rootScope.forms.login.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $scope.user.origin = 'admin'\n    UserService.doLogin($scope.user)\n    .then (response) ->\n      storage.setCodes(response.data)\n      $state.go('dashboard.home')\n    .catch (response) ->\n      $logger.error('Usuário e/ou senha inválido(s).')\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'PropertiesCtrl', ['$scope', '$rootScope', '$q', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', ($scope, $rootScope, $q, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) ->\n\n#  $scope.property =\n#    payments: []\n#    interest:\n#      types: []\n#      allMeters:  [10, 500]\n#      allVacancies: [0, 10]\n#      allFloors: [1, 30]\n#      allValues: [1000, 5000000]\n#      allIptus: [1000, 15000]\n#      allCondominiums: [1000, 500000]\n#      allLocations: [1000, 50000]\n\n#  $scope.property = {\n#    \"code\":\"123\",\n#    \"client\":\"585ecf5bd5af8351e3b894e3\",\n#    \"type\":\"apartament\",\n#    \"meters\":100,\n#    \"vacancy\":\"1\",\n#    \"floor\":\"2\",\n#    \"address\":{\n#      \"street\":\"Rua Simoes Delgado\",\n#      \"number\":\"15\",\n#      \"state\":\"SP\",\n#      \"city\":\"São Paulo\",\n#      \"neighborhood\":\"Jardim 9 de Julho\",\n#      \"cep\":\"03952020\"\n#    },\n#    \"hasSubway\":true,\n#    \"subwayStation\":\"Penha\",\n#    \"value\":1.00,\n#    \"condominium\":2.00,\n#    \"iptu\":3.00,\n#    \"location\":4.00,\n#    \"payments\": [\n#      \"financing\",\n#      \"money\",\n#      \"others\"\n#    ],\n#    \"exchange\":0.1,\n#    \"difference\":0.5,\n#    \"carValue\":5,\n#    \"settled\":true,\n#    \"car\":true\n#    interest:\n#      types: []\n#      allMeters:  [10, 500]\n#      allVacancies: [0, 10]\n#      allFloors: [1, 30]\n#      allValues: [1000, 5000000]\n#      allIptus: [1000, 15000]\n#      allCondominiums: [1000, 500000]\n#      allLocations: [1000, 50000]\n#  }\n\n  $scope.properties = []\n  $scope.cities = []\n  $scope.states = []\n  $scope.clients = []\n  $scope.search = {}\n  cities = []\n\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    PropertyService.get($stateParams.id)\n    .then (response) ->\n      $scope.property = response.data\n      convertData()\n      return LocationService.getAllStates()\n    .then (response) ->\n      $scope.states = response.data.sort()\n      return LocationService.getCitiesByState($scope.property.address.state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[$scope.property.address.state] = currentCities\n      return ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderByString')(response.data, 'name')\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    PropertyService.getAll()\n    .then (response) ->\n      $scope.properties = $filter('orderBy')(response.data, '-created')\n      return LocationService.getAllStates()\n    .then (response) ->\n      $scope.states = response.data.sort()\n      return ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderByString')(response.data, 'name')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.showCities = (state) ->\n\n    if cities[state]?\n      $scope.cities = cities[state]\n      return false\n\n    $loading.show()\n    LocationService.getCitiesByState(state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[state] = currentCities\n      $loading.hide()\n    .catch () ->\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.doTryAgain = (index) ->\n\n    item = $scope.newProperties.errors[index]\n    property = item.property\n    property.client = item.client._id\n    delete property._id\n\n    $scope.property = property\n\n    saveOrUpdate(false)\n    .then () ->\n      $scope.newProperties.errors.splice(index, 1)\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.property.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    saveOrUpdate(true)\n\n  $scope.doRemoveCsv = (index) ->\n    $scope.newProperties.errors.splice(index, 1)\n\n  $scope.doDelete = (index) ->\n    property = $scope.properties[index]\n    return false if property._id == storage.getCode()\n\n    $loading.show()\n    PropertyService.delete(property._id)\n    .then (response) ->\n      $logger.success('Imóvel excluído com sucesso!')\n      $scope.properties.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doUploadCSV = (file) ->\n    if not file? or file.type != 'text/csv'\n      $logger.error('Por favor, selecione um arquivo válido do tipo .csv')\n      return false\n\n    $rootScope.newProperties = {}\n\n    $loading.show()\n    PropertyService.importCsv(file)\n    .then (response) ->\n      $scope.file = null\n      $rootScope.newProperties = response.data.content\n      $state.go('dashboard.properties.confirm')\n      $loading.hide()\n    .catch (response) ->\n      $scope.file = {}\n      $logger.error('Erro ao importar dados. Por favor, tente novamente.')\n      $loading.hide()\n\n  saveOrUpdate = (redirect) ->\n    if not $scope.property?\n      return false\n\n    promise = $q.defer()\n    $loading.show()\n\n    revertData()\n    PropertyService.saveOrUpdate($scope.property)\n      .then (response) ->\n        $loading.hide()\n        promise.resolve()\n        $state.go('dashboard.properties') if redirect\n      .catch (response) ->\n        promise.reject()\n        if response.data.code == 8\n          $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.')\n        else\n          $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.')\n        $loading.hide()\n\n  convertData = () ->\n    $scope.property.interest.allMeters =  [10, 500]\n    $scope.property.interest.allVacancies = [0, 10]\n    $scope.property.interest.allFloors = [1, 30]\n    $scope.property.interest.allValues = [1000, 5000000]\n    $scope.property.interest.allIptus = [1000, 15000]\n    $scope.property.interest.allCondominiums = [1000, 500000]\n    $scope.property.interest.allLocations = [1000, 50000]\n\n    if $scope.property.interest?.types?\n      $scope.property.interest.types = []\n\n    if $scope.property.interest?.meters?\n      $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min\n      $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max\n\n    if $scope.property.interest?.condominium?\n      $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min\n      $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max\n\n    if $scope.property.interest?.vacancy?\n      $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min\n      $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max\n\n    if $scope.property.interest?.floor?\n      $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min\n      $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max\n\n    if $scope.property.interest?.value?\n      $scope.property.interest.allValues[0] = $scope.property.interest.value.min\n      $scope.property.interest.allValues[1] = $scope.property.interest.value.max\n\n    if $scope.property.interest?.iptu?\n      $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min\n      $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max\n\n    if $scope.property.interest?.location?\n      $scope.property.interest.allLocations[0] = $scope.property.interest.location.min\n      $scope.property.interest.allLocations[1] = $scope.property.interest.location.max\n\n\n  revertData = () ->\n    $scope.property.value = $scope.property.value.toFixed(2)\n    $scope.property.condominium = $scope.property.condominium.toFixed(2)\n    $scope.property.location = $scope.property.location.toFixed(2)\n    $scope.property.iptu = $scope.property.iptu.toFixed(2)\n\n    if $scope.property.interest.allMeters?\n      $scope.property.interest.meters =\n        min: $scope.property.interest.allMeters[0]\n        max: $scope.property.interest.allMeters[1]\n      delete $scope.property.interest.allMeters\n\n    if $scope.property.interest.allCondominiums?\n      $scope.property.interest.condominium =\n        min: $scope.property.interest.allCondominiums[0]\n        max: $scope.property.interest.allCondominiums[1]\n      delete $scope.property.interest.allCondominiums\n\n    if $scope.property.interest.allVacancies?\n      $scope.property.interest.vacancy =\n        min: $scope.property.interest.allVacancies[0]\n        max: $scope.property.interest.allVacancies[1]\n      delete $scope.property.interest.allVacancies\n\n    if $scope.property.interest.allFloors?\n      $scope.property.interest.floor =\n        min: $scope.property.interest.allFloors[0]\n        max: $scope.property.interest.allFloors[1]\n      delete $scope.property.interest.allFloors\n\n    if $scope.property.interest.allValues?\n      $scope.property.interest.value =\n        min: $scope.property.interest.allValues[0]\n        max: $scope.property.interest.allValues[1]\n      delete $scope.property.interest.allValues\n\n    if $scope.property.interest.allIptus?\n      $scope.property.interest.iptu =\n        min: $scope.property.interest.allIptus[0]\n        max: $scope.property.interest.allIptus[1]\n      delete $scope.property.interest.allIptus\n\n    if $scope.property.interest.allLocations?\n      $scope.property.interest.location =\n        min: $scope.property.interest.allLocations[0]\n        max: $scope.property.interest.allLocations[1]\n      delete $scope.property.interest.allLocations\n]\n","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'SearchCtrl', ['$scope', '$rootScope', '$loading', '$logger', 'storage', 'PropertyService', ($scope, $rootScope, $loading, $logger, storage, PropertyService) ->\n\n  $scope.properties = []\n  $scope.showFilters = false\n\n  $scope.query =\n    interest: {}\n    property: {}\n\n  resetValues = () ->\n    $scope.query.interest.allMeters =  [10, 500]\n    $scope.query.interest.allVacancies = [0, 50]\n    $scope.query.interest.allFloors = [1, 30]\n    $scope.query.interest.allValues = [1000, 5000000]\n    $scope.query.interest.allIptus = [1000, 15000]\n    $scope.query.interest.allCondominiums = [1000, 500000]\n    $scope.query.interest.allLocations = [1000, 50000]\n\n    $scope.query.property.allMeters =  [10, 500]\n    $scope.query.property.allVacancies = [0, 50]\n    $scope.query.property.allFloors = [1, 30]\n    $scope.query.property.allValues = [1000, 5000000]\n    $scope.query.property.allIptus = [1000, 15000]\n    $scope.query.property.allCondominiums = [1000, 500000]\n    $scope.query.property.allLocations = [1000, 50000]\n\n  revertData = () ->\n    resetValues()\n\n    if $scope.property.interest.types?\n      $scope.property.interest.types = []\n\n    if $scope.property.interest.meters?\n      $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min\n      $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max\n\n    if $scope.property.interest.condominium?\n      $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min\n      $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max\n\n    if $scope.property.interest.vacancy?\n      $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min\n      $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max\n\n    if $scope.property.interest.floor?\n      $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min\n      $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max\n\n    if $scope.property.interest.value?\n      $scope.property.interest.allValues[0] = $scope.property.interest.value.min\n      $scope.property.interest.allValues[1] = $scope.property.interest.value.max\n\n    if $scope.property.interest.iptu?\n      $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min\n      $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max\n\n    if $scope.property.interest.location?\n      $scope.property.interest.allLocations[0] = $scope.property.interest.location.min\n      $scope.property.interest.allLocations[1] = $scope.property.interest.location.max\n\n  convertData = () ->\n    $scope.query.property.meters =\n      min: $scope.query.property.allMeters[0]\n      max: $scope.query.property.allMeters[1]\n    delete $scope.query.property.allMeters\n\n    $scope.query.property.condominium =\n      min: $scope.query.property.allCondominiums[0]\n      max: $scope.query.property.allCondominiums[1]\n    delete $scope.query.property.allCondominiums\n\n    $scope.query.property.vacancy =\n      min: $scope.query.property.allVacancies[0]\n      max: $scope.query.property.allVacancies[1]\n    delete $scope.query.property.allVacancies\n\n    $scope.query.property.floor =\n      min: $scope.query.property.allFloors[0]\n      max: $scope.query.property.allFloors[1]\n    delete $scope.query.property.allFloors\n\n    $scope.query.property.value =\n      min: $scope.query.property.allValues[0]\n      max: $scope.query.property.allValues[1]\n    delete $scope.query.property.allValues\n\n    $scope.query.property.iptu =\n      min: $scope.query.property.allIptus[0]\n      max: $scope.query.property.allIptus[1]\n    delete $scope.query.property.allIptus\n\n    $scope.query.property.location =\n      min: $scope.query.property.allLocations[0]\n      max: $scope.query.property.allLocations[1]\n    delete $scope.query.property.allLocations\n\n    $scope.query.interest.meters =\n      min: $scope.query.interest.allMeters[0]\n      max: $scope.query.interest.allMeters[1]\n    delete $scope.query.interest.allMeters\n\n    $scope.query.interest.condominium =\n      min: $scope.query.interest.allCondominiums[0]\n      max: $scope.query.interest.allCondominiums[1]\n    delete $scope.query.interest.allCondominiums\n\n    $scope.query.interest.vacancy =\n      min: $scope.query.interest.allVacancies[0]\n      max: $scope.query.interest.allVacancies[1]\n    delete $scope.query.interest.allVacancies\n\n    $scope.query.interest.floor =\n      min: $scope.query.interest.allFloors[0]\n      max: $scope.query.interest.allFloors[1]\n    delete $scope.query.interest.allFloors\n\n    $scope.query.interest.value =\n      min: $scope.query.interest.allValues[0]\n      max: $scope.query.interest.allValues[1]\n    delete $scope.query.interest.allValues\n\n    $scope.query.interest.iptu =\n      min: $scope.query.interest.allIptus[0]\n      max: $scope.query.interest.allIptus[1]\n    delete $scope.query.interest.allIptus\n\n    $scope.query.interest.location =\n      min: $scope.query.interest.allLocations[0]\n      max: $scope.query.interest.allLocations[1]\n    delete $scope.query.interest.allLocations\n\n  resetValues()\n\n  $scope.toggleFilters = () ->\n    $scope.showFilters = !$scope.showFilters\n    resetValues() if !$scope.showFilters\n\n  $scope.doFilter = () ->\n\n    $loading.show()\n    convertData()\n    PropertyService.search($scope.query)\n    .then (response) ->\n      console.log(response);\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao efetuar busca. Por favor, tente novamente.')\n      $loading.hide()\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'UsersCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage','UserGroupService', 'UserService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) ->\n\n  $scope.user = {}\n  $scope.users = []\n\n  $scope.file = {}\n  $scope.fileName = 'Selecione um arquivo'\n\n  $scope.groups = UserGroupService.getAll()\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    UserService.get($stateParams.id)\n    .then (response) ->\n      $scope.user = response.data\n      $scope.user.photo = false if not $scope.user.photo?\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    UserService.getAll()\n    .then (response) ->\n      $scope.users = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.selectPhoto = () ->\n    if not $scope.file.name?\n      $scope.file = {}\n      $scope.fileName = 'Selecione um arquivo'\n      return false\n\n    $scope.fileName = $scope.file.name\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    UserService.savePhoto($scope.file)\n    .then (response) ->\n      $scope.user.photo = response.data.file if response.data.file?\n      return UserService.saveOrUpdate($scope.user)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.users')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n\n  $scope.doDelete = (index) ->\n\n    user = $scope.users[index]\n    return false if user._id == storage.getCode()\n\n    $loading.show()\n    UserService.delete(user._id)\n    .then (response) ->\n      $logger.success('Usuário excluído com sucesso!')\n      $scope.users.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n]"]}