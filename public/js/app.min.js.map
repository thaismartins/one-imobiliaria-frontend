{"version":3,"sources":["app.coffee","app.js","routes.coffee","client.coffee","loading.coffee","location.coffee","logger.coffee","property-type.coffee","property.coffee","session.coffee","storage.coffee","user-group.coffee","user.coffee","address.coffee","date-br.coffee","date-time-br.coffee","decimals.coffee","error-import.coffee","first-name.coffee","meters.coffee","order-by-string.coffee","phone-br.coffee","range.coffee","types-to-text.coffee","yes-or-no.coffee","file.coffee","account.coffee","clients.coffee","login.coffee","properties.coffee","search.coffee","users.coffee"],"names":["angular","module","run","$rootScope","$state","RESOURCES","storage","UserService","error","success","loading","fileUrl","API_URL","newProperties","page","name","showMenu","showSubmenu","appTitle","forms","doLogout","toggleMenu","toggleSubmenu","$on","current","split","group","getGroup","getName","requiredLogin","isLogged","go","constant","config","$stateProvider","$httpProvider","$urlRouterProvider","state","url","views","main","templateUrl","controller","error@login","abstract","header","footer","main@","submenu@dashboard.users","error@dashboard.users","success@dashboard.users","loading@dashboard.users","error@dashboard.users.new","loading@dashboard.users.new","error@dashboard.users.edit","loading@dashboard.users.edit","submenu@dashboard.clients","error@dashboard.clients","success@dashboard.clients","loading@dashboard.clients","error@dashboard.clients.new","loading@dashboard.clients.new","error@dashboard.clients.edit","submenu@dashboard.properties","search@dashboard.properties","error@dashboard.properties","success@dashboard.properties","loading@dashboard.properties","submenu@dashboard.properties.new","property@dashboard.properties.new","interest@dashboard.properties.new","error@dashboard.properties.new","loading@dashboard.properties.new","submenu@dashboard.properties.edit","property@dashboard.properties.edit","interest@dashboard.properties.edit","error@dashboard.properties.edit","loading@dashboard.properties.edit","submenu@dashboard.properties.confirm","error@dashboard.account","loading@dashboard.account","submenu@dashboard.search","submenu-filter@dashboard.search","filters-interest@dashboard.search","filters-property@dashboard.search","error@dashboard.search","loading@dashboard.search","otherwise","interceptors","push","defaults","useXDomain","headers","common","service","$http","apiUrl","create","client","post","update","put","_id","saveOrUpdate","this","getAll","get","id","delete","show","hide","getAllStates","getCitiesByState","clean","modalError","errorString","successString","items","title","code","$httpParamSerializer","property","search","query","console","log","importCsv","file","form","FormData","append","withCredentials","Content-Type","transformRequest","identity","isUnloggedPage","indexOf","request","getSessionToken","localStorage","getItem","setCodes","codes","setItem","token","type","updateToken","getCode","removeItem","doLogin","user","getMyAccount","filter","address","fullAddress","street","number","complement","input","date","moment","format","locale","calendar","sameElse","num","toString","replace","fields","names","meters","array","reverse","result","sort","object1","object2","isUndefined","localeCompare","length","PropertyTypeService","propertyType","map","item","n","i","j","ref","res","types","len","apart","land","car","house","UserGroupService","directive","$parse","require","scope","ngModel","restrict","link","$scope","elem","attrs","changeHandler","formatter","value","$formatters","$parsers","newValue","$modelValue","assign","$viewValue","$render","bind","$timeout","fn","event","files","target","$file","$event","$loading","$logger","edit","then","response","data","canEdit","doUpdate","$valid","$stateParams","$filter","ClientService","clients","doDelete","index","splice","login","origin","$q","PropertyService","LocationService","cities","convertData","revertData","properties","states","currentCities","showCities","doTryAgain","errors","doRemoveCsv","doUploadCSV","content","redirect","promise","defer","resolve","reject","ref1","ref2","ref3","ref4","ref5","ref6","ref7","interest","allMeters","allVacancies","allFloors","allValues","allIptus","allCondominiums","allLocations","min","max","condominium","vacancy","floor","iptu","location","toFixed","resetValues","showFilters","toggleFilters","doFilter","users","groups"],"mappings":"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","file":"app.min.js","sourcesContent":[null,"'use strict';\nangular.module('oneImobiliaria', ['ui.router', 'ui.utils.masks', 'ui.slider']).run([\n  '$rootScope', '$state', 'RESOURCES', 'storage', 'UserService', function($rootScope, $state, RESOURCES, storage, UserService) {\n    $rootScope.error = false;\n    $rootScope.success = false;\n    $rootScope.loading = false;\n    $rootScope.fileUrl = RESOURCES.API_URL + '/';\n    $rootScope.newProperties = {};\n    $rootScope.page = '';\n    $rootScope.name = '';\n    $rootScope.showMenu = false;\n    $rootScope.showSubmenu = false;\n    $rootScope.appTitle = 'One Consultoria Imobiliária';\n    $rootScope.forms = {};\n    $rootScope.doLogout = function() {\n      return UserService.doLogout();\n    };\n    $rootScope.toggleMenu = function() {\n      return $rootScope.showMenu = !$rootScope.showMenu;\n    };\n    $rootScope.toggleSubmenu = function() {\n      return $rootScope.showSubmenu = !$rootScope.showSubmenu;\n    };\n    return $rootScope.$on('$stateChangeSuccess', function() {\n      var page;\n      page = $state.current.name.split('.');\n      $rootScope.page = page[1] || '';\n      $rootScope.group = storage.getGroup();\n      $rootScope.name = storage.getName();\n      $rootScope.error = false;\n      $rootScope.success = false;\n      $rootScope.loading = false;\n      $rootScope.showMenu = false;\n      $rootScope.showSubmenu = false;\n      if ($state.current.requiredLogin && !UserService.isLogged()) {\n        UserService.doLogout();\n      }\n      if (!$state.current.requiredLogin && UserService.isLogged()) {\n        $state.go('dashboard.home');\n      }\n      if ($rootScope.page === 'users' && $rootScope.group !== 'admin') {\n        return $state.go('dashboard.home');\n      }\n    });\n  }\n]).constant('RESOURCES', {\n  'API_URL': 'http://desenv.doisoitosete.com:3000/api'\n});\n\n'use strict';\nangular.module('oneImobiliaria').config([\n  '$stateProvider', '$httpProvider', '$urlRouterProvider', function($stateProvider, $httpProvider, $urlRouterProvider) {\n    $stateProvider.state('login', {\n      url: '/login',\n      views: {\n        main: {\n          templateUrl: 'app/views/login/index.html',\n          controller: 'LoginCtrl'\n        },\n        'error@login': {\n          templateUrl: 'app/views/error.html'\n        }\n      },\n      requiredLogin: false\n    }).state('dashboard', {\n      url: '/dashboard',\n      abstract: true,\n      views: {\n        main: {},\n        header: {\n          templateUrl: 'app/views/header.html'\n        },\n        footer: {\n          templateUrl: 'app/views/footer.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.home', {\n      url: '/home',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/home/index.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users', {\n      url: '/users',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/index.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users': {\n          templateUrl: 'app/views/users/submenu.html'\n        },\n        'error@dashboard.users': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.users': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.users': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'error@dashboard.users.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'error@dashboard.users.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients', {\n      url: '/clients',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/index.html',\n          controller: 'ClientsCtrl'\n        },\n        'submenu@dashboard.clients': {\n          templateUrl: 'app/views/clients/submenu.html'\n        },\n        'error@dashboard.clients': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.clients': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.clients': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.clients.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties', {\n      url: '/properties',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/index.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties': {\n          templateUrl: 'app/views/properties/submenu.html'\n        },\n        'search@dashboard.properties': {\n          templateUrl: 'app/views/properties/search.html'\n        },\n        'error@dashboard.properties': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.properties': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.properties': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.confirm', {\n      url: '/confirm',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/confirm.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.confirm': {\n          templateUrl: 'app/views/properties/confirm-submenu.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.account', {\n      url: '/account',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/account/form.html',\n          controller: 'AccountCtrl'\n        },\n        'error@dashboard.account': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.account': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.search', {\n      url: '/search',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/search/index.html',\n          controller: 'SearchCtrl'\n        },\n        'submenu@dashboard.search': {\n          templateUrl: 'app/views/search/submenu.html'\n        },\n        'submenu-filter@dashboard.search': {\n          templateUrl: 'app/views/search/submenu-filter.html'\n        },\n        'filters-interest@dashboard.search': {\n          templateUrl: 'app/views/search/filters-interest.html',\n          controller: 'AccountCtrl'\n        },\n        'filters-property@dashboard.search': {\n          templateUrl: 'app/views/search/filters-property.html',\n          controller: 'AccountCtrl'\n        },\n        'error@dashboard.search': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.search': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    });\n    $urlRouterProvider.otherwise('/login');\n    $httpProvider.interceptors.push('sessionInjector');\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json';\n    return delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('ClientService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/clients';\n    return {\n      create: function(client) {\n        return $http.post(apiUrl, client);\n      },\n      update: function(client) {\n        return $http.put(apiUrl + '/' + client._id, client);\n      },\n      saveOrUpdate: function(client) {\n        if (client._id) {\n          return this.update(client);\n        } else {\n          return this.create(client);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$loading', [\n  '$rootScope', function($rootScope) {\n    return {\n      show: function() {\n        return $rootScope.loading = true;\n      },\n      hide: function() {\n        return $rootScope.loading = false;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('LocationService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/cities';\n    return {\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      getAllStates: function() {\n        return $http.get(apiUrl + '/states');\n      },\n      getCitiesByState: function(state) {\n        return $http.get(apiUrl + '/states/' + state);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$logger', [\n  '$rootScope', function($rootScope) {\n    return {\n      clean: function() {\n        $rootScope.success = false;\n        $rootScope.error = false;\n        return $rootScope.modalError = false;\n      },\n      error: function(errorString) {\n        this.clean();\n        return $rootScope.error = errorString;\n      },\n      modalError: function(errorString) {\n        this.clean();\n        return $rootScope.modalError = errorString;\n      },\n      success: function(successString) {\n        this.clean();\n        return $rootScope.success = successString;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyTypeService', function() {\n  var items;\n  items = [\n    {\n      title: 'Apartamento',\n      code: 'apartament'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Terreno',\n      code: 'land'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Carro',\n      code: 'car'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyService', [\n  '$http', '$state', 'RESOURCES', '$httpParamSerializer', function($http, $state, RESOURCES, $httpParamSerializer) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/properties';\n    return {\n      create: function(property) {\n        return $http.post(apiUrl, property);\n      },\n      update: function(property) {\n        return $http.put(apiUrl + '/' + property._id, property);\n      },\n      saveOrUpdate: function(property) {\n        if (property._id) {\n          return this.update(property);\n        } else {\n          return this.create(property);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      },\n      search: function(query) {\n        console.log($httpParamSerializer(query));\n        return $http.get(apiUrl + '/search?' + $httpParamSerializer(query));\n      },\n      importCsv: function(file) {\n        var form;\n        form = new FormData();\n        form.append('csv', file);\n        return $http.post(apiUrl + '/import/csv', form, {\n          withCredentials: false,\n          headers: {\n            'Content-Type': void 0\n          },\n          transformRequest: angular.identity\n        });\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('sessionInjector', [\n  'storage', function(storage) {\n    var isUnloggedPage;\n    isUnloggedPage = function(config) {\n      return config.url.indexOf('auth') > -1 || config.url.indexOf('remember') > -1;\n    };\n    return {\n      request: function(config) {\n        if (!isUnloggedPage(config)) {\n          config.headers['x-access-token'] = storage.getSessionToken();\n        }\n        return config;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('storage', function() {\n  return {\n    isLogged: function() {\n      return (localStorage.getItem('x-code-one') !== null) && (localStorage.getItem('code-one') !== null);\n    },\n    setCodes: function(codes) {\n      localStorage.setItem('x-code-one', codes.token);\n      localStorage.setItem('code-one', codes.code);\n      localStorage.setItem('group-one', codes.type);\n      return localStorage.setItem('name-one', codes.name);\n    },\n    updateToken: function(token) {\n      return localStorage.setItem('x-code-one', token);\n    },\n    getSessionToken: function() {\n      return localStorage.getItem('x-code-one');\n    },\n    getCode: function() {\n      return localStorage.getItem('code-one');\n    },\n    getName: function() {\n      return localStorage.getItem('name-one') || '';\n    },\n    getGroup: function() {\n      return localStorage.getItem('group-one') || '';\n    },\n    clean: function() {\n      localStorage.removeItem('x-code-one');\n      localStorage.removeItem('code-one');\n      localStorage.removeItem('group-one');\n      return localStorage.removeItem('name-one');\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserGroupService', function() {\n  var items;\n  items = [\n    {\n      title: 'Administrador(a)',\n      code: 'admin'\n    }, {\n      title: 'Corretor(a)',\n      code: 'broker'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserService', [\n  '$http', '$state', 'storage', 'RESOURCES', function($http, $state, storage, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/accounts';\n    return {\n      isLogged: function() {\n        return storage.isLogged();\n      },\n      doLogin: function(user) {\n        return $http.post(apiUrl + '/auth', user);\n      },\n      doLogout: function() {\n        storage.clean();\n        $state.go('login');\n      },\n      create: function(user) {\n        return $http.post(apiUrl, user);\n      },\n      update: function(user) {\n        return $http.put(apiUrl + '/' + user._id, user);\n      },\n      saveOrUpdate: function(user) {\n        if (user._id) {\n          return this.update(user);\n        } else {\n          return this.create(user);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      getMyAccount: function() {\n        return $http.get(apiUrl + '/' + storage.getCode());\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('address', function() {\n  return function(address) {\n    var fullAddress;\n    if ((address == null) || ((address.street == null) && (address.number == null) && (address.complement == null))) {\n      return 'Indefinido';\n    }\n    fullAddress = '';\n    if (address.street != null) {\n      fullAddress += address.street;\n    }\n    if (address.number != null) {\n      fullAddress += ', ' + address.number;\n    }\n    if (address.complement != null) {\n      fullAddress += ' - ' + address.complement;\n    }\n    return fullAddress;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateBr', function() {\n  return function(input) {\n    var date;\n    if (input == null) {\n      return '';\n    }\n    date = input.split('T');\n    return moment(date[0]).format('DD/MM/YYYY');\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateTimeBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    moment.locale('pt-br');\n    return moment(input).calendar(null, {\n      sameElse: 'DD/MM/YYYY - H:mm'\n    });\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('decimals', function() {\n  return function(num) {\n    if (num == null) {\n      return '';\n    }\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('errorImport', function() {\n  return function(code, fields) {\n    var error;\n    error = '';\n    switch (code) {\n      case 1:\n        error = 'Este cliente já possui um imóvel cadastrado.';\n        break;\n      case 5:\n        error = 'Erro(s) no(s) campo(s) de cliente: ' + fields + '.';\n        break;\n      case 6:\n        error = 'Erro(s) no(s) campo(s) de imóvel: ' + fields + '.';\n        break;\n      default:\n        error = 'Erro ao salvar item. Por favor, verifique o dados inseridos na tabela.';\n    }\n    return error;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('firstName', function() {\n  return function(name) {\n    var names;\n    if ((name == null) || name === '') {\n      return '';\n    }\n    names = name.split(' ');\n    return names[0];\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('meters', function() {\n  return function(meters) {\n    if ((meters == null) || meters === '') {\n      meters = '0';\n    }\n    return meters + ' m²';\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('orderByString', function() {\n  return function(array, property, reverse) {\n    var result;\n    result = array.sort(function(object1, object2) {\n      if (angular.isUndefined(property)) {\n        object1.localeCompare(object2);\n      }\n      return object1[property].localeCompare(object2[property]);\n    });\n    if (reverse) {\n      return result.reverse();\n    } else {\n      return result;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('phoneBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    if (input.length === 10) {\n      return input.replace(/(\\d{2})(\\d{4})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    } else {\n      return input.replace(/(\\d{2})(\\d{5})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('propertyType', [\n  'PropertyTypeService', function(PropertyTypeService) {\n    return function(propertyType) {\n      var items, title;\n      if ((propertyType == null) || propertyType === '') {\n        return '';\n      }\n      items = PropertyTypeService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === propertyType) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('range', function() {\n  return function(n) {\n    var i, j, ref, res;\n    res = [];\n    for (i = j = 1, ref = n + 1; j < ref; i = j += 1) {\n      res.push(i);\n    }\n    return res;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('typesToText', function() {\n  return function(types) {\n    var i, items, len, type;\n    if (!((types != null) && types.length > 0)) {\n      return 'Indefinido';\n    }\n    items = {\n      apart: 'Apartamento',\n      land: 'Tereno',\n      car: 'Carro',\n      house: 'Case'\n    };\n    for (i = 0, len = types.length; i < len; i++) {\n      type = types[i];\n      console.log(type);\n    }\n    return types;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('groupName', [\n  'UserGroupService', function(UserGroupService) {\n    return function(group) {\n      var items, title;\n      if ((group == null) || group === '') {\n        return '';\n      }\n      items = UserGroupService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === group) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('yesOrNo', function() {\n  return function(type) {\n    if (type) {\n      return 'Sim';\n    } else {\n      return 'Não';\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('decimals', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        formatter = function(value) {\n          if (value == null) {\n            return '';\n          }\n          return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n        };\n        ngModel.$formatters.push(function(value) {\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return formatter(value);\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').directive('file', [\n  '$parse', '$timeout', function($parse, $timeout) {\n    return {\n      require: \"ngModel\",\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, fn;\n        fn = $parse(attrs['ngFileSelected']);\n        changeHandler = function(event) {\n          var file, files;\n          files = event.target.files;\n          file = files[0];\n          return $timeout(function() {\n            return fn($scope, {\n              $file: file,\n              $event: event\n            });\n          });\n        };\n        return elem.bind('change', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').directive('meters', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        console.log(ngModel.$modelValue);\n        formatter = function(value) {\n          if (value == null) {\n            value = 0;\n          }\n          value = value.toString().replace('m²', '');\n          value = value.toString().replace(/\\D/g, '');\n          return value + 'm²';\n        };\n        ngModel.$formatters.push(function(value) {\n          console.log(value);\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return value.toString().replace('m²', '');\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          console.log(newValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('AccountCtrl', [\n  '$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', function($scope, $rootScope, $loading, $logger, storage, UserService) {\n    $scope.user = {};\n    $scope.edit = false;\n    $loading.show();\n    UserService.getMyAccount().then(function(response) {\n      $scope.user = response.data;\n      return $loading.hide();\n    })[\"catch\"](function(response) {\n      $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.');\n      return $loading.hide();\n    });\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    return $scope.doUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.update($scope.user).then(function(response) {\n        $logger.success('Sua conta foi atualizada com sucesso!');\n        storage.updateToken(response.data.token);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao editar sua conta. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('ClientsCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) {\n    $scope.client = {};\n    $scope.clients = [];\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      ClientService.get($stateParams.id).then(function(response) {\n        $scope.client = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      ClientService.getAll().then(function(response) {\n        $scope.clients = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.client.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return ClientService.saveOrUpdate($scope.client).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.clients');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var client;\n      client = $scope.clients[index];\n      if (client._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return ClientService[\"delete\"](client._id).then(function(response) {\n        $logger.success('Cliente excluído com sucesso!');\n        $scope.clients.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('LoginCtrl', [\n  '$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', function($scope, $rootScope, $state, $logger, storage, UserService) {\n    $scope.user = {};\n    return $scope.doLogin = function() {\n      if (!$rootScope.forms.login.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $scope.user.origin = 'admin';\n      return UserService.doLogin($scope.user).then(function(response) {\n        storage.setCodes(response.data);\n        return $state.go('dashboard.home');\n      })[\"catch\"](function(response) {\n        return $logger.error('Usuário e/ou senha inválido(s).');\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('PropertiesCtrl', [\n  '$scope', '$rootScope', '$q', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', function($scope, $rootScope, $q, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) {\n    var cities, convertData, revertData, saveOrUpdate;\n    $scope.properties = [];\n    $scope.cities = [];\n    $scope.states = [];\n    $scope.clients = [];\n    $scope.search = {};\n    cities = [];\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      PropertyService.get($stateParams.id).then(function(response) {\n        $scope.property = response.data;\n        convertData();\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return LocationService.getCitiesByState($scope.property.address.state);\n      }).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[$scope.property.address.state] = currentCities;\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      PropertyService.getAll().then(function(response) {\n        $scope.properties = $filter('orderBy')(response.data, '-created');\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.showCities = function(state) {\n      if (cities[state] != null) {\n        $scope.cities = cities[state];\n        return false;\n      }\n      $loading.show();\n      return LocationService.getCitiesByState(state).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[state] = currentCities;\n        return $loading.hide();\n      })[\"catch\"](function() {\n        return $loading.hide();\n      });\n    };\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.doTryAgain = function(index) {\n      var item, property;\n      item = $scope.newProperties.errors[index];\n      property = item.property;\n      property.client = item.client._id;\n      delete property._id;\n      $scope.property = property;\n      return saveOrUpdate(false).then(function() {\n        return $scope.newProperties.errors.splice(index, 1);\n      });\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.property.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      return saveOrUpdate(true);\n    };\n    $scope.doRemoveCsv = function(index) {\n      return $scope.newProperties.errors.splice(index, 1);\n    };\n    $scope.doDelete = function(index) {\n      var property;\n      property = $scope.properties[index];\n      if (property._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return PropertyService[\"delete\"](property._id).then(function(response) {\n        $logger.success('Imóvel excluído com sucesso!');\n        $scope.properties.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    $scope.doUploadCSV = function(file) {\n      if ((file == null) || file.type !== 'text/csv') {\n        $logger.error('Por favor, selecione um arquivo válido do tipo .csv');\n        return false;\n      }\n      $rootScope.newProperties = {};\n      $loading.show();\n      return PropertyService.importCsv(file).then(function(response) {\n        $scope.file = null;\n        $rootScope.newProperties = response.data.content;\n        $state.go('dashboard.properties.confirm');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $scope.file = {};\n        $logger.error('Erro ao importar dados. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    saveOrUpdate = function(redirect) {\n      var promise;\n      if ($scope.property == null) {\n        return false;\n      }\n      promise = $q.defer();\n      $loading.show();\n      revertData();\n      return PropertyService.saveOrUpdate($scope.property).then(function(response) {\n        $loading.hide();\n        promise.resolve();\n        if (redirect) {\n          return $state.go('dashboard.properties');\n        }\n      })[\"catch\"](function(response) {\n        promise.reject();\n        if (response.data.code === 8) {\n          $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.');\n        } else {\n          $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.');\n        }\n        return $loading.hide();\n      });\n    };\n    convertData = function() {\n      var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7;\n      $scope.property.interest.allMeters = [10, 500];\n      $scope.property.interest.allVacancies = [0, 10];\n      $scope.property.interest.allFloors = [1, 30];\n      $scope.property.interest.allValues = [1000, 5000000];\n      $scope.property.interest.allIptus = [1000, 15000];\n      $scope.property.interest.allCondominiums = [1000, 500000];\n      $scope.property.interest.allLocations = [1000, 50000];\n      if (((ref = $scope.property.interest) != null ? ref.types : void 0) != null) {\n        $scope.property.interest.types = [];\n      }\n      if (((ref1 = $scope.property.interest) != null ? ref1.meters : void 0) != null) {\n        $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min;\n        $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max;\n      }\n      if (((ref2 = $scope.property.interest) != null ? ref2.condominium : void 0) != null) {\n        $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min;\n        $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max;\n      }\n      if (((ref3 = $scope.property.interest) != null ? ref3.vacancy : void 0) != null) {\n        $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min;\n        $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max;\n      }\n      if (((ref4 = $scope.property.interest) != null ? ref4.floor : void 0) != null) {\n        $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min;\n        $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max;\n      }\n      if (((ref5 = $scope.property.interest) != null ? ref5.value : void 0) != null) {\n        $scope.property.interest.allValues[0] = $scope.property.interest.value.min;\n        $scope.property.interest.allValues[1] = $scope.property.interest.value.max;\n      }\n      if (((ref6 = $scope.property.interest) != null ? ref6.iptu : void 0) != null) {\n        $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min;\n        $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max;\n      }\n      if (((ref7 = $scope.property.interest) != null ? ref7.location : void 0) != null) {\n        $scope.property.interest.allLocations[0] = $scope.property.interest.location.min;\n        return $scope.property.interest.allLocations[1] = $scope.property.interest.location.max;\n      }\n    };\n    return revertData = function() {\n      $scope.property.value = $scope.property.value.toFixed(2);\n      $scope.property.condominium = $scope.property.condominium.toFixed(2);\n      $scope.property.location = $scope.property.location.toFixed(2);\n      $scope.property.iptu = $scope.property.iptu.toFixed(2);\n      if ($scope.property.interest.allMeters != null) {\n        $scope.property.interest.meters = {\n          min: $scope.property.interest.allMeters[0],\n          max: $scope.property.interest.allMeters[1]\n        };\n        delete $scope.property.interest.allMeters;\n      }\n      if ($scope.property.interest.allCondominiums != null) {\n        $scope.property.interest.condominium = {\n          min: $scope.property.interest.allCondominiums[0],\n          max: $scope.property.interest.allCondominiums[1]\n        };\n        delete $scope.property.interest.allCondominiums;\n      }\n      if ($scope.property.interest.allVacancies != null) {\n        $scope.property.interest.vacancy = {\n          min: $scope.property.interest.allVacancies[0],\n          max: $scope.property.interest.allVacancies[1]\n        };\n        delete $scope.property.interest.allVacancies;\n      }\n      if ($scope.property.interest.allFloors != null) {\n        $scope.property.interest.floor = {\n          min: $scope.property.interest.allFloors[0],\n          max: $scope.property.interest.allFloors[1]\n        };\n        delete $scope.property.interest.allFloors;\n      }\n      if ($scope.property.interest.allValues != null) {\n        $scope.property.interest.value = {\n          min: $scope.property.interest.allValues[0],\n          max: $scope.property.interest.allValues[1]\n        };\n        delete $scope.property.interest.allValues;\n      }\n      if ($scope.property.interest.allIptus != null) {\n        $scope.property.interest.iptu = {\n          min: $scope.property.interest.allIptus[0],\n          max: $scope.property.interest.allIptus[1]\n        };\n        delete $scope.property.interest.allIptus;\n      }\n      if ($scope.property.interest.allLocations != null) {\n        $scope.property.interest.location = {\n          min: $scope.property.interest.allLocations[0],\n          max: $scope.property.interest.allLocations[1]\n        };\n        return delete $scope.property.interest.allLocations;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('SearchCtrl', [\n  '$scope', '$rootScope', '$loading', '$logger', 'storage', 'PropertyService', function($scope, $rootScope, $loading, $logger, storage, PropertyService) {\n    var convertData, resetValues, revertData;\n    $scope.properties = [];\n    $scope.showFilters = false;\n    $scope.query = {\n      interest: {},\n      property: {}\n    };\n    resetValues = function() {\n      $scope.query.interest.allMeters = [10, 500];\n      $scope.query.interest.allVacancies = [0, 10];\n      $scope.query.interest.allFloors = [1, 30];\n      $scope.query.interest.allValues = [1000, 5000000];\n      $scope.query.interest.allIptus = [1000, 15000];\n      $scope.query.interest.allCondominiums = [1000, 500000];\n      $scope.query.interest.allLocations = [1000, 50000];\n      $scope.query.property.allMeters = [10, 500];\n      $scope.query.property.allVacancies = [0, 10];\n      $scope.query.property.allFloors = [1, 30];\n      $scope.query.property.allValues = [1000, 5000000];\n      $scope.query.property.allIptus = [1000, 15000];\n      $scope.query.property.allCondominiums = [1000, 500000];\n      return $scope.query.property.allLocations = [1000, 50000];\n    };\n    revertData = function() {\n      resetValues();\n      if ($scope.property.interest.types != null) {\n        $scope.property.interest.types = [];\n      }\n      if ($scope.property.interest.meters != null) {\n        $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min;\n        $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max;\n      }\n      if ($scope.property.interest.condominium != null) {\n        $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min;\n        $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max;\n      }\n      if ($scope.property.interest.vacancy != null) {\n        $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min;\n        $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max;\n      }\n      if ($scope.property.interest.floor != null) {\n        $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min;\n        $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max;\n      }\n      if ($scope.property.interest.value != null) {\n        $scope.property.interest.allValues[0] = $scope.property.interest.value.min;\n        $scope.property.interest.allValues[1] = $scope.property.interest.value.max;\n      }\n      if ($scope.property.interest.iptu != null) {\n        $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min;\n        $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max;\n      }\n      if ($scope.property.interest.location != null) {\n        $scope.property.interest.allLocations[0] = $scope.property.interest.location.min;\n        return $scope.property.interest.allLocations[1] = $scope.property.interest.location.max;\n      }\n    };\n    convertData = function() {\n      $scope.query.property.meters = {\n        min: $scope.query.property.allMeters[0],\n        max: $scope.query.property.allMeters[1]\n      };\n      delete $scope.query.property.allMeters;\n      $scope.query.property.condominium = {\n        min: $scope.query.property.allCondominiums[0],\n        max: $scope.query.property.allCondominiums[1]\n      };\n      delete $scope.query.property.allCondominiums;\n      $scope.query.property.vacancy = {\n        min: $scope.query.property.allVacancies[0],\n        max: $scope.query.property.allVacancies[1]\n      };\n      delete $scope.query.property.allVacancies;\n      $scope.query.property.floor = {\n        min: $scope.query.property.allFloors[0],\n        max: $scope.query.property.allFloors[1]\n      };\n      delete $scope.query.property.allFloors;\n      $scope.query.property.value = {\n        min: $scope.query.property.allValues[0],\n        max: $scope.query.property.allValues[1]\n      };\n      delete $scope.query.property.allValues;\n      $scope.query.property.iptu = {\n        min: $scope.query.property.allIptus[0],\n        max: $scope.query.property.allIptus[1]\n      };\n      delete $scope.query.property.allIptus;\n      $scope.query.property.location = {\n        min: $scope.query.property.allLocations[0],\n        max: $scope.query.property.allLocations[1]\n      };\n      delete $scope.query.property.allLocations;\n      $scope.query.interest.meters = {\n        min: $scope.query.interest.allMeters[0],\n        max: $scope.query.interest.allMeters[1]\n      };\n      delete $scope.query.interest.allMeters;\n      $scope.query.interest.condominium = {\n        min: $scope.query.interest.allCondominiums[0],\n        max: $scope.query.interest.allCondominiums[1]\n      };\n      delete $scope.query.interest.allCondominiums;\n      $scope.query.interest.vacancy = {\n        min: $scope.query.interest.allVacancies[0],\n        max: $scope.query.interest.allVacancies[1]\n      };\n      delete $scope.query.interest.allVacancies;\n      $scope.query.interest.floor = {\n        min: $scope.query.interest.allFloors[0],\n        max: $scope.query.interest.allFloors[1]\n      };\n      delete $scope.query.interest.allFloors;\n      $scope.query.interest.value = {\n        min: $scope.query.interest.allValues[0],\n        max: $scope.query.interest.allValues[1]\n      };\n      delete $scope.query.interest.allValues;\n      $scope.query.interest.iptu = {\n        min: $scope.query.interest.allIptus[0],\n        max: $scope.query.interest.allIptus[1]\n      };\n      delete $scope.query.interest.allIptus;\n      $scope.query.interest.location = {\n        min: $scope.query.interest.allLocations[0],\n        max: $scope.query.interest.allLocations[1]\n      };\n      return delete $scope.query.interest.allLocations;\n    };\n    resetValues();\n    $scope.toggleFilters = function() {\n      $scope.showFilters = !$scope.showFilters;\n      if (!$scope.showFilters) {\n        return resetValues();\n      }\n    };\n    return $scope.doFilter = function() {\n      $loading.show();\n      convertData();\n      return PropertyService.search($scope.query).then(function(response) {\n        console.log(response);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao efetuar busca. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('UsersCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'UserGroupService', 'UserService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) {\n    $scope.user = {};\n    $scope.users = [];\n    $scope.groups = UserGroupService.getAll();\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      UserService.get($stateParams.id).then(function(response) {\n        $scope.user = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      UserService.getAll().then(function(response) {\n        $scope.users = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.saveOrUpdate($scope.user).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.users');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var user;\n      user = $scope.users[index];\n      if (user._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return UserService[\"delete\"](user._id).then(function(response) {\n        $logger.success('Usuário excluído com sucesso!');\n        $scope.users.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'AccountCtrl', ['$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', ($scope, $rootScope, $loading, $logger, storage, UserService) ->\n\n  $scope.user = {}\n  $scope.edit = false\n\n  $loading.show()\n  UserService.getMyAccount()\n  .then (response) ->\n    $scope.user = response.data\n    $loading.hide()\n  .catch (response) ->\n    $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.')\n    $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.doUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    UserService.update($scope.user)\n    .then (response) ->\n      $logger.success('Sua conta foi atualizada com sucesso!')\n      storage.updateToken(response.data.token)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao editar sua conta. Por favor, tente novamente.')\n      $loading.hide()\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'ClientsCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) ->\n\n  $scope.client = {}\n  $scope.clients = []\n\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    ClientService.get($stateParams.id)\n    .then (response) ->\n      $scope.client = response.data\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar clientes. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar clientes. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.client.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    ClientService.saveOrUpdate($scope.client)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.clients')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    client = $scope.clients[index]\n    return false if client._id == storage.getCode()\n\n    $loading.show()\n    ClientService.delete(client._id)\n    .then (response) ->\n      $logger.success('Cliente excluído com sucesso!')\n      $scope.clients.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir cliente. Por favor, tente novamente.')\n      $loading.hide()\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'LoginCtrl', ['$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', ($scope, $rootScope, $state, $logger, storage, UserService) ->\n\n  $scope.user = {}\n\n  $scope.doLogin = () ->\n    if !$rootScope.forms.login.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $scope.user.origin = 'admin'\n    UserService.doLogin($scope.user)\n    .then (response) ->\n      storage.setCodes(response.data)\n      $state.go('dashboard.home')\n    .catch (response) ->\n      $logger.error('Usuário e/ou senha inválido(s).')\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'PropertiesCtrl', ['$scope', '$rootScope', '$q', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', ($scope, $rootScope, $q, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) ->\n\n#  $scope.property =\n#    payments: []\n#    interest:\n#      types: []\n#      allMeters:  [10, 500]\n#      allVacancies: [0, 10]\n#      allFloors: [1, 30]\n#      allValues: [1000, 5000000]\n#      allIptus: [1000, 15000]\n#      allCondominiums: [1000, 500000]\n#      allLocations: [1000, 50000]\n\n#  $scope.property = {\n#    \"code\":\"123\",\n#    \"client\":\"585ecf5bd5af8351e3b894e3\",\n#    \"type\":\"apartament\",\n#    \"meters\":100,\n#    \"vacancy\":\"1\",\n#    \"floor\":\"2\",\n#    \"address\":{\n#      \"street\":\"Rua Simoes Delgado\",\n#      \"number\":\"15\",\n#      \"state\":\"SP\",\n#      \"city\":\"São Paulo\",\n#      \"neighborhood\":\"Jardim 9 de Julho\",\n#      \"cep\":\"03952020\"\n#    },\n#    \"hasSubway\":true,\n#    \"subwayStation\":\"Penha\",\n#    \"value\":1.00,\n#    \"condominium\":2.00,\n#    \"iptu\":3.00,\n#    \"location\":4.00,\n#    \"payments\": [\n#      \"financing\",\n#      \"money\",\n#      \"others\"\n#    ],\n#    \"exchange\":0.1,\n#    \"difference\":0.5,\n#    \"carValue\":5,\n#    \"settled\":true,\n#    \"car\":true\n#    interest:\n#      types: []\n#      allMeters:  [10, 500]\n#      allVacancies: [0, 10]\n#      allFloors: [1, 30]\n#      allValues: [1000, 5000000]\n#      allIptus: [1000, 15000]\n#      allCondominiums: [1000, 500000]\n#      allLocations: [1000, 50000]\n#  }\n\n  $scope.properties = []\n  $scope.cities = []\n  $scope.states = []\n  $scope.clients = []\n  $scope.search = {}\n  cities = []\n\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    PropertyService.get($stateParams.id)\n    .then (response) ->\n      $scope.property = response.data\n      convertData()\n      return LocationService.getAllStates()\n    .then (response) ->\n      $scope.states = response.data.sort()\n      return LocationService.getCitiesByState($scope.property.address.state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[$scope.property.address.state] = currentCities\n      return ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderByString')(response.data, 'name')\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    PropertyService.getAll()\n    .then (response) ->\n      $scope.properties = $filter('orderBy')(response.data, '-created')\n      return LocationService.getAllStates()\n    .then (response) ->\n      $scope.states = response.data.sort()\n      return ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderByString')(response.data, 'name')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.showCities = (state) ->\n\n    if cities[state]?\n      $scope.cities = cities[state]\n      return false\n\n    $loading.show()\n    LocationService.getCitiesByState(state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[state] = currentCities\n      $loading.hide()\n    .catch () ->\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.doTryAgain = (index) ->\n\n    item = $scope.newProperties.errors[index]\n    property = item.property\n    property.client = item.client._id\n    delete property._id\n\n    $scope.property = property\n\n    saveOrUpdate(false)\n    .then () ->\n      $scope.newProperties.errors.splice(index, 1)\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.property.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    saveOrUpdate(true)\n\n  $scope.doRemoveCsv = (index) ->\n    $scope.newProperties.errors.splice(index, 1)\n\n  $scope.doDelete = (index) ->\n    property = $scope.properties[index]\n    return false if property._id == storage.getCode()\n\n    $loading.show()\n    PropertyService.delete(property._id)\n    .then (response) ->\n      $logger.success('Imóvel excluído com sucesso!')\n      $scope.properties.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doUploadCSV = (file) ->\n    if not file? or file.type != 'text/csv'\n      $logger.error('Por favor, selecione um arquivo válido do tipo .csv')\n      return false\n\n    $rootScope.newProperties = {}\n\n    $loading.show()\n    PropertyService.importCsv(file)\n    .then (response) ->\n      $scope.file = null\n      $rootScope.newProperties = response.data.content\n      $state.go('dashboard.properties.confirm')\n      $loading.hide()\n    .catch (response) ->\n      $scope.file = {}\n      $logger.error('Erro ao importar dados. Por favor, tente novamente.')\n      $loading.hide()\n\n  saveOrUpdate = (redirect) ->\n    if not $scope.property?\n      return false\n\n    promise = $q.defer()\n    $loading.show()\n\n    revertData()\n    PropertyService.saveOrUpdate($scope.property)\n      .then (response) ->\n        $loading.hide()\n        promise.resolve()\n        $state.go('dashboard.properties') if redirect\n      .catch (response) ->\n        promise.reject()\n        if response.data.code == 8\n          $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.')\n        else\n          $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.')\n        $loading.hide()\n\n  convertData = () ->\n    $scope.property.interest.allMeters =  [10, 500]\n    $scope.property.interest.allVacancies = [0, 10]\n    $scope.property.interest.allFloors = [1, 30]\n    $scope.property.interest.allValues = [1000, 5000000]\n    $scope.property.interest.allIptus = [1000, 15000]\n    $scope.property.interest.allCondominiums = [1000, 500000]\n    $scope.property.interest.allLocations = [1000, 50000]\n\n    if $scope.property.interest?.types?\n      $scope.property.interest.types = []\n\n    if $scope.property.interest?.meters?\n      $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min\n      $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max\n\n    if $scope.property.interest?.condominium?\n      $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min\n      $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max\n\n    if $scope.property.interest?.vacancy?\n      $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min\n      $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max\n\n    if $scope.property.interest?.floor?\n      $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min\n      $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max\n\n    if $scope.property.interest?.value?\n      $scope.property.interest.allValues[0] = $scope.property.interest.value.min\n      $scope.property.interest.allValues[1] = $scope.property.interest.value.max\n\n    if $scope.property.interest?.iptu?\n      $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min\n      $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max\n\n    if $scope.property.interest?.location?\n      $scope.property.interest.allLocations[0] = $scope.property.interest.location.min\n      $scope.property.interest.allLocations[1] = $scope.property.interest.location.max\n\n\n  revertData = () ->\n    $scope.property.value = $scope.property.value.toFixed(2)\n    $scope.property.condominium = $scope.property.condominium.toFixed(2)\n    $scope.property.location = $scope.property.location.toFixed(2)\n    $scope.property.iptu = $scope.property.iptu.toFixed(2)\n\n    if $scope.property.interest.allMeters?\n      $scope.property.interest.meters =\n        min: $scope.property.interest.allMeters[0]\n        max: $scope.property.interest.allMeters[1]\n      delete $scope.property.interest.allMeters\n\n    if $scope.property.interest.allCondominiums?\n      $scope.property.interest.condominium =\n        min: $scope.property.interest.allCondominiums[0]\n        max: $scope.property.interest.allCondominiums[1]\n      delete $scope.property.interest.allCondominiums\n\n    if $scope.property.interest.allVacancies?\n      $scope.property.interest.vacancy =\n        min: $scope.property.interest.allVacancies[0]\n        max: $scope.property.interest.allVacancies[1]\n      delete $scope.property.interest.allVacancies\n\n    if $scope.property.interest.allFloors?\n      $scope.property.interest.floor =\n        min: $scope.property.interest.allFloors[0]\n        max: $scope.property.interest.allFloors[1]\n      delete $scope.property.interest.allFloors\n\n    if $scope.property.interest.allValues?\n      $scope.property.interest.value =\n        min: $scope.property.interest.allValues[0]\n        max: $scope.property.interest.allValues[1]\n      delete $scope.property.interest.allValues\n\n    if $scope.property.interest.allIptus?\n      $scope.property.interest.iptu =\n        min: $scope.property.interest.allIptus[0]\n        max: $scope.property.interest.allIptus[1]\n      delete $scope.property.interest.allIptus\n\n    if $scope.property.interest.allLocations?\n      $scope.property.interest.location =\n        min: $scope.property.interest.allLocations[0]\n        max: $scope.property.interest.allLocations[1]\n      delete $scope.property.interest.allLocations\n]\n","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'SearchCtrl', ['$scope', '$rootScope', '$loading', '$logger', 'storage', 'PropertyService', ($scope, $rootScope, $loading, $logger, storage, PropertyService) ->\n\n  $scope.properties = []\n  $scope.showFilters = false\n\n  $scope.query =\n    interest: {}\n    property: {}\n\n  resetValues = () ->\n    $scope.query.interest.allMeters =  [10, 500]\n    $scope.query.interest.allVacancies = [0, 10]\n    $scope.query.interest.allFloors = [1, 30]\n    $scope.query.interest.allValues = [1000, 5000000]\n    $scope.query.interest.allIptus = [1000, 15000]\n    $scope.query.interest.allCondominiums = [1000, 500000]\n    $scope.query.interest.allLocations = [1000, 50000]\n\n    $scope.query.property.allMeters =  [10, 500]\n    $scope.query.property.allVacancies = [0, 10]\n    $scope.query.property.allFloors = [1, 30]\n    $scope.query.property.allValues = [1000, 5000000]\n    $scope.query.property.allIptus = [1000, 15000]\n    $scope.query.property.allCondominiums = [1000, 500000]\n    $scope.query.property.allLocations = [1000, 50000]\n\n  revertData = () ->\n    resetValues()\n\n    if $scope.property.interest.types?\n      $scope.property.interest.types = []\n\n    if $scope.property.interest.meters?\n      $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min\n      $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max\n\n    if $scope.property.interest.condominium?\n      $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min\n      $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max\n\n    if $scope.property.interest.vacancy?\n      $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min\n      $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max\n\n    if $scope.property.interest.floor?\n      $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min\n      $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max\n\n    if $scope.property.interest.value?\n      $scope.property.interest.allValues[0] = $scope.property.interest.value.min\n      $scope.property.interest.allValues[1] = $scope.property.interest.value.max\n\n    if $scope.property.interest.iptu?\n      $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min\n      $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max\n\n    if $scope.property.interest.location?\n      $scope.property.interest.allLocations[0] = $scope.property.interest.location.min\n      $scope.property.interest.allLocations[1] = $scope.property.interest.location.max\n\n  convertData = () ->\n    $scope.query.property.meters =\n      min: $scope.query.property.allMeters[0]\n      max: $scope.query.property.allMeters[1]\n    delete $scope.query.property.allMeters\n\n    $scope.query.property.condominium =\n      min: $scope.query.property.allCondominiums[0]\n      max: $scope.query.property.allCondominiums[1]\n    delete $scope.query.property.allCondominiums\n\n    $scope.query.property.vacancy =\n      min: $scope.query.property.allVacancies[0]\n      max: $scope.query.property.allVacancies[1]\n    delete $scope.query.property.allVacancies\n\n    $scope.query.property.floor =\n      min: $scope.query.property.allFloors[0]\n      max: $scope.query.property.allFloors[1]\n    delete $scope.query.property.allFloors\n\n    $scope.query.property.value =\n      min: $scope.query.property.allValues[0]\n      max: $scope.query.property.allValues[1]\n    delete $scope.query.property.allValues\n\n    $scope.query.property.iptu =\n      min: $scope.query.property.allIptus[0]\n      max: $scope.query.property.allIptus[1]\n    delete $scope.query.property.allIptus\n\n    $scope.query.property.location =\n      min: $scope.query.property.allLocations[0]\n      max: $scope.query.property.allLocations[1]\n    delete $scope.query.property.allLocations\n\n    $scope.query.interest.meters =\n      min: $scope.query.interest.allMeters[0]\n      max: $scope.query.interest.allMeters[1]\n    delete $scope.query.interest.allMeters\n\n    $scope.query.interest.condominium =\n      min: $scope.query.interest.allCondominiums[0]\n      max: $scope.query.interest.allCondominiums[1]\n    delete $scope.query.interest.allCondominiums\n\n    $scope.query.interest.vacancy =\n      min: $scope.query.interest.allVacancies[0]\n      max: $scope.query.interest.allVacancies[1]\n    delete $scope.query.interest.allVacancies\n\n    $scope.query.interest.floor =\n      min: $scope.query.interest.allFloors[0]\n      max: $scope.query.interest.allFloors[1]\n    delete $scope.query.interest.allFloors\n\n    $scope.query.interest.value =\n      min: $scope.query.interest.allValues[0]\n      max: $scope.query.interest.allValues[1]\n    delete $scope.query.interest.allValues\n\n    $scope.query.interest.iptu =\n      min: $scope.query.interest.allIptus[0]\n      max: $scope.query.interest.allIptus[1]\n    delete $scope.query.interest.allIptus\n\n    $scope.query.interest.location =\n      min: $scope.query.interest.allLocations[0]\n      max: $scope.query.interest.allLocations[1]\n    delete $scope.query.interest.allLocations\n\n  resetValues()\n\n  $scope.toggleFilters = () ->\n    $scope.showFilters = !$scope.showFilters\n    resetValues() if !$scope.showFilters\n\n  $scope.doFilter = () ->\n\n    $loading.show()\n    convertData()\n    PropertyService.search($scope.query)\n    .then (response) ->\n      console.log(response);\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao efetuar busca. Por favor, tente novamente.')\n      $loading.hide()\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'UsersCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage','UserGroupService', 'UserService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) ->\n\n  $scope.user = {}\n  $scope.users = []\n\n  $scope.groups = UserGroupService.getAll()\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    UserService.get($stateParams.id)\n    .then (response) ->\n      $scope.user = response.data\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    UserService.getAll()\n    .then (response) ->\n      $scope.users = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    UserService.saveOrUpdate($scope.user)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.users')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    user = $scope.users[index]\n    return false if user._id == storage.getCode()\n\n    $loading.show()\n    UserService.delete(user._id)\n    .then (response) ->\n      $logger.success('Usuário excluído com sucesso!')\n      $scope.users.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n]"]}