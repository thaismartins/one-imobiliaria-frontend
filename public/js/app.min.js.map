{"version":3,"sources":["app.coffee","app.js","routes.coffee","client.coffee","loading.coffee","location.coffee","logger.coffee","property-type.coffee","property.coffee","session.coffee","storage.coffee","user-group.coffee","user.coffee","address.coffee","date-br.coffee","date-time-br.coffee","decimals.coffee","error-import.coffee","first-name.coffee","meters.coffee","order-by-string.coffee","phone-br.coffee","range.coffee","types-to-text.coffee","yes-or-no.coffee","file.coffee","account.coffee","clients.coffee","login.coffee","properties.coffee","search.coffee","users.coffee"],"names":["angular","module","run","$rootScope","$state","RESOURCES","storage","UserService","error","success","loading","fileUrl","API_URL","newProperties","page","name","showMenu","showSubmenu","appTitle","forms","doLogout","toggleMenu","toggleSubmenu","$on","current","split","group","getGroup","getName","requiredLogin","isLogged","go","constant","config","$stateProvider","$httpProvider","$urlRouterProvider","state","url","views","main","templateUrl","controller","error@login","abstract","header","footer","main@","submenu@dashboard.users","error@dashboard.users","success@dashboard.users","loading@dashboard.users","error@dashboard.users.new","loading@dashboard.users.new","error@dashboard.users.edit","loading@dashboard.users.edit","submenu@dashboard.clients","error@dashboard.clients","success@dashboard.clients","loading@dashboard.clients","error@dashboard.clients.new","loading@dashboard.clients.new","error@dashboard.clients.edit","submenu@dashboard.properties","error@dashboard.properties","success@dashboard.properties","loading@dashboard.properties","submenu@dashboard.properties.new","property@dashboard.properties.new","interest@dashboard.properties.new","error@dashboard.properties.new","loading@dashboard.properties.new","submenu@dashboard.properties.edit","property@dashboard.properties.edit","interest@dashboard.properties.edit","error@dashboard.properties.edit","loading@dashboard.properties.edit","submenu@dashboard.properties.confirm","error@dashboard.account","loading@dashboard.account","submenu@dashboard.search","submenu-filter@dashboard.search","filters-interest@dashboard.search","filters-property@dashboard.search","error@dashboard.search","loading@dashboard.search","otherwise","interceptors","push","defaults","useXDomain","headers","common","service","$http","apiUrl","create","client","post","update","put","_id","saveOrUpdate","this","getAll","get","id","delete","show","hide","getAllStates","getCitiesByState","clean","modalError","errorString","successString","items","title","code","$httpParamSerializer","property","search","query","console","log","importCsv","file","form","FormData","append","withCredentials","Content-Type","transformRequest","identity","isUnloggedPage","indexOf","request","getSessionToken","localStorage","getItem","setCodes","codes","setItem","token","type","updateToken","getCode","removeItem","doLogin","user","getMyAccount","filter","address","fullAddress","street","number","complement","input","date","moment","format","locale","calendar","sameElse","num","toString","replace","names","meters","array","reverse","result","sort","object1","object2","isUndefined","localeCompare","length","PropertyTypeService","propertyType","map","item","n","i","j","ref","res","types","len","apart","land","car","house","UserGroupService","directive","$parse","require","scope","ngModel","restrict","link","$scope","elem","attrs","changeHandler","formatter","value","$formatters","$parsers","newValue","$modelValue","assign","$viewValue","$render","bind","$timeout","fn","event","files","target","$file","$event","$loading","$logger","edit","then","response","data","canEdit","doUpdate","$valid","$stateParams","$filter","ClientService","clients","doDelete","index","splice","login","origin","PropertyService","LocationService","cities","convertData","revertData","vacancy","floor","city","neighborhood","cep","hasSubway","subwayStation","condominium","iptu","location","payments","exchange","difference","carValue","settled","interest","allMeters","allVacancies","allFloors","allValues","allIptus","allCondominiums","allLocations","properties","states","currentCities","showCities","doRemoveCsv","errors","doUploadCSV","content","min","max","toFixed","resetValues","showFilters","toggleFilters","doFilter","users","groups"],"mappings":"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","file":"app.min.js","sourcesContent":[null,"'use strict';\nangular.module('oneImobiliaria', ['ui.router', 'ui.utils.masks', 'ui.slider']).run([\n  '$rootScope', '$state', 'RESOURCES', 'storage', 'UserService', function($rootScope, $state, RESOURCES, storage, UserService) {\n    $rootScope.error = false;\n    $rootScope.success = false;\n    $rootScope.loading = false;\n    $rootScope.fileUrl = RESOURCES.API_URL + '/';\n    $rootScope.newProperties = {};\n    $rootScope.page = '';\n    $rootScope.name = '';\n    $rootScope.showMenu = false;\n    $rootScope.showSubmenu = false;\n    $rootScope.appTitle = 'One Consultoria Imobiliária';\n    $rootScope.forms = {};\n    $rootScope.doLogout = function() {\n      return UserService.doLogout();\n    };\n    $rootScope.toggleMenu = function() {\n      return $rootScope.showMenu = !$rootScope.showMenu;\n    };\n    $rootScope.toggleSubmenu = function() {\n      return $rootScope.showSubmenu = !$rootScope.showSubmenu;\n    };\n    return $rootScope.$on('$stateChangeSuccess', function() {\n      var page;\n      page = $state.current.name.split('.');\n      $rootScope.page = page[1] || '';\n      $rootScope.group = storage.getGroup();\n      $rootScope.name = storage.getName();\n      $rootScope.error = false;\n      $rootScope.success = false;\n      $rootScope.loading = false;\n      $rootScope.showMenu = false;\n      $rootScope.showSubmenu = false;\n      if ($state.current.requiredLogin && !UserService.isLogged()) {\n        UserService.doLogout();\n      }\n      if (!$state.current.requiredLogin && UserService.isLogged()) {\n        $state.go('dashboard.home');\n      }\n      if ($rootScope.page === 'users' && $rootScope.group !== 'admin') {\n        return $state.go('dashboard.home');\n      }\n    });\n  }\n]).constant('RESOURCES', {\n  'API_URL': 'http://localhost:3000/api'\n});\n\n'use strict';\nangular.module('oneImobiliaria').config([\n  '$stateProvider', '$httpProvider', '$urlRouterProvider', function($stateProvider, $httpProvider, $urlRouterProvider) {\n    $stateProvider.state('login', {\n      url: '/login',\n      views: {\n        main: {\n          templateUrl: 'app/views/login/index.html',\n          controller: 'LoginCtrl'\n        },\n        'error@login': {\n          templateUrl: 'app/views/error.html'\n        }\n      },\n      requiredLogin: false\n    }).state('dashboard', {\n      url: '/dashboard',\n      abstract: true,\n      views: {\n        main: {},\n        header: {\n          templateUrl: 'app/views/header.html'\n        },\n        footer: {\n          templateUrl: 'app/views/footer.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.home', {\n      url: '/home',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/home/index.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users', {\n      url: '/users',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/index.html',\n          controller: 'UsersCtrl'\n        },\n        'submenu@dashboard.users': {\n          templateUrl: 'app/views/users/submenu.html'\n        },\n        'error@dashboard.users': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.users': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.users': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'error@dashboard.users.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.users.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/users/form.html',\n          controller: 'UsersCtrl'\n        },\n        'error@dashboard.users.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients', {\n      url: '/clients',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/index.html',\n          controller: 'ClientsCtrl'\n        },\n        'submenu@dashboard.clients': {\n          templateUrl: 'app/views/clients/submenu.html'\n        },\n        'error@dashboard.clients': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.clients': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.clients': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.clients.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.clients.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/clients/form.html',\n          controller: 'ClientsCtrl'\n        },\n        'error@dashboard.clients.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.users.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties', {\n      url: '/properties',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/index.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties': {\n          templateUrl: 'app/views/properties/submenu.html'\n        },\n        'error@dashboard.properties': {\n          templateUrl: 'app/views/error.html'\n        },\n        'success@dashboard.properties': {\n          templateUrl: 'app/views/success.html'\n        },\n        'loading@dashboard.properties': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.new', {\n      url: '/new',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.new': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.new': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.new': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.edit', {\n      url: '/edit/:id',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/form.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/form-submenu.html'\n        },\n        'property@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/property.html'\n        },\n        'interest@dashboard.properties.edit': {\n          templateUrl: 'app/views/properties/interest.html'\n        },\n        'error@dashboard.properties.edit': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.properties.edit': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.properties.confirm', {\n      url: '/confirm',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/properties/confirm.html',\n          controller: 'PropertiesCtrl'\n        },\n        'submenu@dashboard.properties.confirm': {\n          templateUrl: 'app/views/properties/confirm-submenu.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.account', {\n      url: '/account',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/account/form.html',\n          controller: 'AccountCtrl'\n        },\n        'error@dashboard.account': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.account': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    }).state('dashboard.search', {\n      url: '/search',\n      views: {\n        'main@': {\n          templateUrl: 'app/views/search/index.html',\n          controller: 'SearchCtrl'\n        },\n        'submenu@dashboard.search': {\n          templateUrl: 'app/views/search/submenu.html'\n        },\n        'submenu-filter@dashboard.search': {\n          templateUrl: 'app/views/search/submenu-filter.html'\n        },\n        'filters-interest@dashboard.search': {\n          templateUrl: 'app/views/search/filters-interest.html',\n          controller: 'AccountCtrl'\n        },\n        'filters-property@dashboard.search': {\n          templateUrl: 'app/views/search/filters-property.html',\n          controller: 'AccountCtrl'\n        },\n        'error@dashboard.search': {\n          templateUrl: 'app/views/error.html'\n        },\n        'loading@dashboard.search': {\n          templateUrl: 'app/views/loading.html'\n        }\n      },\n      requiredLogin: true\n    });\n    $urlRouterProvider.otherwise('/login');\n    $httpProvider.interceptors.push('sessionInjector');\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.headers.common[\"Content-Type\"] = 'application/json';\n    return delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('ClientService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/clients';\n    return {\n      create: function(client) {\n        return $http.post(apiUrl, client);\n      },\n      update: function(client) {\n        return $http.put(apiUrl + '/' + client._id, client);\n      },\n      saveOrUpdate: function(client) {\n        if (client._id) {\n          return this.update(client);\n        } else {\n          return this.create(client);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$loading', [\n  '$rootScope', function($rootScope) {\n    return {\n      show: function() {\n        return $rootScope.loading = true;\n      },\n      hide: function() {\n        return $rootScope.loading = false;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('LocationService', [\n  '$http', '$state', 'RESOURCES', function($http, $state, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/cities';\n    return {\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      getAllStates: function() {\n        return $http.get(apiUrl + '/states');\n      },\n      getCitiesByState: function(state) {\n        return $http.get(apiUrl + '/states/' + state);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('$logger', [\n  '$rootScope', function($rootScope) {\n    return {\n      clean: function() {\n        $rootScope.success = false;\n        $rootScope.error = false;\n        return $rootScope.modalError = false;\n      },\n      error: function(errorString) {\n        this.clean();\n        return $rootScope.error = errorString;\n      },\n      modalError: function(errorString) {\n        this.clean();\n        return $rootScope.modalError = errorString;\n      },\n      success: function(successString) {\n        this.clean();\n        return $rootScope.success = successString;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyTypeService', function() {\n  var items;\n  items = [\n    {\n      title: 'Apartamento',\n      code: 'apartament'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Terreno',\n      code: 'land'\n    }, {\n      title: 'Casa',\n      code: 'house'\n    }, {\n      title: 'Carro',\n      code: 'car'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('PropertyService', [\n  '$http', '$state', 'RESOURCES', '$httpParamSerializer', function($http, $state, RESOURCES, $httpParamSerializer) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/properties';\n    return {\n      create: function(property) {\n        return $http.post(apiUrl, property);\n      },\n      update: function(property) {\n        return $http.put(apiUrl + '/' + property._id, property);\n      },\n      saveOrUpdate: function(property) {\n        if (property._id) {\n          return this.update(property);\n        } else {\n          return this.create(property);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      },\n      search: function(query) {\n        console.log($httpParamSerializer(query));\n        return $http.get(apiUrl + '/search?' + $httpParamSerializer(query));\n      },\n      importCsv: function(file) {\n        var form;\n        form = new FormData();\n        form.append('csv', file);\n        return $http.post(apiUrl + '/import/csv', form, {\n          withCredentials: false,\n          headers: {\n            'Content-Type': void 0\n          },\n          transformRequest: angular.identity\n        });\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('sessionInjector', [\n  'storage', function(storage) {\n    var isUnloggedPage;\n    isUnloggedPage = function(config) {\n      return config.url.indexOf('auth') > -1 || config.url.indexOf('remember') > -1;\n    };\n    return {\n      request: function(config) {\n        if (!isUnloggedPage(config)) {\n          config.headers['x-access-token'] = storage.getSessionToken();\n        }\n        return config;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').service('storage', function() {\n  return {\n    isLogged: function() {\n      return (localStorage.getItem('x-code-one') !== null) && (localStorage.getItem('code-one') !== null);\n    },\n    setCodes: function(codes) {\n      localStorage.setItem('x-code-one', codes.token);\n      localStorage.setItem('code-one', codes.code);\n      localStorage.setItem('group-one', codes.type);\n      return localStorage.setItem('name-one', codes.name);\n    },\n    updateToken: function(token) {\n      return localStorage.setItem('x-code-one', token);\n    },\n    getSessionToken: function() {\n      return localStorage.getItem('x-code-one');\n    },\n    getCode: function() {\n      return localStorage.getItem('code-one');\n    },\n    getName: function() {\n      return localStorage.getItem('name-one') || '';\n    },\n    getGroup: function() {\n      return localStorage.getItem('group-one') || '';\n    },\n    clean: function() {\n      localStorage.removeItem('x-code-one');\n      localStorage.removeItem('code-one');\n      localStorage.removeItem('group-one');\n      return localStorage.removeItem('name-one');\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserGroupService', function() {\n  var items;\n  items = [\n    {\n      title: 'Administrador(a)',\n      code: 'admin'\n    }, {\n      title: 'Corretor(a)',\n      code: 'broker'\n    }\n  ];\n  return {\n    getAll: function() {\n      return items;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').service('UserService', [\n  '$http', '$state', 'storage', 'RESOURCES', function($http, $state, storage, RESOURCES) {\n    var apiUrl;\n    apiUrl = RESOURCES.API_URL + '/accounts';\n    return {\n      isLogged: function() {\n        return storage.isLogged();\n      },\n      doLogin: function(user) {\n        return $http.post(apiUrl + '/auth', user);\n      },\n      doLogout: function() {\n        storage.clean();\n        $state.go('login');\n      },\n      create: function(user) {\n        return $http.post(apiUrl, user);\n      },\n      update: function(user) {\n        return $http.put(apiUrl + '/' + user._id, user);\n      },\n      saveOrUpdate: function(user) {\n        if (user._id) {\n          return this.update(user);\n        } else {\n          return this.create(user);\n        }\n      },\n      getAll: function() {\n        return $http.get(apiUrl);\n      },\n      get: function(id) {\n        return $http.get(apiUrl + '/' + id);\n      },\n      getMyAccount: function() {\n        return $http.get(apiUrl + '/' + storage.getCode());\n      },\n      \"delete\": function(id) {\n        return $http[\"delete\"](apiUrl + '/' + id);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('address', function() {\n  return function(address) {\n    var fullAddress;\n    if ((address == null) || ((address.street == null) && (address.number == null) && (address.complement == null))) {\n      return 'Indefinido';\n    }\n    fullAddress = '';\n    if (address.street != null) {\n      fullAddress += address.street;\n    }\n    if (address.number != null) {\n      fullAddress += ', ' + address.number;\n    }\n    if (address.complement != null) {\n      fullAddress += ' - ' + address.complement;\n    }\n    return fullAddress;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateBr', function() {\n  return function(input) {\n    var date;\n    if (input == null) {\n      return '';\n    }\n    date = input.split('T');\n    return moment(date[0]).format('DD/MM/YYYY');\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('dateTimeBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    moment.locale('pt-br');\n    return moment(input).calendar(null, {\n      sameElse: 'DD/MM/YYYY - H:mm'\n    });\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('decimals', function() {\n  return function(num) {\n    if (num == null) {\n      return '';\n    }\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('errorImport', function() {\n  return function(code) {\n    var error;\n    error = '';\n    switch (code) {\n      case 1:\n        error = 'Este cliente já possui um imóvel cadastrado.';\n        break;\n      default:\n        error = 'Erro ao salvar item. Por favor, verifique o dados inseridos na tabela.';\n    }\n    return error;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('firstName', function() {\n  return function(name) {\n    var names;\n    if ((name == null) || name === '') {\n      return '';\n    }\n    names = name.split(' ');\n    return names[0];\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('meters', function() {\n  return function(meters) {\n    if ((meters == null) || meters === '') {\n      meters = '0';\n    }\n    return meters + ' m²';\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('orderByString', function() {\n  return function(array, property, reverse) {\n    var result;\n    result = array.sort(function(object1, object2) {\n      if (angular.isUndefined(property)) {\n        object1.localeCompare(object2);\n      }\n      return object1[property].localeCompare(object2[property]);\n    });\n    if (reverse) {\n      return result.reverse();\n    } else {\n      return result;\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('phoneBr', function() {\n  return function(input) {\n    if (input == null) {\n      return '';\n    }\n    if (input.length === 10) {\n      return input.replace(/(\\d{2})(\\d{4})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    } else {\n      return input.replace(/(\\d{2})(\\d{5})(\\d{4})/g, \"(\\$1) \\$2-\\$3\");\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('propertyType', [\n  'PropertyTypeService', function(PropertyTypeService) {\n    return function(propertyType) {\n      var items, title;\n      if ((propertyType == null) || propertyType === '') {\n        return '';\n      }\n      items = PropertyTypeService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === propertyType) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('range', function() {\n  return function(n) {\n    var i, j, ref, res;\n    res = [];\n    for (i = j = 1, ref = n + 1; j < ref; i = j += 1) {\n      res.push(i);\n    }\n    return res;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('typesToText', function() {\n  return function(types) {\n    var i, items, len, type;\n    if (!((types != null) && types.length > 0)) {\n      return 'Indefinido';\n    }\n    items = {\n      apart: 'Apartamento',\n      land: 'Tereno',\n      car: 'Carro',\n      house: 'Case'\n    };\n    for (i = 0, len = types.length; i < len; i++) {\n      type = types[i];\n      console.log(type);\n    }\n    return types;\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').filter('groupName', [\n  'UserGroupService', function(UserGroupService) {\n    return function(group) {\n      var items, title;\n      if ((group == null) || group === '') {\n        return '';\n      }\n      items = UserGroupService.getAll();\n      title = '';\n      items.map(function(item) {\n        if (item.code === group) {\n          return title = item.title;\n        }\n      });\n      return title;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').filter('yesOrNo', function() {\n  return function(type) {\n    if (type) {\n      return 'Sim';\n    } else {\n      return 'Não';\n    }\n  };\n});\n\n'use strict';\nangular.module('oneImobiliaria').directive('decimals', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        formatter = function(value) {\n          if (value == null) {\n            return '';\n          }\n          return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n        };\n        ngModel.$formatters.push(function(value) {\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return formatter(value);\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').directive('file', [\n  '$parse', '$timeout', function($parse, $timeout) {\n    return {\n      require: \"ngModel\",\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, fn;\n        fn = $parse(attrs['ngFileSelected']);\n        changeHandler = function(event) {\n          var file, files;\n          files = event.target.files;\n          file = files[0];\n          return $timeout(function() {\n            return fn($scope, {\n              $file: file,\n              $event: event\n            });\n          });\n        };\n        return elem.bind('change', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').directive('meters', [\n  '$parse', function($parse) {\n    return {\n      require: \"?ngModel\",\n      scope: {\n        ngModel: '='\n      },\n      restrict: 'A',\n      link: function($scope, elem, attrs, ngModel) {\n        var changeHandler, formatter;\n        console.log(ngModel.$modelValue);\n        formatter = function(value) {\n          if (value == null) {\n            value = 0;\n          }\n          value = value.toString().replace('m²', '');\n          value = value.toString().replace(/\\D/g, '');\n          return value + 'm²';\n        };\n        ngModel.$formatters.push(function(value) {\n          console.log(value);\n          return formatter(value);\n        });\n        ngModel.$parsers.push(function(value) {\n          return value.toString().replace('m²', '');\n        });\n        changeHandler = function() {\n          var newValue;\n          newValue = formatter(ngModel.$modelValue);\n          console.log(newValue);\n          $parse(attrs.ngModel).assign($scope, newValue);\n          ngModel.$viewValue = newValue;\n          return ngModel.$render();\n        };\n        return elem.bind('keyup', changeHandler);\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('AccountCtrl', [\n  '$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', function($scope, $rootScope, $loading, $logger, storage, UserService) {\n    $scope.user = {};\n    $scope.edit = false;\n    $loading.show();\n    UserService.getMyAccount().then(function(response) {\n      $scope.user = response.data;\n      return $loading.hide();\n    })[\"catch\"](function(response) {\n      $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.');\n      return $loading.hide();\n    });\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    return $scope.doUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.update($scope.user).then(function(response) {\n        $logger.success('Sua conta foi atualizada com sucesso!');\n        storage.updateToken(response.data.token);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao editar sua conta. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('ClientsCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) {\n    $scope.client = {};\n    $scope.clients = [];\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      ClientService.get($stateParams.id).then(function(response) {\n        $scope.client = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      ClientService.getAll().then(function(response) {\n        $scope.clients = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar clientes. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.client.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return ClientService.saveOrUpdate($scope.client).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.clients');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var client;\n      client = $scope.clients[index];\n      if (client._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return ClientService[\"delete\"](client._id).then(function(response) {\n        $logger.success('Cliente excluído com sucesso!');\n        $scope.clients.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir cliente. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('LoginCtrl', [\n  '$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', function($scope, $rootScope, $state, $logger, storage, UserService) {\n    $scope.user = {};\n    return $scope.doLogin = function() {\n      if (!$rootScope.forms.login.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $scope.user.origin = 'admin';\n      return UserService.doLogin($scope.user).then(function(response) {\n        storage.setCodes(response.data);\n        return $state.go('dashboard.home');\n      })[\"catch\"](function(response) {\n        return $logger.error('Usuário e/ou senha inválido(s).');\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('PropertiesCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) {\n    var cities, convertData, revertData;\n    $scope.property = {\n      \"code\": \"123\",\n      \"client\": \"585ecf5bd5af8351e3b894e3\",\n      \"type\": \"apartament\",\n      \"meters\": 100,\n      \"vacancy\": \"1\",\n      \"floor\": \"2\",\n      \"address\": {\n        \"street\": \"Rua Simoes Delgado\",\n        \"number\": \"15\",\n        \"state\": \"SP\",\n        \"city\": \"São Paulo\",\n        \"neighborhood\": \"Jardim 9 de Julho\",\n        \"cep\": \"03952020\"\n      },\n      \"hasSubway\": true,\n      \"subwayStation\": \"Penha\",\n      \"value\": 1.00,\n      \"condominium\": 2.00,\n      \"iptu\": 3.00,\n      \"location\": 4.00,\n      \"payments\": [\"financing\", \"money\", \"others\"],\n      \"exchange\": 0.1,\n      \"difference\": 0.5,\n      \"carValue\": 5,\n      \"settled\": true,\n      \"car\": true,\n      interest: {\n        types: [],\n        allMeters: [10, 500],\n        allVacancies: [0, 10],\n        allFloors: [1, 30],\n        allValues: [1000, 5000000],\n        allIptus: [1000, 15000],\n        allCondominiums: [1000, 500000],\n        allLocations: [1000, 50000]\n      }\n    };\n    $scope.properties = [];\n    $scope.cities = [];\n    $scope.states = [];\n    $scope.clients = [];\n    cities = [];\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      PropertyService.get($stateParams.id).then(function(response) {\n        $scope.property = response.data;\n        convertData();\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return LocationService.getCitiesByState($scope.property.address.state);\n      }).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[$scope.property.address.state] = currentCities;\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      PropertyService.getAll().then(function(response) {\n        $scope.properties = $filter('orderBy')(response.data, '-created');\n        return LocationService.getAllStates();\n      }).then(function(response) {\n        $scope.states = response.data.sort();\n        return ClientService.getAll();\n      }).then(function(response) {\n        $scope.clients = $filter('orderByString')(response.data, 'name');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.showCities = function(state) {\n      if (cities[state] != null) {\n        $scope.cities = cities[state];\n        return false;\n      }\n      $loading.show();\n      return LocationService.getCitiesByState(state).then(function(response) {\n        var currentCities;\n        currentCities = $filter('orderByString')(response.data, 'name');\n        $scope.cities = currentCities;\n        cities[state] = currentCities;\n        return $loading.hide();\n      })[\"catch\"](function() {\n        return $loading.hide();\n      });\n    };\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.property.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      revertData();\n      return PropertyService.saveOrUpdate($scope.property).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.properties');\n      })[\"catch\"](function(response) {\n        if (response.data.code === 8) {\n          $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.');\n        } else {\n          $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.');\n        }\n        return $loading.hide();\n      });\n    };\n    $scope.doRemoveCsv = function(index) {\n      return $scope.newProperties.errors.splice(index, 1);\n    };\n    $scope.doDelete = function(index) {\n      var property;\n      property = $scope.properties[index];\n      if (property._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return PropertyService[\"delete\"](property._id).then(function(response) {\n        $logger.success('Imóvel excluído com sucesso!');\n        $scope.properties.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    $scope.doUploadCSV = function(file) {\n      if ((file == null) || file.type !== 'text/csv') {\n        $logger.error('Por favor, selecione um arquivo válido do tipo .csv');\n        return false;\n      }\n      $rootScope.newProperties = {};\n      $loading.show();\n      return PropertyService.importCsv(file).then(function(response) {\n        $scope.file = {};\n        $rootScope.newProperties = response.data.content;\n        $state.go('dashboard.properties.confirm');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $scope.file = {};\n        $logger.error('Erro ao importar dados. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    convertData = function() {\n      $scope.property.interest.allMeters = [10, 500];\n      $scope.property.interest.allVacancies = [0, 10];\n      $scope.property.interest.allFloors = [1, 30];\n      $scope.property.interest.allValues = [1000, 5000000];\n      $scope.property.interest.allIptus = [1000, 15000];\n      $scope.property.interest.allCondominiums = [1000, 500000];\n      $scope.property.interest.allLocations = [1000, 50000];\n      if ($scope.property.interest.types != null) {\n        $scope.property.interest.types = [];\n      }\n      if ($scope.property.interest.meters != null) {\n        $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min;\n        $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max;\n      }\n      if ($scope.property.interest.condominium != null) {\n        $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min;\n        $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max;\n      }\n      if ($scope.property.interest.vacancy != null) {\n        $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min;\n        $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max;\n      }\n      if ($scope.property.interest.floor != null) {\n        $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min;\n        $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max;\n      }\n      if ($scope.property.interest.value != null) {\n        $scope.property.interest.allValues[0] = $scope.property.interest.value.min;\n        $scope.property.interest.allValues[1] = $scope.property.interest.value.max;\n      }\n      if ($scope.property.interest.iptu != null) {\n        $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min;\n        $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max;\n      }\n      if ($scope.property.interest.location != null) {\n        $scope.property.interest.allLocations[0] = $scope.property.interest.location.min;\n        return $scope.property.interest.allLocations[1] = $scope.property.interest.location.max;\n      }\n    };\n    return revertData = function() {\n      $scope.property.value = $scope.property.value.toFixed(2);\n      $scope.property.condominium = $scope.property.condominium.toFixed(2);\n      $scope.property.location = $scope.property.location.toFixed(2);\n      $scope.property.iptu = $scope.property.iptu.toFixed(2);\n      $scope.property.interest.meters = {\n        min: $scope.property.interest.allMeters[0],\n        max: $scope.property.interest.allMeters[1]\n      };\n      delete $scope.property.interest.allMeters;\n      $scope.property.interest.condominium = {\n        min: $scope.property.interest.allCondominiums[0],\n        max: $scope.property.interest.allCondominiums[1]\n      };\n      delete $scope.property.interest.allCondominiums;\n      $scope.property.interest.vacancy = {\n        min: $scope.property.interest.allVacancies[0],\n        max: $scope.property.interest.allVacancies[1]\n      };\n      delete $scope.property.interest.allVacancies;\n      $scope.property.interest.floor = {\n        min: $scope.property.interest.allFloors[0],\n        max: $scope.property.interest.allFloors[1]\n      };\n      delete $scope.property.interest.allFloors;\n      $scope.property.interest.value = {\n        min: $scope.property.interest.allValues[0],\n        max: $scope.property.interest.allValues[1]\n      };\n      delete $scope.property.interest.allValues;\n      $scope.property.interest.iptu = {\n        min: $scope.property.interest.allIptus[0],\n        max: $scope.property.interest.allIptus[1]\n      };\n      delete $scope.property.interest.allIptus;\n      $scope.property.interest.location = {\n        min: $scope.property.interest.allLocations[0],\n        max: $scope.property.interest.allLocations[1]\n      };\n      return delete $scope.property.interest.allLocations;\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('SearchCtrl', [\n  '$scope', '$rootScope', '$loading', '$logger', 'storage', 'PropertyService', function($scope, $rootScope, $loading, $logger, storage, PropertyService) {\n    var convertData, resetValues;\n    $scope.properties = [];\n    $scope.showFilters = true;\n    $scope.query = {\n      interest: {},\n      property: {}\n    };\n    resetValues = function() {\n      $scope.query.interest.allMeters = [10, 500];\n      $scope.query.interest.allVacancies = [0, 10];\n      $scope.query.interest.allFloors = [1, 30];\n      $scope.query.interest.allValues = [1000, 5000000];\n      $scope.query.interest.allIptus = [1000, 15000];\n      $scope.query.interest.allCondominiums = [1000, 500000];\n      $scope.query.interest.allLocations = [1000, 50000];\n      $scope.query.property.allMeters = [10, 500];\n      $scope.query.property.allVacancies = [0, 10];\n      $scope.query.property.allFloors = [1, 30];\n      $scope.query.property.allValues = [1000, 5000000];\n      $scope.query.property.allIptus = [1000, 15000];\n      $scope.query.property.allCondominiums = [1000, 500000];\n      return $scope.query.property.allLocations = [1000, 50000];\n    };\n    convertData = function() {\n      $scope.query.property.meters = {\n        min: $scope.query.property.allMeters[0],\n        max: $scope.query.property.allMeters[1]\n      };\n      delete $scope.query.property.allMeters;\n      $scope.query.property.condominium = {\n        min: $scope.query.property.allCondominiums[0],\n        max: $scope.query.property.allCondominiums[1]\n      };\n      delete $scope.query.property.allCondominiums;\n      $scope.query.property.vacancy = {\n        min: $scope.query.property.allVacancies[0],\n        max: $scope.query.property.allVacancies[1]\n      };\n      delete $scope.query.property.allVacancies;\n      $scope.query.property.floor = {\n        min: $scope.query.property.allFloors[0],\n        max: $scope.query.property.allFloors[1]\n      };\n      delete $scope.query.property.allFloors;\n      $scope.query.property.value = {\n        min: $scope.query.property.allValues[0],\n        max: $scope.query.property.allValues[1]\n      };\n      delete $scope.query.property.allValues;\n      $scope.query.property.iptu = {\n        min: $scope.query.property.allIptus[0],\n        max: $scope.query.property.allIptus[1]\n      };\n      delete $scope.query.property.allIptus;\n      $scope.query.property.location = {\n        min: $scope.query.property.allLocations[0],\n        max: $scope.query.property.allLocations[1]\n      };\n      delete $scope.query.property.allLocations;\n      $scope.query.interest.meters = {\n        min: $scope.query.interest.allMeters[0],\n        max: $scope.query.interest.allMeters[1]\n      };\n      delete $scope.query.interest.allMeters;\n      $scope.query.interest.condominium = {\n        min: $scope.query.interest.allCondominiums[0],\n        max: $scope.query.interest.allCondominiums[1]\n      };\n      delete $scope.query.interest.allCondominiums;\n      $scope.query.interest.vacancy = {\n        min: $scope.query.interest.allVacancies[0],\n        max: $scope.query.interest.allVacancies[1]\n      };\n      delete $scope.query.interest.allVacancies;\n      $scope.query.interest.floor = {\n        min: $scope.query.interest.allFloors[0],\n        max: $scope.query.interest.allFloors[1]\n      };\n      delete $scope.query.interest.allFloors;\n      $scope.query.interest.value = {\n        min: $scope.query.interest.allValues[0],\n        max: $scope.query.interest.allValues[1]\n      };\n      delete $scope.query.interest.allValues;\n      $scope.query.interest.iptu = {\n        min: $scope.query.interest.allIptus[0],\n        max: $scope.query.interest.allIptus[1]\n      };\n      delete $scope.query.interest.allIptus;\n      $scope.query.interest.location = {\n        min: $scope.query.interest.allLocations[0],\n        max: $scope.query.interest.allLocations[1]\n      };\n      return delete $scope.query.interest.allLocations;\n    };\n    resetValues();\n    $scope.toggleFilters = function() {\n      $scope.showFilters = !$scope.showFilters;\n      if (!$scope.showFilters) {\n        return resetValues();\n      }\n    };\n    return $scope.doFilter = function() {\n      $loading.show();\n      convertData();\n      return PropertyService.search($scope.query).then(function(response) {\n        console.log(response);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao efetuar busca. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n\n'use strict';\nangular.module('oneImobiliaria').controller('UsersCtrl', [\n  '$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'UserGroupService', 'UserService', function($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) {\n    $scope.user = {};\n    $scope.users = [];\n    $scope.groups = UserGroupService.getAll();\n    $scope.edit = true;\n    $loading.show();\n    if ($stateParams.id) {\n      UserService.get($stateParams.id).then(function(response) {\n        $scope.user = response.data;\n        $scope.edit = false;\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    } else {\n      UserService.getAll().then(function(response) {\n        $scope.users = $filter('orderBy')(response.data, '-created');\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao buscar usuários. Por favor, atualize a página.');\n        return $loading.hide();\n      });\n    }\n    $scope.canEdit = function() {\n      return $scope.edit = true;\n    };\n    $scope.saveOrUpdate = function() {\n      if (!$rootScope.forms.user.$valid) {\n        $logger.error('Preencha todos os dados obrigatórios.');\n        return;\n      }\n      $loading.show();\n      return UserService.saveOrUpdate($scope.user).then(function(response) {\n        $loading.hide();\n        return $state.go('dashboard.users');\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n    return $scope.doDelete = function(index) {\n      var user;\n      user = $scope.users[index];\n      if (user._id === storage.getCode()) {\n        return false;\n      }\n      $loading.show();\n      return UserService[\"delete\"](user._id).then(function(response) {\n        $logger.success('Usuário excluído com sucesso!');\n        $scope.users.splice(index, 1);\n        return $loading.hide();\n      })[\"catch\"](function(response) {\n        $logger.error('Erro ao excluir usuário. Por favor, tente novamente.');\n        return $loading.hide();\n      });\n    };\n  }\n]);\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'AccountCtrl', ['$scope', '$rootScope', '$loading', '$logger', 'storage', 'UserService', ($scope, $rootScope, $loading, $logger, storage, UserService) ->\n\n  $scope.user = {}\n  $scope.edit = false\n\n  $loading.show()\n  UserService.getMyAccount()\n  .then (response) ->\n    $scope.user = response.data\n    $loading.hide()\n  .catch (response) ->\n    $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.')\n    $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.doUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    UserService.update($scope.user)\n    .then (response) ->\n      $logger.success('Sua conta foi atualizada com sucesso!')\n      storage.updateToken(response.data.token)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao editar sua conta. Por favor, tente novamente.')\n      $loading.hide()\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'ClientsCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'ClientService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, ClientService) ->\n\n  $scope.client = {}\n  $scope.clients = []\n\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    ClientService.get($stateParams.id)\n    .then (response) ->\n      $scope.client = response.data\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar clientes. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar clientes. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.client.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    ClientService.saveOrUpdate($scope.client)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.clients')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar cliente. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    client = $scope.clients[index]\n    return false if client._id == storage.getCode()\n\n    $loading.show()\n    ClientService.delete(client._id)\n    .then (response) ->\n      $logger.success('Cliente excluído com sucesso!')\n      $scope.clients.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir cliente. Por favor, tente novamente.')\n      $loading.hide()\n\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'LoginCtrl', ['$scope', '$rootScope', '$state', '$logger', 'storage', 'UserService', ($scope, $rootScope, $state, $logger, storage, UserService) ->\n\n  $scope.user = {}\n\n  $scope.doLogin = () ->\n    if !$rootScope.forms.login.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $scope.user.origin = 'admin'\n    UserService.doLogin($scope.user)\n    .then (response) ->\n      storage.setCodes(response.data)\n      $state.go('dashboard.home')\n    .catch (response) ->\n      $logger.error('Usuário e/ou senha inválido(s).')\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'PropertiesCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage', 'PropertyService', 'LocationService', 'ClientService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, PropertyService, LocationService, ClientService) ->\n\n#  $scope.property =\n#    payments: []\n#    interest:\n#      types: []\n#      allMeters:  [10, 500]\n#      allVacancies: [0, 10]\n#      allFloors: [1, 30]\n#      allValues: [1000, 5000000]\n#      allIptus: [1000, 15000]\n#      allCondominiums: [1000, 500000]\n#      allLocations: [1000, 50000]\n\n  $scope.property = {\n    \"code\":\"123\",\n    \"client\":\"585ecf5bd5af8351e3b894e3\",\n    \"type\":\"apartament\",\n    \"meters\":100,\n    \"vacancy\":\"1\",\n    \"floor\":\"2\",\n    \"address\":{\n      \"street\":\"Rua Simoes Delgado\",\n      \"number\":\"15\",\n      \"state\":\"SP\",\n      \"city\":\"São Paulo\",\n      \"neighborhood\":\"Jardim 9 de Julho\",\n      \"cep\":\"03952020\"\n    },\n    \"hasSubway\":true,\n    \"subwayStation\":\"Penha\",\n    \"value\":1.00,\n    \"condominium\":2.00,\n    \"iptu\":3.00,\n    \"location\":4.00,\n    \"payments\": [\n      \"financing\",\n      \"money\",\n      \"others\"\n    ],\n    \"exchange\":0.1,\n    \"difference\":0.5,\n    \"carValue\":5,\n    \"settled\":true,\n    \"car\":true\n    interest:\n      types: []\n      allMeters:  [10, 500]\n      allVacancies: [0, 10]\n      allFloors: [1, 30]\n      allValues: [1000, 5000000]\n      allIptus: [1000, 15000]\n      allCondominiums: [1000, 500000]\n      allLocations: [1000, 50000]\n  }\n\n  $scope.properties = []\n  $scope.cities = []\n  $scope.states = []\n  $scope.clients = []\n  cities = []\n\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    PropertyService.get($stateParams.id)\n    .then (response) ->\n      $scope.property = response.data\n      convertData()\n      return LocationService.getAllStates()\n    .then (response) ->\n      $scope.states = response.data.sort()\n      return LocationService.getCitiesByState($scope.property.address.state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[$scope.property.address.state] = currentCities\n      return ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderByString')(response.data, 'name')\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    PropertyService.getAll()\n    .then (response) ->\n      $scope.properties = $filter('orderBy')(response.data, '-created')\n      return LocationService.getAllStates()\n    .then (response) ->\n      $scope.states = response.data.sort()\n      return ClientService.getAll()\n    .then (response) ->\n      $scope.clients = $filter('orderByString')(response.data, 'name')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar imóveis. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.showCities = (state) ->\n\n    if cities[state]?\n      $scope.cities = cities[state]\n      return false\n\n    $loading.show()\n    LocationService.getCitiesByState(state)\n    .then (response) ->\n      currentCities = $filter('orderByString')(response.data, 'name')\n      $scope.cities = currentCities\n      cities[state] = currentCities\n      $loading.hide()\n    .catch () ->\n      $loading.hide()\n\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.property.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n\n    revertData()\n    PropertyService.saveOrUpdate($scope.property)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.properties')\n    .catch (response) ->\n      if response.data.code == 8\n        $logger.error('Verifique o endereço digitado. Não foi possível validar esta informação.')\n      else\n        $logger.error('Erro ao criar/editar imóvel. Por favor, tente novamente.')\n      $loading.hide()\n\n\n  $scope.doRemoveCsv = (index) ->\n    $scope.newProperties.errors.splice(index, 1)\n\n\n  $scope.doDelete = (index) ->\n    property = $scope.properties[index]\n    return false if property._id == storage.getCode()\n\n    $loading.show()\n    PropertyService.delete(property._id)\n    .then (response) ->\n      $logger.success('Imóvel excluído com sucesso!')\n      $scope.properties.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir imóvel. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doUploadCSV = (file) ->\n    if not file? or file.type != 'text/csv'\n      $logger.error('Por favor, selecione um arquivo válido do tipo .csv')\n      return false\n\n    $rootScope.newProperties = {}\n\n    $loading.show()\n    PropertyService.importCsv(file)\n    .then (response) ->\n      $scope.file = {}\n      $rootScope.newProperties = response.data.content\n      $state.go('dashboard.properties.confirm')\n      $loading.hide()\n    .catch (response) ->\n      $scope.file = {}\n      $logger.error('Erro ao importar dados. Por favor, tente novamente.')\n      $loading.hide()\n\n\n\n\n  convertData = () ->\n    $scope.property.interest.allMeters =  [10, 500]\n    $scope.property.interest.allVacancies = [0, 10]\n    $scope.property.interest.allFloors = [1, 30]\n    $scope.property.interest.allValues = [1000, 5000000]\n    $scope.property.interest.allIptus = [1000, 15000]\n    $scope.property.interest.allCondominiums = [1000, 500000]\n    $scope.property.interest.allLocations = [1000, 50000]\n\n    if $scope.property.interest.types?\n      $scope.property.interest.types = []\n\n    if $scope.property.interest.meters?\n      $scope.property.interest.allMeters[0] = $scope.property.interest.meters.min\n      $scope.property.interest.allMeters[1] = $scope.property.interest.meters.max\n\n    if $scope.property.interest.condominium?\n      $scope.property.interest.allCondominiums[0] = $scope.property.interest.condominium.min\n      $scope.property.interest.allCondominiums[1] = $scope.property.interest.condominium.max\n\n    if $scope.property.interest.vacancy?\n      $scope.property.interest.allVacancies[0] = $scope.property.interest.vacancy.min\n      $scope.property.interest.allVacancies[1] = $scope.property.interest.vacancy.max\n\n    if $scope.property.interest.floor?\n      $scope.property.interest.allFloors[0] = $scope.property.interest.floor.min\n      $scope.property.interest.allFloors[1] = $scope.property.interest.floor.max\n\n    if $scope.property.interest.value?\n      $scope.property.interest.allValues[0] = $scope.property.interest.value.min\n      $scope.property.interest.allValues[1] = $scope.property.interest.value.max\n\n    if $scope.property.interest.iptu?\n      $scope.property.interest.allIptus[0] = $scope.property.interest.iptu.min\n      $scope.property.interest.allIptus[1] = $scope.property.interest.iptu.max\n\n    if $scope.property.interest.location?\n      $scope.property.interest.allLocations[0] = $scope.property.interest.location.min\n      $scope.property.interest.allLocations[1] = $scope.property.interest.location.max\n\n\n  revertData = () ->\n    $scope.property.value = $scope.property.value.toFixed(2)\n    $scope.property.condominium = $scope.property.condominium.toFixed(2)\n    $scope.property.location = $scope.property.location.toFixed(2)\n    $scope.property.iptu = $scope.property.iptu.toFixed(2)\n\n    $scope.property.interest.meters =\n      min: $scope.property.interest.allMeters[0]\n      max: $scope.property.interest.allMeters[1]\n    delete $scope.property.interest.allMeters\n\n    $scope.property.interest.condominium =\n      min: $scope.property.interest.allCondominiums[0]\n      max: $scope.property.interest.allCondominiums[1]\n    delete $scope.property.interest.allCondominiums\n\n    $scope.property.interest.vacancy =\n      min: $scope.property.interest.allVacancies[0]\n      max: $scope.property.interest.allVacancies[1]\n    delete $scope.property.interest.allVacancies\n\n    $scope.property.interest.floor =\n      min: $scope.property.interest.allFloors[0]\n      max: $scope.property.interest.allFloors[1]\n    delete $scope.property.interest.allFloors\n\n    $scope.property.interest.value =\n      min: $scope.property.interest.allValues[0]\n      max: $scope.property.interest.allValues[1]\n    delete $scope.property.interest.allValues\n\n    $scope.property.interest.iptu =\n      min: $scope.property.interest.allIptus[0]\n      max: $scope.property.interest.allIptus[1]\n    delete $scope.property.interest.allIptus\n\n    $scope.property.interest.location =\n      min: $scope.property.interest.allLocations[0]\n      max: $scope.property.interest.allLocations[1]\n    delete $scope.property.interest.allLocations\n]\n","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'SearchCtrl', ['$scope', '$rootScope', '$loading', '$logger', 'storage', 'PropertyService', ($scope, $rootScope, $loading, $logger, storage, PropertyService) ->\n\n  $scope.properties = []\n  $scope.showFilters = true\n\n  $scope.query =\n    interest: {}\n    property: {}\n\n#  $loading.show()\n#  UserService.getMyAccount()\n#  .then (response) ->\n#    $scope.user = response.data\n#    $loading.hide()\n#  .catch (response) ->\n#    $logger.error('Erro ao buscar sua conta. Por favor, atualize a página.')\n#    $loading.hide()\n\n  resetValues = () ->\n    $scope.query.interest.allMeters =  [10, 500]\n    $scope.query.interest.allVacancies = [0, 10]\n    $scope.query.interest.allFloors = [1, 30]\n    $scope.query.interest.allValues = [1000, 5000000]\n    $scope.query.interest.allIptus = [1000, 15000]\n    $scope.query.interest.allCondominiums = [1000, 500000]\n    $scope.query.interest.allLocations = [1000, 50000]\n\n    $scope.query.property.allMeters =  [10, 500]\n    $scope.query.property.allVacancies = [0, 10]\n    $scope.query.property.allFloors = [1, 30]\n    $scope.query.property.allValues = [1000, 5000000]\n    $scope.query.property.allIptus = [1000, 15000]\n    $scope.query.property.allCondominiums = [1000, 500000]\n    $scope.query.property.allLocations = [1000, 50000]\n\n  convertData = () ->\n#    $scope.property.value = $scope.property.value.toFixed(2)\n#    $scope.property.condominium = $scope.property.condominium.toFixed(2)\n#    $scope.property.location = $scope.property.location.toFixed(2)\n#    $scope.property.iptu = $scope.property.iptu.toFixed(2)\n\n    $scope.query.property.meters =\n      min: $scope.query.property.allMeters[0]\n      max: $scope.query.property.allMeters[1]\n    delete $scope.query.property.allMeters\n\n    $scope.query.property.condominium =\n      min: $scope.query.property.allCondominiums[0]\n      max: $scope.query.property.allCondominiums[1]\n    delete $scope.query.property.allCondominiums\n\n    $scope.query.property.vacancy =\n      min: $scope.query.property.allVacancies[0]\n      max: $scope.query.property.allVacancies[1]\n    delete $scope.query.property.allVacancies\n\n    $scope.query.property.floor =\n      min: $scope.query.property.allFloors[0]\n      max: $scope.query.property.allFloors[1]\n    delete $scope.query.property.allFloors\n\n    $scope.query.property.value =\n      min: $scope.query.property.allValues[0]\n      max: $scope.query.property.allValues[1]\n    delete $scope.query.property.allValues\n\n    $scope.query.property.iptu =\n      min: $scope.query.property.allIptus[0]\n      max: $scope.query.property.allIptus[1]\n    delete $scope.query.property.allIptus\n\n    $scope.query.property.location =\n      min: $scope.query.property.allLocations[0]\n      max: $scope.query.property.allLocations[1]\n    delete $scope.query.property.allLocations\n\n    $scope.query.interest.meters =\n      min: $scope.query.interest.allMeters[0]\n      max: $scope.query.interest.allMeters[1]\n    delete $scope.query.interest.allMeters\n\n    $scope.query.interest.condominium =\n      min: $scope.query.interest.allCondominiums[0]\n      max: $scope.query.interest.allCondominiums[1]\n    delete $scope.query.interest.allCondominiums\n\n    $scope.query.interest.vacancy =\n      min: $scope.query.interest.allVacancies[0]\n      max: $scope.query.interest.allVacancies[1]\n    delete $scope.query.interest.allVacancies\n\n    $scope.query.interest.floor =\n      min: $scope.query.interest.allFloors[0]\n      max: $scope.query.interest.allFloors[1]\n    delete $scope.query.interest.allFloors\n\n    $scope.query.interest.value =\n      min: $scope.query.interest.allValues[0]\n      max: $scope.query.interest.allValues[1]\n    delete $scope.query.interest.allValues\n\n    $scope.query.interest.iptu =\n      min: $scope.query.interest.allIptus[0]\n      max: $scope.query.interest.allIptus[1]\n    delete $scope.query.interest.allIptus\n\n    $scope.query.interest.location =\n      min: $scope.query.interest.allLocations[0]\n      max: $scope.query.interest.allLocations[1]\n    delete $scope.query.interest.allLocations\n\n  resetValues()\n\n  $scope.toggleFilters = () ->\n    $scope.showFilters = !$scope.showFilters\n    resetValues() if !$scope.showFilters\n\n  $scope.doFilter = () ->\n\n    $loading.show()\n    convertData()\n    PropertyService.search($scope.query)\n    .then (response) ->\n      console.log(response);\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao efetuar busca. Por favor, tente novamente.')\n      $loading.hide()\n]","'use strict'\n\nangular.module('oneImobiliaria')\n.controller 'UsersCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$loading', '$logger', 'storage','UserGroupService', 'UserService', ($scope, $rootScope, $state, $stateParams, $filter, $loading, $logger, storage, UserGroupService, UserService) ->\n\n  $scope.user = {}\n  $scope.users = []\n\n  $scope.groups = UserGroupService.getAll()\n  $scope.edit = true\n\n  $loading.show()\n  if $stateParams.id\n    UserService.get($stateParams.id)\n    .then (response) ->\n      $scope.user = response.data\n      $scope.edit = false\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n  else\n    UserService.getAll()\n    .then (response) ->\n      $scope.users = $filter('orderBy')(response.data, '-created')\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao buscar usuários. Por favor, atualize a página.')\n      $loading.hide()\n\n  $scope.canEdit = () ->\n    $scope.edit = true\n\n  $scope.saveOrUpdate = () ->\n    if !$rootScope.forms.user.$valid\n      $logger.error('Preencha todos os dados obrigatórios.')\n      return\n\n    $loading.show()\n    UserService.saveOrUpdate($scope.user)\n    .then (response) ->\n      $loading.hide()\n      $state.go('dashboard.users')\n    .catch (response) ->\n      $logger.error('Erro ao criar/editar usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n  $scope.doDelete = (index) ->\n\n    user = $scope.users[index]\n    return false if user._id == storage.getCode()\n\n    $loading.show()\n    UserService.delete(user._id)\n    .then (response) ->\n      $logger.success('Usuário excluído com sucesso!')\n      $scope.users.splice(index, 1)\n      $loading.hide()\n    .catch (response) ->\n      $logger.error('Erro ao excluir usuário. Por favor, tente novamente.')\n      $loading.hide()\n\n]"]}